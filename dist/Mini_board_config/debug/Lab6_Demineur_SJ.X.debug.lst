

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 12:47:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,minocg
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,minocg
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,minocg
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,minocg
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K20 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  00213C                     __pidataBANK0:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _randx
    95  00213C  0001               	dw	1
    96  00213E  0000               	dw	0
    97                           
    98                           	psect	idataBANK1
    99  001F9A                     __pidataBANK1:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for _matCGRAM
   103  001F9A  08                 	db	8
   104  001F9B  04                 	db	4
   105  001F9C  04                 	db	4
   106  001F9D  0A                 	db	10
   107  001F9E  11                 	db	17
   108  001F9F  1F                 	db	31
   109  001FA0  11                 	db	17
   110  001FA1  00                 	db	0
   111  001FA2  1F                 	db	31
   112  001FA3  1B                 	db	27
   113  001FA4  11                 	db	17
   114  001FA5  11                 	db	17
   115  001FA6  11                 	db	17
   116  001FA7  11                 	db	17
   117  001FA8  1B                 	db	27
   118  001FA9  1F                 	db	31
   119  001FAA  03                 	db	3
   120  001FAB  04                 	db	4
   121  001FAC  0A                 	db	10
   122  001FAD  15                 	db	21
   123  001FAE  1F                 	db	31
   124  001FAF  15                 	db	21
   125  001FB0  0A                 	db	10
   126  001FB1  00                 	db	0
   127  001FB2  1F                 	db	31
   128  001FB3  11                 	db	17
   129  001FB4  11                 	db	17
   130  001FB5  1F                 	db	31
   131  001FB6  10                 	db	16
   132  001FB7  10                 	db	16
   133  001FB8  10                 	db	16
   134  001FB9  10                 	db	16
   135  001FBA  11                 	db	17
   136  001FBB  11                 	db	17
   137  001FBC  15                 	db	21
   138  001FBD  15                 	db	21
   139  001FBE  0E                 	db	14
   140  001FBF  0A                 	db	10
   141  001FC0  15                 	db	21
   142  001FC1  00                 	db	0
   143  001FC2  11                 	db	17
   144  001FC3  0A                 	db	10
   145  001FC4  04                 	db	4
   146  001FC5  1B                 	db	27
   147  001FC6  11                 	db	17
   148  001FC7  1B                 	db	27
   149  001FC8  15                 	db	21
   150  001FC9  00                 	db	0
   151  001FCA  1B                 	db	27
   152  001FCB  0E                 	db	14
   153  001FCC  1B                 	db	27
   154  001FCD  1B                 	db	27
   155  001FCE  1B                 	db	27
   156  001FCF  11                 	db	17
   157  001FD0  11                 	db	17
   158  001FD1  00                 	db	0
   159  001FD2  0A                 	db	10
   160  001FD3  04                 	db	4
   161  001FD4  15                 	db	21
   162  001FD5  15                 	db	21
   163  001FD6  1B                 	db	27
   164  001FD7  0A                 	db	10
   165  001FD8  04                 	db	4
   166  001FD9  00                 	db	0
   167                           
   168                           	psect	smallconst
   169  000600                     __psmallconst:
   170                           	opt callstack 0
   171  000600  00                 	db	0
   172  000601                     menuAccueil@F2903:
   173                           	opt callstack 0
   174  000601  4C                 	db	76
   175  000602  61                 	db	97
   176  000603  62                 	db	98
   177  000604  6F                 	db	111
   178  000605  72                 	db	114
   179  000606  61                 	db	97
   180  000607  74                 	db	116
   181  000608  6F                 	db	111
   182  000609  69                 	db	105
   183  00060A  72                 	db	114
   184  00060B  65                 	db	101
   185  00060C  20                 	db	32
   186  00060D  36                 	db	54
   187  00060E  20                 	db	32
   188  00060F  00                 	db	0
   189  000610  00                 	db	0
   190  000611  00                 	db	0
   191  000612  00                 	db	0
   192  000613  00                 	db	0
   193  000614  00                 	db	0
   194  000615  53                 	db	83
   195  000616  69                 	db	105
   196  000617  6D                 	db	109
   197  000618  6F                 	db	111
   198  000619  6E                 	db	110
   199  00061A  20                 	db	32
   200  00061B  4A                 	db	74
   201  00061C  6F                 	db	111
   202  00061D  75                 	db	117
   203  00061E  72                 	db	114
   204  00061F  64                 	db	100
   205  000620  65                 	db	101
   206  000621  6E                 	db	110
   207  000622  61                 	db	97
   208  000623  69                 	db	105
   209  000624  73                 	db	115
   210  000625  00                 	db	0
   211  000626  00                 	db	0
   212  000627  00                 	db	0
   213  000628  00                 	db	0
   214  000629                     __end_ofmenuAccueil@F2903:
   215                           	opt callstack 0
   216  0000                     _PORTAbits	set	3968
   217  0000                     _PORTD	set	3971
   218  0000                     _TRISCbits	set	3988
   219  0000                     _ANSELbits	set	3966
   220  0000                     _TRISA	set	3986
   221  0000                     _ANSEL	set	3966
   222  0000                     _TRISB	set	3987
   223  0000                     _ANSELH	set	3967
   224  0000                     _TRISD	set	3989
   225  0000                     _PORTBbits	set	3969
   226  0000                     _TMR1	set	4046
   227  0000                     _RCREG	set	4014
   228  0000                     _TXREG	set	4013
   229  0000                     _RCSTAbits	set	4011
   230  0000                     _TXSTAbits	set	4012
   231  0000                     _BAUDCONbits	set	4024
   232  0000                     _SPBRG	set	4015
   233  0000                     _SPBRGH	set	4016
   234  0000                     _ADCON2bits	set	4032
   235  0000                     _ADCON1	set	4033
   236  0000                     _T1CONbits	set	4045
   237  0000                     _ADRESH	set	4036
   238  0000                     _ADCON0bits	set	4034
   239  0000                     _RCIF	set	31989
   240  000629                     STR_1:
   241  000629  59                 	db	89	;'Y'
   242  00062A  4F                 	db	79	;'O'
   243  00062B  55                 	db	85	;'U'
   244  00062C  20                 	db	32
   245  00062D  57                 	db	87	;'W'
   246  00062E  49                 	db	73	;'I'
   247  00062F  4E                 	db	78	;'N'
   248  000630  21                 	db	33
   249  000631  00                 	db	0
   250  000632                     STR_2:
   251  000632  2B                 	db	43
   252  000633  31                 	db	49	;'1'
   253  000634  20                 	db	32
   254  000635  4D                 	db	77	;'M'
   255  000636  69                 	db	105	;'i'
   256  000637  6E                 	db	110	;'n'
   257  000638  65                 	db	101	;'e'
   258  000639  00                 	db	0
   259                           
   260                           ; #config settings
   261  00063A  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  001E50                     __pcinit:
   265                           	opt callstack 0
   266  001E50                     start_initialization:
   267                           	opt callstack 0
   268  001E50                     __initialization:
   269                           	opt callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK1 (64 bytes)
   272                           ; load TBLPTR registers with __pidataBANK1
   273  001E50  0E9A               	movlw	low __pidataBANK1
   274  001E52  6EF6               	movwf	tblptrl,c
   275  001E54  0E1F               	movlw	high __pidataBANK1
   276  001E56  6EF7               	movwf	tblptrh,c
   277  001E58  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   278  001E5A  6EF8               	movwf	tblptru,c
   279  001E5C  EE01  F054         	lfsr	0,__pdataBANK1
   280  001E60  EE10 F040          	lfsr	1,64
   281  001E64                     copy_data0:
   282  001E64  0009               	tblrd		*+
   283  001E66  CFF5 FFEE          	movff	tablat,postinc0
   284  001E6A  50E5               	movf	postdec1,w,c
   285  001E6C  50E1               	movf	fsr1l,w,c
   286  001E6E  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to BANK0 (4 bytes)
   289                           ; load TBLPTR registers with __pidataBANK0
   290  001E70  0E3C               	movlw	low __pidataBANK0
   291  001E72  6EF6               	movwf	tblptrl,c
   292  001E74  0E21               	movlw	high __pidataBANK0
   293  001E76  6EF7               	movwf	tblptrh,c
   294  001E78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   295  001E7A  6EF8               	movwf	tblptru,c
   296  001E7C  EE00  F0F6         	lfsr	0,__pdataBANK0
   297  001E80  EE10 F004          	lfsr	1,4
   298  001E84                     copy_data1:
   299  001E84  0009               	tblrd		*+
   300  001E86  CFF5 FFEE          	movff	tablat,postinc0
   301  001E8A  50E5               	movf	postdec1,w,c
   302  001E8C  50E1               	movf	fsr1l,w,c
   303  001E8E  E1FA               	bnz	copy_data1
   304                           
   305                           ; Clear objects allocated to BANK1 (84 bytes)
   306  001E90  EE01  F000         	lfsr	0,__pbssBANK1
   307  001E94  0E54               	movlw	84
   308  001E96                     clear_0:
   309  001E96  6AEE               	clrf	postinc0,c
   310  001E98  06E8               	decf	wreg,f,c
   311  001E9A  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (84 bytes)
   314  001E9C  EE00  F060         	lfsr	0,__pbssBANK0
   315  001EA0  0E54               	movlw	84
   316  001EA2                     clear_1:
   317  001EA2  6AEE               	clrf	postinc0,c
   318  001EA4  06E8               	decf	wreg,f,c
   319  001EA6  E1FD               	bnz	clear_1
   320  001EA8                     end_of_initialization:
   321                           	opt callstack 0
   322  001EA8                     __end_of__initialization:
   323                           	opt callstack 0
   324  001EA8  0100               	movlb	0
   325  001EAA  EFE5  F006         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssBANK0
   328  000060                     __pbssBANK0:
   329                           	opt callstack 0
   330  000060                     _m_tabMines:
   331                           	opt callstack 0
   332  000060                     	ds	84
   333                           
   334                           	psect	dataBANK0
   335  0000F6                     __pdataBANK0:
   336                           	opt callstack 0
   337  0000F6                     _randx:
   338                           	opt callstack 0
   339  0000F6                     	ds	4
   340                           
   341                           	psect	bssBANK1
   342  000100                     __pbssBANK1:
   343                           	opt callstack 0
   344  000100                     _m_tabVue:
   345                           	opt callstack 0
   346  000100                     	ds	84
   347                           
   348                           	psect	dataBANK1
   349  000154                     __pdataBANK1:
   350                           	opt callstack 0
   351  000154                     _matCGRAM:
   352                           	opt callstack 0
   353  000154                     	ds	64
   354                           
   355                           	psect	cstackBANK0
   356  0000B4                     __pcstackBANK0:
   357                           	opt callstack 0
   358  0000B4                     ??_initTabVue:
   359  0000B4                     ??_getAnalog:
   360  0000B4                     ??_videMines:
   361  0000B4                     ??_lcd_ecrireDonnees:
   362  0000B4                     ??_lcd_busy:
   363  0000B4                     ?___wmul:
   364                           	opt callstack 0
   365  0000B4                     ?___lmul:
   366                           	opt callstack 0
   367  0000B4                     ___wmul@multiplier:
   368                           	opt callstack 0
   369  0000B4                     srand@x:
   370                           	opt callstack 0
   371  0000B4                     ___lmul@multiplier:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x0
   375  0000B4                     	ds	1
   376  0000B5                     getAnalog@canal:
   377                           	opt callstack 0
   378  0000B5                     lcd_ecrireDonnees@donnee:
   379                           	opt callstack 0
   380  0000B5                     lcd_busy@adresse:
   381                           	opt callstack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384  0000B5                     	ds	1
   385  0000B6                     ??_lcd_resetSequence:
   386  0000B6                     initTabVue@i:
   387                           	opt callstack 0
   388  0000B6                     videMines@i:
   389                           	opt callstack 0
   390  0000B6                     lcd_wrCom@commande:
   391                           	opt callstack 0
   392  0000B6                     lcd_wrData@caractere:
   393                           	opt callstack 0
   394  0000B6                     ___wmul@multiplicand:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  0000B6                     	ds	1
   399  0000B7                     ??_lcd_initCGRam:
   400  0000B7                     initTabVue@j:
   401                           	opt callstack 0
   402  0000B7                     videMines@j:
   403                           	opt callstack 0
   404  0000B7                     lcd_gotoXY@y:
   405                           	opt callstack 0
   406  0000B7                     lcd_ecritChar@car:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410  0000B7                     	ds	1
   411  0000B8                     initTabVue@k:
   412                           	opt callstack 0
   413  0000B8                     lcd_gotoXY@x:
   414                           	opt callstack 0
   415  0000B8                     lcd_ecritChar@posRam:
   416                           	opt callstack 0
   417  0000B8                     ___wmul@product:
   418                           	opt callstack 0
   419  0000B8                     ___lmul@multiplicand:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x4
   423  0000B8                     	ds	1
   424  0000B9                     lcd_initCGRam@i:
   425                           	opt callstack 0
   426  0000B9                     deplace@x:
   427                           	opt callstack 0
   428  0000B9                     lcd_putMessage@chaine:
   429                           	opt callstack 0
   430                           
   431                           ; 3 bytes @ 0x5
   432  0000B9                     	ds	1
   433  0000BA                     enleveTuilesAutour@y:
   434                           	opt callstack 0
   435  0000BA                     lcd_initCGRam@j:
   436                           	opt callstack 0
   437  0000BA                     calculToucheCombien@ligne:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x6
   441  0000BA                     	ds	1
   442  0000BB                     ??_enleveTuilesAutour:
   443  0000BB                     deplace@y:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x7
   447  0000BB                     	ds	1
   448  0000BC                     ??_lcd_putMessage:
   449  0000BC                     calculToucheCombien@colonne:
   450                           	opt callstack 0
   451  0000BC                     ___lmul@product:
   452                           	opt callstack 0
   453                           
   454                           ; 4 bytes @ 0x8
   455  0000BC                     	ds	1
   456  0000BD                     ??_deplace:
   457                           
   458                           ; 1 bytes @ 0x9
   459  0000BD                     	ds	1
   460  0000BE                     ??_calculToucheCombien:
   461                           
   462                           ; 1 bytes @ 0xA
   463  0000BE                     	ds	2
   464  0000C0                     ?_rand:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0xC
   468  0000C0                     	ds	1
   469  0000C1                     lcd_putMessage@j:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0xD
   473  0000C1                     	ds	1
   474  0000C2                     ??_menuAccueil:
   475  0000C2                     ??_afficheTabVue:
   476  0000C2                     ??_afficheTabMines:
   477  0000C2                     ??_afficheGagne:
   478  0000C2                     ?___awmod:
   479                           	opt callstack 0
   480  0000C2                     ___awmod@dividend:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0xE
   484  0000C2                     	ds	1
   485  0000C3                     calculToucheCombien@nombreTouche:
   486                           	opt callstack 0
   487  0000C3                     enleveTuilesAutour@x:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0xF
   491  0000C3                     	ds	1
   492  0000C4                     ??_metToucheCombien:
   493  0000C4                     afficheTabVue@i:
   494                           	opt callstack 0
   495  0000C4                     afficheTabMines@i:
   496                           	opt callstack 0
   497  0000C4                     enleveTuilesAutour@xTabCol:
   498                           	opt callstack 0
   499  0000C4                     gagne@pMines:
   500                           	opt callstack 0
   501  0000C4                     ___awmod@divisor:
   502                           	opt callstack 0
   503  0000C4                     menuAccueil@menuMsgs:
   504                           	opt callstack 0
   505                           
   506                           ; 40 bytes @ 0x10
   507  0000C4                     	ds	1
   508  0000C5                     enleveTuilesAutour@yTabLigne:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x11
   512  0000C5                     	ds	1
   513  0000C6                     ??_gagne:
   514  0000C6                     enleveTuilesAutour@j:
   515                           	opt callstack 0
   516  0000C6                     ___awmod@counter:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x12
   520  0000C6                     	ds	1
   521  0000C7                     metToucheCombien@minesTouche:
   522                           	opt callstack 0
   523  0000C7                     enleveTuilesAutour@i:
   524                           	opt callstack 0
   525  0000C7                     ___awmod@sign:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x13
   529  0000C7                     	ds	1
   530  0000C8                     metToucheCombien@k:
   531                           	opt callstack 0
   532  0000C8                     demine@y:
   533                           	opt callstack 0
   534  0000C8                     rempliMines@nb:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  0000C8                     	ds	1
   539  0000C9                     ??_demine:
   540  0000C9                     metToucheCombien@i:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x15
   544  0000C9                     	ds	1
   545  0000CA                     ??_rempliMines:
   546  0000CA                     metToucheCombien@j:
   547                           	opt callstack 0
   548  0000CA                     gagne@compteurBombe:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0x16
   552  0000CA                     	ds	1
   553  0000CB                     gagne@i:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x17
   557  0000CB                     	ds	1
   558  0000CC                     gagne@j:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x18
   562  0000CC                     	ds	1
   563  0000CD                     rempliMines@mineReste:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0x19
   567  0000CD                     	ds	1
   568  0000CE                     rempliMines@x:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0x1A
   572  0000CE                     	ds	1
   573  0000CF                     rempliMines@y:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x1B
   577  0000CF                     	ds	2
   578  0000D1                     demine@x:
   579                           	opt callstack 0
   580                           
   581                           ; 1 bytes @ 0x1D
   582  0000D1                     	ds	27
   583  0000EC                     ??_main:
   584                           
   585                           ; 1 bytes @ 0x38
   586  0000EC                     	ds	5
   587  0000F1                     main@finPartie:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0x3D
   591  0000F1                     	ds	1
   592  0000F2                     main@nbMines:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x3E
   596  0000F2                     	ds	2
   597  0000F4                     main@posY:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x40
   601  0000F4                     	ds	1
   602  0000F5                     main@posX:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x41
   606  0000F5                     	ds	1
   607                           
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 71 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  nbMines         2   62[BANK0 ] int 
   618 ;;  posX            1   65[BANK0 ] unsigned char 
   619 ;;  posY            1   64[BANK0 ] unsigned char 
   620 ;;  finPartie       1   61[BANK0 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   630 ;;      Params:         0       0       0       0       0       0       0
   631 ;;      Locals:         0       5       0       0       0       0       0
   632 ;;      Temps:          0       5       0       0       0       0       0
   633 ;;      Totals:         0      10       0       0       0       0       0
   634 ;;Total ram usage:       10 bytes
   635 ;; Hardware stack levels required when called:    7
   636 ;; This function calls:
   637 ;;		_afficheTabMines
   638 ;;		_afficheTabVue
   639 ;;		_demine
   640 ;;		_deplace
   641 ;;		_gagne
   642 ;;		_initTabVue
   643 ;;		_init_serie
   644 ;;		_initialisation
   645 ;;		_lcd_ecritChar
   646 ;;		_lcd_init
   647 ;;		_lcd_montreCurseur
   648 ;;		_menuAccueil
   649 ;;		_metToucheCombien
   650 ;;		_rempliMines
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657  000DCA                     __ptext0:
   658                           	opt callstack 0
   659  000DCA                     _main:
   660                           	opt callstack 24
   661  000DCA                     
   662                           ;main.c: 74: unsigned char posY =4/2;
   663  000DCA  0E02               	movlw	2
   664  000DCC  0100               	movlb	0	; force () banked
   665  000DCE  6FF4               	movwf	main@posY& (0+255),b
   666                           
   667                           ;main.c: 75: unsigned char posX =20/2;
   668  000DD0  0E0A               	movlw	10
   669  000DD2  0100               	movlb	0	; force () banked
   670  000DD4  6FF5               	movwf	main@posX& (0+255),b
   671                           
   672                           ;main.c: 76: int nbMines=1;
   673  000DD6  0E00               	movlw	0
   674  000DD8  0100               	movlb	0	; force () banked
   675  000DDA  6FF3               	movwf	(main@nbMines+1)& (0+255),b
   676  000DDC  0E01               	movlw	1
   677  000DDE  6FF2               	movwf	main@nbMines& (0+255),b
   678                           
   679                           ;main.c: 77: bool finPartie=0;
   680  000DE0  0E00               	movlw	0
   681  000DE2  0100               	movlb	0	; force () banked
   682  000DE4  6FF1               	movwf	main@finPartie& (0+255),b
   683  000DE6                     
   684                           ; BSR set to: 0
   685                           ;main.c: 80: initialisation();
   686  000DE6  ECED  F00F         	call	_initialisation	;wreg free
   687  000DEA                     
   688                           ;main.c: 81: init_serie();
   689  000DEA  EC5F  F010         	call	_init_serie	;wreg free
   690  000DEE                     
   691                           ;main.c: 82: lcd_init();
   692  000DEE  EC37  F010         	call	_lcd_init	;wreg free
   693  000DF2                     
   694                           ;main.c: 83: menuAccueil();
   695  000DF2  EC68  F00D         	call	_menuAccueil	;wreg free
   696  000DF6                     
   697                           ;main.c: 85: initTabVue();
   698  000DF6  EC49  F00B         	call	_initTabVue	;wreg free
   699  000DFA                     
   700                           ;main.c: 86: rempliMines(nbMines);
   701  000DFA  C0F2  F0C8         	movff	main@nbMines,rempliMines@nb
   702  000DFE  C0F3  F0C9         	movff	main@nbMines+1,rempliMines@nb+1
   703  000E02  ECB8  F00B         	call	_rempliMines	;wreg free
   704  000E06                     
   705                           ;main.c: 87: metToucheCombien();
   706  000E06  EC0F  F009         	call	_metToucheCombien	;wreg free
   707  000E0A                     
   708                           ;main.c: 88: afficheTabVue();
   709  000E0A  ECE4  F00D         	call	_afficheTabVue	;wreg free
   710  000E0E                     
   711                           ;main.c: 89: lcd_montreCurseur();
   712  000E0E  EC8F  F010         	call	_lcd_montreCurseur	;wreg free
   713  000E12                     l2654:
   714                           
   715                           ;main.c: 91: {;main.c: 92: deplace(&posX,&posY);
   716  000E12  0EF5               	movlw	low main@posX
   717  000E14  0100               	movlb	0	; force () banked
   718  000E16  6FB9               	movwf	deplace@x& (0+255),b
   719  000E18  0E00               	movlw	high main@posX
   720  000E1A  6FBA               	movwf	(deplace@x+1)& (0+255),b
   721  000E1C  0EF4               	movlw	low main@posY
   722  000E1E  0100               	movlb	0	; force () banked
   723  000E20  6FBB               	movwf	deplace@y& (0+255),b
   724  000E22  0E00               	movlw	high main@posY
   725  000E24  6FBC               	movwf	(deplace@y+1)& (0+255),b
   726  000E26  ECEF  F009         	call	_deplace	;wreg free
   727  000E2A                     
   728                           ;main.c: 94: if(PORTBbits.RB1)
   729  000E2A  A281               	btfss	129,1,c	;volatile
   730  000E2C  EF1A  F007         	goto	u2111
   731  000E30  EF1C  F007         	goto	u2110
   732  000E34                     u2111:
   733  000E34  EF53  F007         	goto	l88
   734  000E38                     u2110:
   735  000E38                     
   736                           ;main.c: 95: {;main.c: 96: finPartie=gagne(&nbMines);
   737  000E38  0EF2               	movlw	low main@nbMines
   738  000E3A  0100               	movlb	0	; force () banked
   739  000E3C  6FC4               	movwf	gagne@pMines& (0+255),b
   740  000E3E  0E00               	movlw	high main@nbMines
   741  000E40  6FC5               	movwf	(gagne@pMines+1)& (0+255),b
   742  000E42  ECB2  F00A         	call	_gagne	;wreg free
   743  000E46  0100               	movlb	0	; force () banked
   744  000E48  6FF1               	movwf	main@finPartie& (0+255),b
   745  000E4A                     
   746                           ; BSR set to: 0
   747                           ;main.c: 97: if((!demine(posX,posY))||(finPartie==1))
   748  000E4A  C0F4  F0C8         	movff	main@posY,demine@y
   749  000E4E  0100               	movlb	0	; force () banked
   750  000E50  51F5               	movf	main@posX& (0+255),w,b
   751  000E52  EC05  F008         	call	_demine
   752  000E56  0900               	iorlw	0
   753  000E58  B4D8               	btfsc	status,2,c
   754  000E5A  EF31  F007         	goto	u2121
   755  000E5E  EF33  F007         	goto	u2120
   756  000E62                     u2121:
   757  000E62  EF3C  F007         	goto	l2664
   758  000E66                     u2120:
   759  000E66  0100               	movlb	0	; force () banked
   760  000E68  05F1               	decf	main@finPartie& (0+255),w,b
   761  000E6A  A4D8               	btfss	status,2,c
   762  000E6C  EF3A  F007         	goto	u2131
   763  000E70  EF3C  F007         	goto	u2130
   764  000E74                     u2131:
   765  000E74  EFF8  F007         	goto	l2684
   766  000E78                     u2130:
   767  000E78                     l2664:
   768                           
   769                           ;main.c: 98: {;main.c: 99: afficheTabMines();
   770  000E78  EC1B  F00E         	call	_afficheTabMines	;wreg free
   771  000E7C                     l92:
   772  000E7C  B281               	btfsc	129,1,c	;volatile
   773  000E7E  EF43  F007         	goto	u2141
   774  000E82  EF45  F007         	goto	u2140
   775  000E86                     u2141:
   776  000E86  EF3E  F007         	goto	l92
   777  000E8A                     u2140:
   778  000E8A                     
   779                           ;main.c: 101: initTabVue();
   780  000E8A  EC49  F00B         	call	_initTabVue	;wreg free
   781                           
   782                           ;main.c: 102: rempliMines(nbMines);
   783  000E8E  C0F2  F0C8         	movff	main@nbMines,rempliMines@nb
   784  000E92  C0F3  F0C9         	movff	main@nbMines+1,rempliMines@nb+1
   785  000E96  ECB8  F00B         	call	_rempliMines	;wreg free
   786                           
   787                           ;main.c: 103: metToucheCombien();
   788  000E9A  EC0F  F009         	call	_metToucheCombien	;wreg free
   789  000E9E                     
   790                           ;main.c: 104: afficheTabVue();
   791  000E9E  ECE4  F00D         	call	_afficheTabVue	;wreg free
   792  000EA2  EFF8  F007         	goto	l2684
   793  000EA6                     l88:
   794                           
   795                           ;main.c: 107: else if(!PORTBbits.RB0)
   796  000EA6  B081               	btfsc	129,0,c	;volatile
   797  000EA8  EF58  F007         	goto	u2151
   798  000EAC  EF5A  F007         	goto	u2150
   799  000EB0                     u2151:
   800  000EB0  EFF8  F007         	goto	l2684
   801  000EB4                     u2150:
   802  000EB4                     
   803                           ;main.c: 108: {;main.c: 109: if(m_tabVue[posY-1][posX-1]==1)
   804  000EB4  0100               	movlb	0	; force () banked
   805  000EB6  51F4               	movf	main@posY& (0+255),w,b
   806  000EB8  0D15               	mullw	21
   807  000EBA  0EEA               	movlw	234
   808  000EBC  0100               	movlb	0	; force () banked
   809  000EBE  6FEC               	movwf	??_main& (0+255),b
   810  000EC0  0EFF               	movlw	255
   811  000EC2  6FED               	movwf	(??_main+1)& (0+255),b
   812  000EC4  0E00               	movlw	low _m_tabVue
   813  000EC6  6FEE               	movwf	(??_main+2)& (0+255),b
   814  000EC8  0E01               	movlw	high _m_tabVue
   815  000ECA  6FEF               	movwf	(??_main+3)& (0+255),b
   816  000ECC  51EC               	movf	??_main& (0+255),w,b
   817  000ECE  27EE               	addwf	(??_main+2)& (0+255),f,b
   818  000ED0  51ED               	movf	(??_main+1)& (0+255),w,b
   819  000ED2  23EF               	addwfc	(??_main+3)& (0+255),f,b
   820  000ED4  50F3               	movf	243,w,c
   821  000ED6  27EE               	addwf	(??_main+2)& (0+255),f,b
   822  000ED8  50F4               	movf	244,w,c
   823  000EDA  23EF               	addwfc	(??_main+3)& (0+255),f,b
   824  000EDC  0100               	movlb	0	; force () banked
   825  000EDE  51F5               	movf	main@posX& (0+255),w,b
   826  000EE0  0100               	movlb	0	; force () banked
   827  000EE2  25EE               	addwf	(??_main+2)& (0+255),w,b
   828  000EE4  6ED9               	movwf	fsr2l,c
   829  000EE6  0100               	movlb	0	; force () banked
   830  000EE8  0E00               	movlw	0
   831  000EEA  0100               	movlb	0	; force () banked
   832  000EEC  21EF               	addwfc	(??_main+3)& (0+255),w,b
   833  000EEE  6EDA               	movwf	fsr2h,c
   834  000EF0  04DE               	decf	postinc2,w,c
   835  000EF2  A4D8               	btfss	status,2,c
   836  000EF4  EF7E  F007         	goto	u2161
   837  000EF8  EF80  F007         	goto	u2160
   838  000EFC                     u2161:
   839  000EFC  EFA5  F007         	goto	l2676
   840  000F00                     u2160:
   841  000F00                     
   842                           ; BSR set to: 0
   843                           ;main.c: 110: {;main.c: 111: m_tabVue[posY-1][posX-1]=3;
   844  000F00  0100               	movlb	0	; force () banked
   845  000F02  51F4               	movf	main@posY& (0+255),w,b
   846  000F04  0D15               	mullw	21
   847  000F06  0EEA               	movlw	234
   848  000F08  0100               	movlb	0	; force () banked
   849  000F0A  6FEC               	movwf	??_main& (0+255),b
   850  000F0C  0EFF               	movlw	255
   851  000F0E  6FED               	movwf	(??_main+1)& (0+255),b
   852  000F10  0E00               	movlw	low _m_tabVue
   853  000F12  6FEE               	movwf	(??_main+2)& (0+255),b
   854  000F14  0E01               	movlw	high _m_tabVue
   855  000F16  6FEF               	movwf	(??_main+3)& (0+255),b
   856  000F18  51EC               	movf	??_main& (0+255),w,b
   857  000F1A  27EE               	addwf	(??_main+2)& (0+255),f,b
   858  000F1C  51ED               	movf	(??_main+1)& (0+255),w,b
   859  000F1E  23EF               	addwfc	(??_main+3)& (0+255),f,b
   860  000F20  50F3               	movf	243,w,c
   861  000F22  27EE               	addwf	(??_main+2)& (0+255),f,b
   862  000F24  50F4               	movf	244,w,c
   863  000F26  23EF               	addwfc	(??_main+3)& (0+255),f,b
   864  000F28  0100               	movlb	0	; force () banked
   865  000F2A  51F5               	movf	main@posX& (0+255),w,b
   866  000F2C  0100               	movlb	0	; force () banked
   867  000F2E  25EE               	addwf	(??_main+2)& (0+255),w,b
   868  000F30  6ED9               	movwf	fsr2l,c
   869  000F32  0100               	movlb	0	; force () banked
   870  000F34  0E00               	movlw	0
   871  000F36  0100               	movlb	0	; force () banked
   872  000F38  21EF               	addwfc	(??_main+3)& (0+255),w,b
   873  000F3A  6EDA               	movwf	fsr2h,c
   874  000F3C  0E03               	movlw	3
   875  000F3E  6EDF               	movwf	indf2,c
   876  000F40                     
   877                           ; BSR set to: 0
   878                           ;main.c: 112: lcd_ecritChar(3);
   879  000F40  0E03               	movlw	3
   880  000F42  EC82  F00F         	call	_lcd_ecritChar
   881                           
   882                           ;main.c: 113: }
   883  000F46  EFEF  F007         	goto	l2682
   884  000F4A                     l2676:
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 114: else if(m_tabVue[posY-1][posX-1]==3)
   888  000F4A  0100               	movlb	0	; force () banked
   889  000F4C  51F4               	movf	main@posY& (0+255),w,b
   890  000F4E  0D15               	mullw	21
   891  000F50  0EEA               	movlw	234
   892  000F52  0100               	movlb	0	; force () banked
   893  000F54  6FEC               	movwf	??_main& (0+255),b
   894  000F56  0EFF               	movlw	255
   895  000F58  6FED               	movwf	(??_main+1)& (0+255),b
   896  000F5A  0E00               	movlw	low _m_tabVue
   897  000F5C  6FEE               	movwf	(??_main+2)& (0+255),b
   898  000F5E  0E01               	movlw	high _m_tabVue
   899  000F60  6FEF               	movwf	(??_main+3)& (0+255),b
   900  000F62  51EC               	movf	??_main& (0+255),w,b
   901  000F64  27EE               	addwf	(??_main+2)& (0+255),f,b
   902  000F66  51ED               	movf	(??_main+1)& (0+255),w,b
   903  000F68  23EF               	addwfc	(??_main+3)& (0+255),f,b
   904  000F6A  50F3               	movf	243,w,c
   905  000F6C  27EE               	addwf	(??_main+2)& (0+255),f,b
   906  000F6E  50F4               	movf	244,w,c
   907  000F70  23EF               	addwfc	(??_main+3)& (0+255),f,b
   908  000F72  0100               	movlb	0	; force () banked
   909  000F74  51F5               	movf	main@posX& (0+255),w,b
   910  000F76  0100               	movlb	0	; force () banked
   911  000F78  25EE               	addwf	(??_main+2)& (0+255),w,b
   912  000F7A  6ED9               	movwf	fsr2l,c
   913  000F7C  0100               	movlb	0	; force () banked
   914  000F7E  0E00               	movlw	0
   915  000F80  0100               	movlb	0	; force () banked
   916  000F82  21EF               	addwfc	(??_main+3)& (0+255),w,b
   917  000F84  6EDA               	movwf	fsr2h,c
   918  000F86  0E03               	movlw	3
   919  000F88  18DE               	xorwf	postinc2,w,c
   920  000F8A  A4D8               	btfss	status,2,c
   921  000F8C  EFCA  F007         	goto	u2171
   922  000F90  EFCC  F007         	goto	u2170
   923  000F94                     u2171:
   924  000F94  EFEF  F007         	goto	l2682
   925  000F98                     u2170:
   926  000F98                     
   927                           ; BSR set to: 0
   928                           ;main.c: 115: {;main.c: 116: m_tabVue[posY-1][posX-1]=1;
   929  000F98  0100               	movlb	0	; force () banked
   930  000F9A  51F4               	movf	main@posY& (0+255),w,b
   931  000F9C  0D15               	mullw	21
   932  000F9E  0EEA               	movlw	234
   933  000FA0  0100               	movlb	0	; force () banked
   934  000FA2  6FEC               	movwf	??_main& (0+255),b
   935  000FA4  0EFF               	movlw	255
   936  000FA6  6FED               	movwf	(??_main+1)& (0+255),b
   937  000FA8  0E00               	movlw	low _m_tabVue
   938  000FAA  6FEE               	movwf	(??_main+2)& (0+255),b
   939  000FAC  0E01               	movlw	high _m_tabVue
   940  000FAE  6FEF               	movwf	(??_main+3)& (0+255),b
   941  000FB0  51EC               	movf	??_main& (0+255),w,b
   942  000FB2  27EE               	addwf	(??_main+2)& (0+255),f,b
   943  000FB4  51ED               	movf	(??_main+1)& (0+255),w,b
   944  000FB6  23EF               	addwfc	(??_main+3)& (0+255),f,b
   945  000FB8  50F3               	movf	243,w,c
   946  000FBA  27EE               	addwf	(??_main+2)& (0+255),f,b
   947  000FBC  50F4               	movf	244,w,c
   948  000FBE  23EF               	addwfc	(??_main+3)& (0+255),f,b
   949  000FC0  0100               	movlb	0	; force () banked
   950  000FC2  51F5               	movf	main@posX& (0+255),w,b
   951  000FC4  0100               	movlb	0	; force () banked
   952  000FC6  25EE               	addwf	(??_main+2)& (0+255),w,b
   953  000FC8  6ED9               	movwf	fsr2l,c
   954  000FCA  0100               	movlb	0	; force () banked
   955  000FCC  0E00               	movlw	0
   956  000FCE  0100               	movlb	0	; force () banked
   957  000FD0  21EF               	addwfc	(??_main+3)& (0+255),w,b
   958  000FD2  6EDA               	movwf	fsr2h,c
   959  000FD4  0E01               	movlw	1
   960  000FD6  6EDF               	movwf	indf2,c
   961  000FD8                     
   962                           ; BSR set to: 0
   963                           ;main.c: 117: lcd_ecritChar(1);
   964  000FD8  0E01               	movlw	1
   965  000FDA  EC82  F00F         	call	_lcd_ecritChar
   966  000FDE                     l2682:
   967                           
   968                           ;main.c: 118: };main.c: 119: _delay((unsigned long)((25)*(1000000/4000.0)));
   969  000FDE  0E09               	movlw	9
   970  000FE0  0100               	movlb	0	; force () banked
   971  000FE2  6FEC               	movwf	??_main& (0+255),b
   972  000FE4  0E1C               	movlw	28
   973  000FE6                     u2187:
   974  000FE6  2EE8               	decfsz	wreg,f,c
   975  000FE8  D7FE               	bra	u2187
   976  000FEA  2FEC               	decfsz	??_main& (0+255),f,b
   977  000FEC  D7FC               	bra	u2187
   978  000FEE  F000               	nop	
   979  000FF0                     l2684:
   980                           
   981                           ;main.c: 120: };main.c: 121: _delay((unsigned long)((100)*(1000000/4000.0)));
   982  000FF0  0E21               	movlw	33
   983  000FF2  0100               	movlb	0	; force () banked
   984  000FF4  6FEC               	movwf	??_main& (0+255),b
   985  000FF6  0E76               	movlw	118
   986  000FF8                     u2197:
   987  000FF8  2EE8               	decfsz	wreg,f,c
   988  000FFA  D7FE               	bra	u2197
   989  000FFC  2FEC               	decfsz	??_main& (0+255),f,b
   990  000FFE  D7FC               	bra	u2197
   991  001000  F000               	nop	
   992  001002  EF09  F007         	goto	l2654
   993  001006  EF00  F000         	goto	start
   994  00100A                     __end_of_main:
   995                           	opt callstack 0
   996                           
   997 ;; *************** function _rempliMines *****************
   998 ;; Defined at:
   999 ;;		line 216 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  nb              2   20[BANK0 ] int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  y               1   27[BANK0 ] unsigned char 
  1004 ;;  x               1   26[BANK0 ] unsigned char 
  1005 ;;  mineReste       1   25[BANK0 ] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         0       2       0       0       0       0       0
  1016 ;;      Locals:         0       3       0       0       0       0       0
  1017 ;;      Temps:          0       3       0       0       0       0       0
  1018 ;;      Totals:         0       8       0       0       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    2
  1022 ;; This function calls:
  1023 ;;		___awmod
  1024 ;;		_rand
  1025 ;;		_videMines
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text1
  1032  001770                     __ptext1:
  1033                           	opt callstack 0
  1034  001770                     _rempliMines:
  1035                           	opt callstack 28
  1036  001770                     
  1037                           ;main.c: 218: unsigned char x,y;;main.c: 219: char mineReste=nb;
  1038  001770  C0C8  F0CD         	movff	rempliMines@nb,rempliMines@mineReste
  1039  001774                     
  1040                           ;main.c: 221: videMines();
  1041  001774  EC1D  F00D         	call	_videMines	;wreg free
  1042                           
  1043                           ;main.c: 223: while(mineReste!=0)
  1044  001778  EF0F  F00C         	goto	l2456
  1045  00177C                     l2448:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 224: {;main.c: 225: x=rand()%4;
  1049  00177C  EC57  F00F         	call	_rand	;wreg free
  1050  001780  0100               	movlb	0	; force () banked
  1051  001782  51C0               	movf	?_rand& (0+255),w,b
  1052  001784  0B03               	andlw	3
  1053  001786  0100               	movlb	0	; force () banked
  1054  001788  6FCE               	movwf	rempliMines@x& (0+255),b
  1055                           
  1056                           ;main.c: 226: y=rand()%20;
  1057  00178A  EC57  F00F         	call	_rand	;wreg free
  1058  00178E  C0C0  F0C2         	movff	?_rand,___awmod@dividend
  1059  001792  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
  1060  001796  0E00               	movlw	0
  1061  001798  0100               	movlb	0	; force () banked
  1062  00179A  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
  1063  00179C  0E14               	movlw	20
  1064  00179E  6FC4               	movwf	___awmod@divisor& (0+255),b
  1065  0017A0  EC73  F00C         	call	___awmod	;wreg free
  1066  0017A4  0100               	movlb	0	; force () banked
  1067  0017A6  51C2               	movf	?___awmod& (0+255),w,b
  1068  0017A8  0100               	movlb	0	; force () banked
  1069  0017AA  6FCF               	movwf	rempliMines@y& (0+255),b
  1070  0017AC                     
  1071                           ; BSR set to: 0
  1072                           ;main.c: 227: if(m_tabMines[x][y]!=2)
  1073  0017AC  0100               	movlb	0	; force () banked
  1074  0017AE  51CE               	movf	rempliMines@x& (0+255),w,b
  1075  0017B0  0D15               	mullw	21
  1076  0017B2  0E60               	movlw	low _m_tabMines
  1077  0017B4  0100               	movlb	0	; force () banked
  1078  0017B6  6FCA               	movwf	??_rempliMines& (0+255),b
  1079  0017B8  0E00               	movlw	high _m_tabMines
  1080  0017BA  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1081  0017BC  50F3               	movf	243,w,c
  1082  0017BE  27CA               	addwf	??_rempliMines& (0+255),f,b
  1083  0017C0  50F4               	movf	244,w,c
  1084  0017C2  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1085  0017C4  0100               	movlb	0	; force () banked
  1086  0017C6  51CF               	movf	rempliMines@y& (0+255),w,b
  1087  0017C8  0100               	movlb	0	; force () banked
  1088  0017CA  25CA               	addwf	??_rempliMines& (0+255),w,b
  1089  0017CC  6ED9               	movwf	fsr2l,c
  1090  0017CE  0100               	movlb	0	; force () banked
  1091  0017D0  0E00               	movlw	0
  1092  0017D2  0100               	movlb	0	; force () banked
  1093  0017D4  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1094  0017D6  6EDA               	movwf	fsr2h,c
  1095  0017D8  0E02               	movlw	2
  1096  0017DA  18DE               	xorwf	postinc2,w,c
  1097  0017DC  B4D8               	btfsc	status,2,c
  1098  0017DE  EFF3  F00B         	goto	u1761
  1099  0017E2  EFF5  F00B         	goto	u1760
  1100  0017E6                     u1761:
  1101  0017E6  EF0F  F00C         	goto	l2456
  1102  0017EA                     u1760:
  1103  0017EA                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 228: {;main.c: 229: m_tabMines[x][y]=2;
  1106  0017EA  0100               	movlb	0	; force () banked
  1107  0017EC  51CE               	movf	rempliMines@x& (0+255),w,b
  1108  0017EE  0D15               	mullw	21
  1109  0017F0  0E60               	movlw	low _m_tabMines
  1110  0017F2  0100               	movlb	0	; force () banked
  1111  0017F4  6FCA               	movwf	??_rempliMines& (0+255),b
  1112  0017F6  0E00               	movlw	high _m_tabMines
  1113  0017F8  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1114  0017FA  50F3               	movf	243,w,c
  1115  0017FC  27CA               	addwf	??_rempliMines& (0+255),f,b
  1116  0017FE  50F4               	movf	244,w,c
  1117  001800  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1118  001802  0100               	movlb	0	; force () banked
  1119  001804  51CF               	movf	rempliMines@y& (0+255),w,b
  1120  001806  0100               	movlb	0	; force () banked
  1121  001808  25CA               	addwf	??_rempliMines& (0+255),w,b
  1122  00180A  6ED9               	movwf	fsr2l,c
  1123  00180C  0100               	movlb	0	; force () banked
  1124  00180E  0E00               	movlw	0
  1125  001810  0100               	movlb	0	; force () banked
  1126  001812  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1127  001814  6EDA               	movwf	fsr2h,c
  1128  001816  0E02               	movlw	2
  1129  001818  6EDF               	movwf	indf2,c
  1130  00181A                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 230: mineReste--;
  1133  00181A  0100               	movlb	0	; force () banked
  1134  00181C  07CD               	decf	rempliMines@mineReste& (0+255),f,b
  1135  00181E                     l2456:
  1136  00181E  0100               	movlb	0	; force () banked
  1137  001820  51CD               	movf	rempliMines@mineReste& (0+255),w,b
  1138  001822  A4D8               	btfss	status,2,c
  1139  001824  EF16  F00C         	goto	u1771
  1140  001828  EF18  F00C         	goto	u1770
  1141  00182C                     u1771:
  1142  00182C  EFBE  F00B         	goto	l2448
  1143  001830                     u1770:
  1144  001830                     
  1145                           ; BSR set to: 0
  1146  001830  0012               	return		;funcret
  1147  001832                     __end_of_rempliMines:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _videMines *****************
  1151 ;; Defined at:
  1152 ;;		line 199 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  j               1    3[BANK0 ] unsigned char 
  1157 ;;  i               1    2[BANK0 ] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         0       0       0       0       0       0       0
  1168 ;;      Locals:         0       2       0       0       0       0       0
  1169 ;;      Temps:          0       2       0       0       0       0       0
  1170 ;;      Totals:         0       4       0       0       0       0       0
  1171 ;;Total ram usage:        4 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_rempliMines
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text2
  1181  001A3A                     __ptext2:
  1182                           	opt callstack 0
  1183  001A3A                     _videMines:
  1184                           	opt callstack 29
  1185  001A3A                     
  1186                           ;main.c: 201: for(unsigned char i=0;i<4;i++)
  1187  001A3A  0E00               	movlw	0
  1188  001A3C  0100               	movlb	0	; force () banked
  1189  001A3E  6FB6               	movwf	videMines@i& (0+255),b
  1190  001A40                     
  1191                           ; BSR set to: 0
  1192  001A40  0E03               	movlw	3
  1193  001A42  0100               	movlb	0	; force () banked
  1194  001A44  65B6               	cpfsgt	videMines@i& (0+255),b
  1195  001A46  EF27  F00D         	goto	u1201
  1196  001A4A  EF29  F00D         	goto	u1200
  1197  001A4E                     u1201:
  1198  001A4E  EF2B  F00D         	goto	l2096
  1199  001A52                     u1200:
  1200  001A52  EF67  F00D         	goto	l133
  1201  001A56                     l2096:
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;main.c: 202: {;main.c: 203: for(unsigned char j=0;j<20;j++)
  1205  001A56  0E00               	movlw	0
  1206  001A58  0100               	movlb	0	; force () banked
  1207  001A5A  6FB7               	movwf	videMines@j& (0+255),b
  1208  001A5C                     
  1209                           ; BSR set to: 0
  1210  001A5C  0E13               	movlw	19
  1211  001A5E  0100               	movlb	0	; force () banked
  1212  001A60  65B7               	cpfsgt	videMines@j& (0+255),b
  1213  001A62  EF35  F00D         	goto	u1211
  1214  001A66  EF37  F00D         	goto	u1210
  1215  001A6A                     u1211:
  1216  001A6A  EF39  F00D         	goto	l2102
  1217  001A6E                     u1210:
  1218  001A6E  EF5C  F00D         	goto	l2108
  1219  001A72                     l2102:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;main.c: 204: {;main.c: 205: m_tabMines[i][j]=' ';
  1223  001A72  0100               	movlb	0	; force () banked
  1224  001A74  51B6               	movf	videMines@i& (0+255),w,b
  1225  001A76  0D15               	mullw	21
  1226  001A78  0E60               	movlw	low _m_tabMines
  1227  001A7A  0100               	movlb	0	; force () banked
  1228  001A7C  6FB4               	movwf	??_videMines& (0+255),b
  1229  001A7E  0E00               	movlw	high _m_tabMines
  1230  001A80  6FB5               	movwf	(??_videMines+1)& (0+255),b
  1231  001A82  50F3               	movf	243,w,c
  1232  001A84  27B4               	addwf	??_videMines& (0+255),f,b
  1233  001A86  50F4               	movf	244,w,c
  1234  001A88  23B5               	addwfc	(??_videMines+1)& (0+255),f,b
  1235  001A8A  0100               	movlb	0	; force () banked
  1236  001A8C  51B7               	movf	videMines@j& (0+255),w,b
  1237  001A8E  0100               	movlb	0	; force () banked
  1238  001A90  25B4               	addwf	??_videMines& (0+255),w,b
  1239  001A92  6ED9               	movwf	fsr2l,c
  1240  001A94  0100               	movlb	0	; force () banked
  1241  001A96  0E00               	movlw	0
  1242  001A98  0100               	movlb	0	; force () banked
  1243  001A9A  21B5               	addwfc	(??_videMines+1)& (0+255),w,b
  1244  001A9C  6EDA               	movwf	fsr2h,c
  1245  001A9E  0E20               	movlw	32
  1246  001AA0  6EDF               	movwf	indf2,c
  1247  001AA2                     
  1248                           ; BSR set to: 0
  1249  001AA2  0100               	movlb	0	; force () banked
  1250  001AA4  2BB7               	incf	videMines@j& (0+255),f,b
  1251  001AA6                     
  1252                           ; BSR set to: 0
  1253  001AA6  0E13               	movlw	19
  1254  001AA8  0100               	movlb	0	; force () banked
  1255  001AAA  65B7               	cpfsgt	videMines@j& (0+255),b
  1256  001AAC  EF5A  F00D         	goto	u1221
  1257  001AB0  EF5C  F00D         	goto	u1220
  1258  001AB4                     u1221:
  1259  001AB4  EF39  F00D         	goto	l2102
  1260  001AB8                     u1220:
  1261  001AB8                     l2108:
  1262                           
  1263                           ; BSR set to: 0
  1264  001AB8  0100               	movlb	0	; force () banked
  1265  001ABA  2BB6               	incf	videMines@i& (0+255),f,b
  1266  001ABC                     
  1267                           ; BSR set to: 0
  1268  001ABC  0E03               	movlw	3
  1269  001ABE  0100               	movlb	0	; force () banked
  1270  001AC0  65B6               	cpfsgt	videMines@i& (0+255),b
  1271  001AC2  EF65  F00D         	goto	u1231
  1272  001AC6  EF67  F00D         	goto	u1230
  1273  001ACA                     u1231:
  1274  001ACA  EF2B  F00D         	goto	l2096
  1275  001ACE                     u1230:
  1276  001ACE                     l133:
  1277                           
  1278                           ; BSR set to: 0
  1279  001ACE  0012               	return		;funcret
  1280  001AD0                     __end_of_videMines:
  1281                           	opt callstack 0
  1282                           
  1283 ;; *************** function _rand *****************
  1284 ;; Defined at:
  1285 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  2   12[BANK0 ] int 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1299 ;;      Params:         0       2       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0
  1302 ;;      Totals:         0       2       0       0       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		___lmul
  1308 ;; This function is called by:
  1309 ;;		_rempliMines
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text3
  1314  001EAE                     __ptext3:
  1315                           	opt callstack 0
  1316  001EAE                     _rand:
  1317                           	opt callstack 28
  1318  001EAE  C0F6  F0B4         	movff	_randx,___lmul@multiplier
  1319  001EB2  C0F7  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1320  001EB6  C0F8  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1321  001EBA  C0F9  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1322  001EBE  0E6D               	movlw	109
  1323  001EC0  0100               	movlb	0	; () banked
  1324  001EC2  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1325  001EC4  0E4E               	movlw	78
  1326  001EC6  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1327  001EC8  0EC6               	movlw	198
  1328  001ECA  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1329  001ECC  0E41               	movlw	65
  1330  001ECE  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1331  001ED0  EC52  F00E         	call	___lmul	;wreg free
  1332  001ED4  C0B4  F0F6         	movff	?___lmul,_randx
  1333  001ED8  C0B5  F0F7         	movff	?___lmul+1,_randx+1
  1334  001EDC  C0B6  F0F8         	movff	?___lmul+2,_randx+2
  1335  001EE0  C0B7  F0F9         	movff	?___lmul+3,_randx+3
  1336  001EE4  0E39               	movlw	57
  1337  001EE6  0100               	movlb	0	; () banked
  1338  001EE8  27F6               	addwf	_randx& (0+255),f,b
  1339  001EEA  0E30               	movlw	48
  1340  001EEC  23F7               	addwfc	(_randx+1)& (0+255),f,b
  1341  001EEE  0E00               	movlw	0
  1342  001EF0  23F8               	addwfc	(_randx+2)& (0+255),f,b
  1343  001EF2  0E00               	movlw	0
  1344  001EF4  23F9               	addwfc	(_randx+3)& (0+255),f,b
  1345  001EF6                     
  1346                           ; BSR set to: 0
  1347  001EF6  0EFF               	movlw	255
  1348  001EF8  15F8               	andwf	(_randx+2)& (0+255),w,b
  1349  001EFA  6FC0               	movwf	?_rand& (0+255),b
  1350  001EFC  0E7F               	movlw	127
  1351  001EFE  15F9               	andwf	(_randx+3)& (0+255),w,b
  1352  001F00  6FC1               	movwf	(?_rand+1)& (0+255),b
  1353  001F02                     
  1354                           ; BSR set to: 0
  1355  001F02  0012               	return		;funcret
  1356  001F04                     __end_of_rand:
  1357                           	opt callstack 0
  1358                           
  1359 ;; *************** function ___lmul *****************
  1360 ;; Defined at:
  1361 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1364 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  product         4    8[BANK0 ] unsigned long 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  4    0[BANK0 ] unsigned long 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       8       0       0       0       0       0
  1377 ;;      Locals:         0       4       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0
  1379 ;;      Totals:         0      12       0       0       0       0       0
  1380 ;;Total ram usage:       12 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_rand
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text4
  1390  001CA4                     __ptext4:
  1391                           	opt callstack 0
  1392  001CA4                     ___lmul:
  1393                           	opt callstack 28
  1394  001CA4  0E00               	movlw	0
  1395  001CA6  0100               	movlb	0	; () banked
  1396  001CA8  6FBC               	movwf	___lmul@product& (0+255),b
  1397  001CAA  0E00               	movlw	0
  1398  001CAC  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1399  001CAE  0E00               	movlw	0
  1400  001CB0  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1401  001CB2  0E00               	movlw	0
  1402  001CB4  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1403  001CB6                     l2080:
  1404                           
  1405                           ; BSR set to: 0
  1406  001CB6  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1407  001CB8  EF60  F00E         	goto	u1181
  1408  001CBC  EF62  F00E         	goto	u1180
  1409  001CC0                     u1181:
  1410  001CC0  EF6A  F00E         	goto	l2084
  1411  001CC4                     u1180:
  1412  001CC4                     
  1413                           ; BSR set to: 0
  1414  001CC4  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1415  001CC6  27BC               	addwf	___lmul@product& (0+255),f,b
  1416  001CC8  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1417  001CCA  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1418  001CCC  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1419  001CCE  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1420  001CD0  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1421  001CD2  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1422  001CD4                     l2084:
  1423                           
  1424                           ; BSR set to: 0
  1425  001CD4  90D8               	bcf	status,0,c
  1426  001CD6  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1427  001CD8  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1428  001CDA  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1429  001CDC  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1430  001CDE                     
  1431                           ; BSR set to: 0
  1432  001CDE  90D8               	bcf	status,0,c
  1433  001CE0  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1434  001CE2  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1435  001CE4  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1436  001CE6  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1437  001CE8  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1438  001CEA  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1439  001CEC  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1440  001CEE  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1441  001CF0  A4D8               	btfss	status,2,c
  1442  001CF2  EF7D  F00E         	goto	u1191
  1443  001CF6  EF7F  F00E         	goto	u1190
  1444  001CFA                     u1191:
  1445  001CFA  EF5B  F00E         	goto	l2080
  1446  001CFE                     u1190:
  1447  001CFE                     
  1448                           ; BSR set to: 0
  1449  001CFE  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1450  001D02  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1451  001D06  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1452  001D0A  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1453  001D0E                     
  1454                           ; BSR set to: 0
  1455  001D0E  0012               	return		;funcret
  1456  001D10                     __end_of___lmul:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function ___awmod *****************
  1460 ;; Defined at:
  1461 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  dividend        2   14[BANK0 ] int 
  1464 ;;  divisor         2   16[BANK0 ] int 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  sign            1   19[BANK0 ] unsigned char 
  1467 ;;  counter         1   18[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2   14[BANK0 ] int 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         0       4       0       0       0       0       0
  1478 ;;      Locals:         0       2       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0
  1480 ;;      Totals:         0       6       0       0       0       0       0
  1481 ;;Total ram usage:        6 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_rempliMines
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text5
  1491  0018E6                     __ptext5:
  1492                           	opt callstack 0
  1493  0018E6                     ___awmod:
  1494                           	opt callstack 29
  1495  0018E6  0E00               	movlw	0
  1496  0018E8  0100               	movlb	0	; () banked
  1497  0018EA  6FC7               	movwf	___awmod@sign& (0+255),b
  1498  0018EC                     
  1499                           ; BSR set to: 0
  1500  0018EC  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1501  0018EE  EF7D  F00C         	goto	u1630
  1502  0018F2  EF7B  F00C         	goto	u1631
  1503  0018F6                     u1631:
  1504  0018F6  EF83  F00C         	goto	l2324
  1505  0018FA                     u1630:
  1506  0018FA                     
  1507                           ; BSR set to: 0
  1508  0018FA  6DC2               	negf	___awmod@dividend& (0+255),b
  1509  0018FC  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1510  0018FE  B0D8               	btfsc	status,0,c
  1511  001900  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1512  001902                     
  1513                           ; BSR set to: 0
  1514  001902  0E01               	movlw	1
  1515  001904  6FC7               	movwf	___awmod@sign& (0+255),b
  1516  001906                     l2324:
  1517                           
  1518                           ; BSR set to: 0
  1519  001906  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1520  001908  EF8A  F00C         	goto	u1640
  1521  00190C  EF88  F00C         	goto	u1641
  1522  001910                     u1641:
  1523  001910  EF8E  F00C         	goto	l2328
  1524  001914                     u1640:
  1525  001914                     
  1526                           ; BSR set to: 0
  1527  001914  6DC4               	negf	___awmod@divisor& (0+255),b
  1528  001916  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1529  001918  B0D8               	btfsc	status,0,c
  1530  00191A  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1531  00191C                     l2328:
  1532                           
  1533                           ; BSR set to: 0
  1534  00191C  51C4               	movf	___awmod@divisor& (0+255),w,b
  1535  00191E  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1536  001920  B4D8               	btfsc	status,2,c
  1537  001922  EF95  F00C         	goto	u1651
  1538  001926  EF97  F00C         	goto	u1650
  1539  00192A                     u1651:
  1540  00192A  EFBB  F00C         	goto	l2344
  1541  00192E                     u1650:
  1542  00192E                     
  1543                           ; BSR set to: 0
  1544  00192E  0E01               	movlw	1
  1545  001930  6FC6               	movwf	___awmod@counter& (0+255),b
  1546  001932  EF9F  F00C         	goto	l2334
  1547  001936                     l2332:
  1548                           
  1549                           ; BSR set to: 0
  1550  001936  90D8               	bcf	status,0,c
  1551  001938  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1552  00193A  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1553  00193C  2BC6               	incf	___awmod@counter& (0+255),f,b
  1554  00193E                     l2334:
  1555                           
  1556                           ; BSR set to: 0
  1557  00193E  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1558  001940  EFA4  F00C         	goto	u1661
  1559  001944  EFA6  F00C         	goto	u1660
  1560  001948                     u1661:
  1561  001948  EF9B  F00C         	goto	l2332
  1562  00194C                     u1660:
  1563  00194C                     l2336:
  1564                           
  1565                           ; BSR set to: 0
  1566  00194C  51C4               	movf	___awmod@divisor& (0+255),w,b
  1567  00194E  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1568  001950  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1569  001952  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1570  001954  A0D8               	btfss	status,0,c
  1571  001956  EFAF  F00C         	goto	u1671
  1572  00195A  EFB1  F00C         	goto	u1670
  1573  00195E                     u1671:
  1574  00195E  EFB5  F00C         	goto	l2340
  1575  001962                     u1670:
  1576  001962                     
  1577                           ; BSR set to: 0
  1578  001962  51C4               	movf	___awmod@divisor& (0+255),w,b
  1579  001964  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1580  001966  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1581  001968  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1582  00196A                     l2340:
  1583                           
  1584                           ; BSR set to: 0
  1585  00196A  90D8               	bcf	status,0,c
  1586  00196C  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1587  00196E  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1588  001970                     
  1589                           ; BSR set to: 0
  1590  001970  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1591  001972  EFA6  F00C         	goto	l2336
  1592  001976                     l2344:
  1593                           
  1594                           ; BSR set to: 0
  1595  001976  51C7               	movf	___awmod@sign& (0+255),w,b
  1596  001978  B4D8               	btfsc	status,2,c
  1597  00197A  EFC1  F00C         	goto	u1681
  1598  00197E  EFC3  F00C         	goto	u1680
  1599  001982                     u1681:
  1600  001982  EFC7  F00C         	goto	l2348
  1601  001986                     u1680:
  1602  001986                     
  1603                           ; BSR set to: 0
  1604  001986  6DC2               	negf	___awmod@dividend& (0+255),b
  1605  001988  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1606  00198A  B0D8               	btfsc	status,0,c
  1607  00198C  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1608  00198E                     l2348:
  1609                           
  1610                           ; BSR set to: 0
  1611  00198E  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1612  001992  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1613  001996                     
  1614                           ; BSR set to: 0
  1615  001996  0012               	return		;funcret
  1616  001998                     __end_of___awmod:
  1617                           	opt callstack 0
  1618                           
  1619 ;; *************** function _metToucheCombien *****************
  1620 ;; Defined at:
  1621 ;;		line 244 in file "main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  j               1   22[BANK0 ] unsigned char 
  1626 ;;  k               1   20[BANK0 ] unsigned char 
  1627 ;;  i               1   21[BANK0 ] unsigned char 
  1628 ;;  minesTouche     1   19[BANK0 ] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       4       0       0       0       0       0
  1640 ;;      Temps:          0       3       0       0       0       0       0
  1641 ;;      Totals:         0       7       0       0       0       0       0
  1642 ;;Total ram usage:        7 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    2
  1645 ;; This function calls:
  1646 ;;		_calculToucheCombien
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text6
  1653  00121E                     __ptext6:
  1654                           	opt callstack 0
  1655  00121E                     _metToucheCombien:
  1656                           	opt callstack 28
  1657  00121E                     
  1658                           ;main.c: 246: char minesTouche=0;
  1659  00121E  0E00               	movlw	0
  1660  001220  0100               	movlb	0	; force () banked
  1661  001222  6FC7               	movwf	metToucheCombien@minesTouche& (0+255),b
  1662                           
  1663                           ;main.c: 248: for(unsigned char i=0;i<4;i++)
  1664  001224  0E00               	movlw	0
  1665  001226  0100               	movlb	0	; force () banked
  1666  001228  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1667  00122A                     
  1668                           ; BSR set to: 0
  1669  00122A  0E03               	movlw	3
  1670  00122C  0100               	movlb	0	; force () banked
  1671  00122E  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1672  001230  EF1C  F009         	goto	u1781
  1673  001234  EF1E  F009         	goto	u1780
  1674  001238                     u1781:
  1675  001238  EF20  F009         	goto	l2464
  1676  00123C                     u1780:
  1677  00123C  EFCA  F009         	goto	l2490
  1678  001240                     l2464:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;main.c: 249: {;main.c: 250: for(unsigned char j=0;j<20;j++)
  1682  001240  0E00               	movlw	0
  1683  001242  0100               	movlb	0	; force () banked
  1684  001244  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1685  001246                     
  1686                           ; BSR set to: 0
  1687  001246  0E13               	movlw	19
  1688  001248  0100               	movlb	0	; force () banked
  1689  00124A  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1690  00124C  EF2A  F009         	goto	u1791
  1691  001250  EF2C  F009         	goto	u1790
  1692  001254                     u1791:
  1693  001254  EF2E  F009         	goto	l2470
  1694  001258                     u1790:
  1695  001258  EFBF  F009         	goto	l2486
  1696  00125C                     l2470:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;main.c: 251: {;main.c: 252: minesTouche=calculToucheCombien(i,j);
  1700  00125C  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1701  001260  0100               	movlb	0	; force () banked
  1702  001262  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1703  001264  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1704  001268  0100               	movlb	0	; force () banked
  1705  00126A  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1706  00126C  EC1E  F003         	call	_calculToucheCombien	;wreg free
  1707  001270  0100               	movlb	0	; force () banked
  1708  001272  6FC7               	movwf	metToucheCombien@minesTouche& (0+255),b
  1709  001274                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 253: if(minesTouche!='0'&&m_tabMines[i][j]!=2)
  1712  001274  0E30               	movlw	48
  1713  001276  0100               	movlb	0	; force () banked
  1714  001278  19C7               	xorwf	metToucheCombien@minesTouche& (0+255),w,b
  1715  00127A  B4D8               	btfsc	status,2,c
  1716  00127C  EF42  F009         	goto	u1801
  1717  001280  EF44  F009         	goto	u1800
  1718  001284                     u1801:
  1719  001284  EF7D  F009         	goto	l2478
  1720  001288                     u1800:
  1721  001288                     
  1722                           ; BSR set to: 0
  1723  001288  0100               	movlb	0	; force () banked
  1724  00128A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1725  00128C  0D15               	mullw	21
  1726  00128E  0E60               	movlw	low _m_tabMines
  1727  001290  0100               	movlb	0	; force () banked
  1728  001292  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1729  001294  0E00               	movlw	high _m_tabMines
  1730  001296  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1731  001298  50F3               	movf	243,w,c
  1732  00129A  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1733  00129C  50F4               	movf	244,w,c
  1734  00129E  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1735  0012A0  0100               	movlb	0	; force () banked
  1736  0012A2  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1737  0012A4  0100               	movlb	0	; force () banked
  1738  0012A6  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1739  0012A8  6ED9               	movwf	fsr2l,c
  1740  0012AA  0100               	movlb	0	; force () banked
  1741  0012AC  0E00               	movlw	0
  1742  0012AE  0100               	movlb	0	; force () banked
  1743  0012B0  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1744  0012B2  6EDA               	movwf	fsr2h,c
  1745  0012B4  0E02               	movlw	2
  1746  0012B6  18DE               	xorwf	postinc2,w,c
  1747  0012B8  B4D8               	btfsc	status,2,c
  1748  0012BA  EF61  F009         	goto	u1811
  1749  0012BE  EF63  F009         	goto	u1810
  1750  0012C2                     u1811:
  1751  0012C2  EF7D  F009         	goto	l2478
  1752  0012C6                     u1810:
  1753  0012C6                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 254: m_tabMines[i][j]=minesTouche;
  1756  0012C6  0100               	movlb	0	; force () banked
  1757  0012C8  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1758  0012CA  0D15               	mullw	21
  1759  0012CC  0E60               	movlw	low _m_tabMines
  1760  0012CE  0100               	movlb	0	; force () banked
  1761  0012D0  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1762  0012D2  0E00               	movlw	high _m_tabMines
  1763  0012D4  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1764  0012D6  50F3               	movf	243,w,c
  1765  0012D8  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1766  0012DA  50F4               	movf	244,w,c
  1767  0012DC  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1768  0012DE  0100               	movlb	0	; force () banked
  1769  0012E0  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1770  0012E2  0100               	movlb	0	; force () banked
  1771  0012E4  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1772  0012E6  6ED9               	movwf	fsr2l,c
  1773  0012E8  0100               	movlb	0	; force () banked
  1774  0012EA  0E00               	movlw	0
  1775  0012EC  0100               	movlb	0	; force () banked
  1776  0012EE  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1777  0012F0  6EDA               	movwf	fsr2h,c
  1778  0012F2  C0C7  FFDF         	movff	metToucheCombien@minesTouche,indf2
  1779  0012F6  EFB4  F009         	goto	l2482
  1780  0012FA                     l2478:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 255: else if(m_tabMines[i][j]!=2)
  1784  0012FA  0100               	movlb	0	; force () banked
  1785  0012FC  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1786  0012FE  0D15               	mullw	21
  1787  001300  0E60               	movlw	low _m_tabMines
  1788  001302  0100               	movlb	0	; force () banked
  1789  001304  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1790  001306  0E00               	movlw	high _m_tabMines
  1791  001308  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1792  00130A  50F3               	movf	243,w,c
  1793  00130C  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1794  00130E  50F4               	movf	244,w,c
  1795  001310  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1796  001312  0100               	movlb	0	; force () banked
  1797  001314  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1798  001316  0100               	movlb	0	; force () banked
  1799  001318  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1800  00131A  6ED9               	movwf	fsr2l,c
  1801  00131C  0100               	movlb	0	; force () banked
  1802  00131E  0E00               	movlw	0
  1803  001320  0100               	movlb	0	; force () banked
  1804  001322  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1805  001324  6EDA               	movwf	fsr2h,c
  1806  001326  0E02               	movlw	2
  1807  001328  18DE               	xorwf	postinc2,w,c
  1808  00132A  B4D8               	btfsc	status,2,c
  1809  00132C  EF9A  F009         	goto	u1821
  1810  001330  EF9C  F009         	goto	u1820
  1811  001334                     u1821:
  1812  001334  EFB4  F009         	goto	l2482
  1813  001338                     u1820:
  1814  001338                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 256: m_tabMines[i][j]=' ';
  1817  001338  0100               	movlb	0	; force () banked
  1818  00133A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1819  00133C  0D15               	mullw	21
  1820  00133E  0E60               	movlw	low _m_tabMines
  1821  001340  0100               	movlb	0	; force () banked
  1822  001342  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1823  001344  0E00               	movlw	high _m_tabMines
  1824  001346  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1825  001348  50F3               	movf	243,w,c
  1826  00134A  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1827  00134C  50F4               	movf	244,w,c
  1828  00134E  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1829  001350  0100               	movlb	0	; force () banked
  1830  001352  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1831  001354  0100               	movlb	0	; force () banked
  1832  001356  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1833  001358  6ED9               	movwf	fsr2l,c
  1834  00135A  0100               	movlb	0	; force () banked
  1835  00135C  0E00               	movlw	0
  1836  00135E  0100               	movlb	0	; force () banked
  1837  001360  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1838  001362  6EDA               	movwf	fsr2h,c
  1839  001364  0E20               	movlw	32
  1840  001366  6EDF               	movwf	indf2,c
  1841  001368                     l2482:
  1842                           
  1843                           ; BSR set to: 0
  1844  001368  0100               	movlb	0	; force () banked
  1845  00136A  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1846  00136C                     
  1847                           ; BSR set to: 0
  1848  00136C  0E13               	movlw	19
  1849  00136E  0100               	movlb	0	; force () banked
  1850  001370  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1851  001372  EFBD  F009         	goto	u1831
  1852  001376  EFBF  F009         	goto	u1830
  1853  00137A                     u1831:
  1854  00137A  EF2E  F009         	goto	l2470
  1855  00137E                     u1830:
  1856  00137E                     l2486:
  1857                           
  1858                           ; BSR set to: 0
  1859  00137E  0100               	movlb	0	; force () banked
  1860  001380  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1861  001382                     
  1862                           ; BSR set to: 0
  1863  001382  0E03               	movlw	3
  1864  001384  0100               	movlb	0	; force () banked
  1865  001386  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1866  001388  EFC8  F009         	goto	u1841
  1867  00138C  EFCA  F009         	goto	u1840
  1868  001390                     u1841:
  1869  001390  EF20  F009         	goto	l2464
  1870  001394                     u1840:
  1871  001394                     l2490:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;main.c: 257: };main.c: 258: };main.c: 259: for(unsigned char k=0;k<4;k++)
  1875  001394  0E00               	movlw	0
  1876  001396  0100               	movlb	0	; force () banked
  1877  001398  6FC8               	movwf	metToucheCombien@k& (0+255),b
  1878  00139A                     
  1879                           ; BSR set to: 0
  1880  00139A  0E03               	movlw	3
  1881  00139C  0100               	movlb	0	; force () banked
  1882  00139E  65C8               	cpfsgt	metToucheCombien@k& (0+255),b
  1883  0013A0  EFD4  F009         	goto	u1851
  1884  0013A4  EFD6  F009         	goto	u1850
  1885  0013A8                     u1851:
  1886  0013A8  EFD8  F009         	goto	l2496
  1887  0013AC                     u1850:
  1888  0013AC  EFEE  F009         	goto	l152
  1889  0013B0                     l2496:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 260: {;main.c: 261: m_tabMines[k][20]='\0';
  1893  0013B0  0100               	movlb	0	; force () banked
  1894  0013B2  51C8               	movf	metToucheCombien@k& (0+255),w,b
  1895  0013B4  0D15               	mullw	21
  1896  0013B6  0E74               	movlw	low (_m_tabMines+20)
  1897  0013B8  24F3               	addwf	243,w,c
  1898  0013BA  6ED9               	movwf	fsr2l,c
  1899  0013BC  0E00               	movlw	high (_m_tabMines+20)
  1900  0013BE  20F4               	addwfc	prodh,w,c
  1901  0013C0  6EDA               	movwf	fsr2h,c
  1902  0013C2  0E00               	movlw	0
  1903  0013C4  6EDF               	movwf	indf2,c
  1904  0013C6                     
  1905                           ; BSR set to: 0
  1906  0013C6  0100               	movlb	0	; force () banked
  1907  0013C8  2BC8               	incf	metToucheCombien@k& (0+255),f,b
  1908  0013CA                     
  1909                           ; BSR set to: 0
  1910  0013CA  0E03               	movlw	3
  1911  0013CC  0100               	movlb	0	; force () banked
  1912  0013CE  65C8               	cpfsgt	metToucheCombien@k& (0+255),b
  1913  0013D0  EFEC  F009         	goto	u1861
  1914  0013D4  EFEE  F009         	goto	u1860
  1915  0013D8                     u1861:
  1916  0013D8  EFD8  F009         	goto	l2496
  1917  0013DC                     u1860:
  1918  0013DC                     l152:
  1919                           
  1920                           ; BSR set to: 0
  1921  0013DC  0012               	return		;funcret
  1922  0013DE                     __end_of_metToucheCombien:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _calculToucheCombien *****************
  1926 ;; Defined at:
  1927 ;;		line 270 in file "main.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  ligne           2    6[BANK0 ] int 
  1930 ;;  colonne         2    8[BANK0 ] int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  nombreTouche    1   15[BANK0 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       4       0       0       0       0       0
  1943 ;;      Locals:         0       1       0       0       0       0       0
  1944 ;;      Temps:          0       5       0       0       0       0       0
  1945 ;;      Totals:         0      10       0       0       0       0       0
  1946 ;;Total ram usage:       10 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    1
  1949 ;; This function calls:
  1950 ;;		___wmul
  1951 ;; This function is called by:
  1952 ;;		_metToucheCombien
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text7
  1957  00063C                     __ptext7:
  1958                           	opt callstack 0
  1959  00063C                     _calculToucheCombien:
  1960                           	opt callstack 28
  1961  00063C                     
  1962                           ;main.c: 272: char nombreTouche='0';
  1963  00063C  0E30               	movlw	48
  1964  00063E  0100               	movlb	0	; force () banked
  1965  000640  6FC3               	movwf	calculToucheCombien@nombreTouche& (0+255),b
  1966  000642                     
  1967                           ; BSR set to: 0
  1968                           ;main.c: 274: if(m_tabMines[ligne][colonne]!=2)
  1969  000642  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1970  000646  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1971  00064A  0E00               	movlw	0
  1972  00064C  0100               	movlb	0	; force () banked
  1973  00064E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1974  000650  0E15               	movlw	21
  1975  000652  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1976  000654  EC4B  F010         	call	___wmul	;wreg free
  1977  000658  0E60               	movlw	low _m_tabMines
  1978  00065A  0100               	movlb	0	; force () banked
  1979  00065C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1980  00065E  0E00               	movlw	high _m_tabMines
  1981  000660  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1982  000662  0100               	movlb	0	; force () banked
  1983  000664  51B4               	movf	?___wmul& (0+255),w,b
  1984  000666  0100               	movlb	0	; force () banked
  1985  000668  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1986  00066A  0100               	movlb	0	; force () banked
  1987  00066C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1988  00066E  0100               	movlb	0	; force () banked
  1989  000670  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1990  000672  0100               	movlb	0	; force () banked
  1991  000674  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1992  000676  0100               	movlb	0	; force () banked
  1993  000678  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1994  00067A  6ED9               	movwf	fsr2l,c
  1995  00067C  0100               	movlb	0	; force () banked
  1996  00067E  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1997  000680  0100               	movlb	0	; force () banked
  1998  000682  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1999  000684  6EDA               	movwf	fsr2h,c
  2000  000686  0E02               	movlw	2
  2001  000688  18DE               	xorwf	postinc2,w,c
  2002  00068A  B4D8               	btfsc	status,2,c
  2003  00068C  EF4A  F003         	goto	u1241
  2004  000690  EF4C  F003         	goto	u1240
  2005  000694                     u1241:
  2006  000694  EF62  F005         	goto	l2180
  2007  000698                     u1240:
  2008  000698                     
  2009                           ; BSR set to: 0
  2010                           ;main.c: 275: {;main.c: 276: if(ligne!=3)
  2011  000698  0E03               	movlw	3
  2012  00069A  0100               	movlb	0	; force () banked
  2013  00069C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2014  00069E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2015  0006A0  B4D8               	btfsc	status,2,c
  2016  0006A2  EF55  F003         	goto	u1251
  2017  0006A6  EF57  F003         	goto	u1250
  2018  0006AA                     u1251:
  2019  0006AA  EF88  F003         	goto	l2130
  2020  0006AE                     u1250:
  2021  0006AE                     
  2022                           ; BSR set to: 0
  2023                           ;main.c: 277: {;main.c: 278: if(m_tabMines[ligne+1][colonne]==2)
  2024  0006AE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2025  0006B2  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2026  0006B6  0E00               	movlw	0
  2027  0006B8  0100               	movlb	0	; force () banked
  2028  0006BA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2029  0006BC  0E15               	movlw	21
  2030  0006BE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2031  0006C0  EC4B  F010         	call	___wmul	;wreg free
  2032  0006C4  0E60               	movlw	low _m_tabMines
  2033  0006C6  0100               	movlb	0	; force () banked
  2034  0006C8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2035  0006CA  0E00               	movlw	high _m_tabMines
  2036  0006CC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2037  0006CE  0E15               	movlw	21
  2038  0006D0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2039  0006D2  0E00               	movlw	0
  2040  0006D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2041  0006D6  0100               	movlb	0	; force () banked
  2042  0006D8  51B4               	movf	?___wmul& (0+255),w,b
  2043  0006DA  0100               	movlb	0	; force () banked
  2044  0006DC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2045  0006DE  0100               	movlb	0	; force () banked
  2046  0006E0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2047  0006E2  0100               	movlb	0	; force () banked
  2048  0006E4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2049  0006E6  0100               	movlb	0	; force () banked
  2050  0006E8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2051  0006EA  0100               	movlb	0	; force () banked
  2052  0006EC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2053  0006EE  6ED9               	movwf	fsr2l,c
  2054  0006F0  0100               	movlb	0	; force () banked
  2055  0006F2  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2056  0006F4  0100               	movlb	0	; force () banked
  2057  0006F6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2058  0006F8  6EDA               	movwf	fsr2h,c
  2059  0006FA  0E02               	movlw	2
  2060  0006FC  18DE               	xorwf	postinc2,w,c
  2061  0006FE  A4D8               	btfss	status,2,c
  2062  000700  EF84  F003         	goto	u1261
  2063  000704  EF86  F003         	goto	u1260
  2064  000708                     u1261:
  2065  000708  EF88  F003         	goto	l2130
  2066  00070C                     u1260:
  2067  00070C                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 279: nombreTouche++;
  2070  00070C  0100               	movlb	0	; force () banked
  2071  00070E  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2072  000710                     l2130:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 280: };main.c: 281: if(ligne!=0)
  2076  000710  0100               	movlb	0	; force () banked
  2077  000712  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2078  000714  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2079  000716  B4D8               	btfsc	status,2,c
  2080  000718  EF90  F003         	goto	u1271
  2081  00071C  EF92  F003         	goto	u1270
  2082  000720                     u1271:
  2083  000720  EFC7  F003         	goto	l2136
  2084  000724                     u1270:
  2085  000724                     
  2086                           ; BSR set to: 0
  2087                           ;main.c: 282: {;main.c: 283: if(m_tabMines[ligne-1][colonne]==2)
  2088  000724  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2089  000728  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2090  00072C  0E00               	movlw	0
  2091  00072E  0100               	movlb	0	; force () banked
  2092  000730  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2093  000732  0E15               	movlw	21
  2094  000734  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2095  000736  EC4B  F010         	call	___wmul	;wreg free
  2096  00073A  0EEB               	movlw	235
  2097  00073C  0100               	movlb	0	; force () banked
  2098  00073E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2099  000740  0EFF               	movlw	255
  2100  000742  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2101  000744  0E60               	movlw	low _m_tabMines
  2102  000746  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2103  000748  0E00               	movlw	high _m_tabMines
  2104  00074A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2105  00074C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2106  00074E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2107  000750  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2108  000752  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2109  000754  0100               	movlb	0	; force () banked
  2110  000756  51B4               	movf	?___wmul& (0+255),w,b
  2111  000758  0100               	movlb	0	; force () banked
  2112  00075A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2113  00075C  0100               	movlb	0	; force () banked
  2114  00075E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2115  000760  0100               	movlb	0	; force () banked
  2116  000762  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2117  000764  0100               	movlb	0	; force () banked
  2118  000766  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2119  000768  0100               	movlb	0	; force () banked
  2120  00076A  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2121  00076C  6ED9               	movwf	fsr2l,c
  2122  00076E  0100               	movlb	0	; force () banked
  2123  000770  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2124  000772  0100               	movlb	0	; force () banked
  2125  000774  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2126  000776  6EDA               	movwf	fsr2h,c
  2127  000778  0E02               	movlw	2
  2128  00077A  18DE               	xorwf	postinc2,w,c
  2129  00077C  A4D8               	btfss	status,2,c
  2130  00077E  EFC3  F003         	goto	u1281
  2131  000782  EFC5  F003         	goto	u1280
  2132  000786                     u1281:
  2133  000786  EFC7  F003         	goto	l2136
  2134  00078A                     u1280:
  2135  00078A                     
  2136                           ; BSR set to: 0
  2137                           ;main.c: 284: nombreTouche++;
  2138  00078A  0100               	movlb	0	; force () banked
  2139  00078C  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2140  00078E                     l2136:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 285: };main.c: 286: if(ligne!=3&&colonne!=0)
  2144  00078E  0E03               	movlw	3
  2145  000790  0100               	movlb	0	; force () banked
  2146  000792  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2147  000794  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2148  000796  B4D8               	btfsc	status,2,c
  2149  000798  EFD0  F003         	goto	u1291
  2150  00079C  EFD2  F003         	goto	u1290
  2151  0007A0                     u1291:
  2152  0007A0  EF0D  F004         	goto	l2144
  2153  0007A4                     u1290:
  2154  0007A4                     
  2155                           ; BSR set to: 0
  2156  0007A4  0100               	movlb	0	; force () banked
  2157  0007A6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2158  0007A8  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2159  0007AA  B4D8               	btfsc	status,2,c
  2160  0007AC  EFDA  F003         	goto	u1301
  2161  0007B0  EFDC  F003         	goto	u1300
  2162  0007B4                     u1301:
  2163  0007B4  EF0D  F004         	goto	l2144
  2164  0007B8                     u1300:
  2165  0007B8                     
  2166                           ; BSR set to: 0
  2167                           ;main.c: 287: {;main.c: 288: if(m_tabMines[ligne+1][colonne-1]==2)
  2168  0007B8  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2169  0007BC  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2170  0007C0  0E00               	movlw	0
  2171  0007C2  0100               	movlb	0	; force () banked
  2172  0007C4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2173  0007C6  0E15               	movlw	21
  2174  0007C8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2175  0007CA  EC4B  F010         	call	___wmul	;wreg free
  2176  0007CE  0E60               	movlw	low _m_tabMines
  2177  0007D0  0100               	movlb	0	; force () banked
  2178  0007D2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2179  0007D4  0E00               	movlw	high _m_tabMines
  2180  0007D6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2181  0007D8  0E14               	movlw	20
  2182  0007DA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2183  0007DC  0E00               	movlw	0
  2184  0007DE  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2185  0007E0  0100               	movlb	0	; force () banked
  2186  0007E2  51B4               	movf	?___wmul& (0+255),w,b
  2187  0007E4  0100               	movlb	0	; force () banked
  2188  0007E6  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2189  0007E8  0100               	movlb	0	; force () banked
  2190  0007EA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2191  0007EC  0100               	movlb	0	; force () banked
  2192  0007EE  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2193  0007F0  0100               	movlb	0	; force () banked
  2194  0007F2  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2195  0007F4  0100               	movlb	0	; force () banked
  2196  0007F6  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2197  0007F8  6ED9               	movwf	fsr2l,c
  2198  0007FA  0100               	movlb	0	; force () banked
  2199  0007FC  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2200  0007FE  0100               	movlb	0	; force () banked
  2201  000800  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2202  000802  6EDA               	movwf	fsr2h,c
  2203  000804  0E02               	movlw	2
  2204  000806  18DE               	xorwf	postinc2,w,c
  2205  000808  A4D8               	btfss	status,2,c
  2206  00080A  EF09  F004         	goto	u1311
  2207  00080E  EF0B  F004         	goto	u1310
  2208  000812                     u1311:
  2209  000812  EF0D  F004         	goto	l2144
  2210  000816                     u1310:
  2211  000816                     
  2212                           ; BSR set to: 0
  2213                           ;main.c: 289: nombreTouche++;
  2214  000816  0100               	movlb	0	; force () banked
  2215  000818  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2216  00081A                     l2144:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 290: };main.c: 291: if(ligne!=3&&colonne!=19)
  2220  00081A  0E03               	movlw	3
  2221  00081C  0100               	movlb	0	; force () banked
  2222  00081E  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2223  000820  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2224  000822  B4D8               	btfsc	status,2,c
  2225  000824  EF16  F004         	goto	u1321
  2226  000828  EF18  F004         	goto	u1320
  2227  00082C                     u1321:
  2228  00082C  EF54  F004         	goto	l2152
  2229  000830                     u1320:
  2230  000830                     
  2231                           ; BSR set to: 0
  2232  000830  0E13               	movlw	19
  2233  000832  0100               	movlb	0	; force () banked
  2234  000834  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2235  000836  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2236  000838  B4D8               	btfsc	status,2,c
  2237  00083A  EF21  F004         	goto	u1331
  2238  00083E  EF23  F004         	goto	u1330
  2239  000842                     u1331:
  2240  000842  EF54  F004         	goto	l2152
  2241  000846                     u1330:
  2242  000846                     
  2243                           ; BSR set to: 0
  2244                           ;main.c: 292: {;main.c: 293: if(m_tabMines[ligne+1][colonne+1]==2)
  2245  000846  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2246  00084A  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2247  00084E  0E00               	movlw	0
  2248  000850  0100               	movlb	0	; force () banked
  2249  000852  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2250  000854  0E15               	movlw	21
  2251  000856  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2252  000858  EC4B  F010         	call	___wmul	;wreg free
  2253  00085C  0E60               	movlw	low _m_tabMines
  2254  00085E  0100               	movlb	0	; force () banked
  2255  000860  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2256  000862  0E00               	movlw	high _m_tabMines
  2257  000864  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2258  000866  0E16               	movlw	22
  2259  000868  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2260  00086A  0E00               	movlw	0
  2261  00086C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2262  00086E  0100               	movlb	0	; force () banked
  2263  000870  51B4               	movf	?___wmul& (0+255),w,b
  2264  000872  0100               	movlb	0	; force () banked
  2265  000874  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2266  000876  0100               	movlb	0	; force () banked
  2267  000878  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2268  00087A  0100               	movlb	0	; force () banked
  2269  00087C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2270  00087E  0100               	movlb	0	; force () banked
  2271  000880  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2272  000882  0100               	movlb	0	; force () banked
  2273  000884  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2274  000886  6ED9               	movwf	fsr2l,c
  2275  000888  0100               	movlb	0	; force () banked
  2276  00088A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2277  00088C  0100               	movlb	0	; force () banked
  2278  00088E  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2279  000890  6EDA               	movwf	fsr2h,c
  2280  000892  0E02               	movlw	2
  2281  000894  18DE               	xorwf	postinc2,w,c
  2282  000896  A4D8               	btfss	status,2,c
  2283  000898  EF50  F004         	goto	u1341
  2284  00089C  EF52  F004         	goto	u1340
  2285  0008A0                     u1341:
  2286  0008A0  EF54  F004         	goto	l2152
  2287  0008A4                     u1340:
  2288  0008A4                     
  2289                           ; BSR set to: 0
  2290                           ;main.c: 294: nombreTouche++;
  2291  0008A4  0100               	movlb	0	; force () banked
  2292  0008A6  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2293  0008A8                     l2152:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 295: };main.c: 296: if(ligne!=0&&colonne!=0)
  2297  0008A8  0100               	movlb	0	; force () banked
  2298  0008AA  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2299  0008AC  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2300  0008AE  B4D8               	btfsc	status,2,c
  2301  0008B0  EF5C  F004         	goto	u1351
  2302  0008B4  EF5E  F004         	goto	u1350
  2303  0008B8                     u1351:
  2304  0008B8  EF9D  F004         	goto	l2160
  2305  0008BC                     u1350:
  2306  0008BC                     
  2307                           ; BSR set to: 0
  2308  0008BC  0100               	movlb	0	; force () banked
  2309  0008BE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2310  0008C0  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2311  0008C2  B4D8               	btfsc	status,2,c
  2312  0008C4  EF66  F004         	goto	u1361
  2313  0008C8  EF68  F004         	goto	u1360
  2314  0008CC                     u1361:
  2315  0008CC  EF9D  F004         	goto	l2160
  2316  0008D0                     u1360:
  2317  0008D0                     
  2318                           ; BSR set to: 0
  2319                           ;main.c: 297: {;main.c: 298: if(m_tabMines[ligne-1][colonne-1]==2)
  2320  0008D0  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2321  0008D4  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2322  0008D8  0E00               	movlw	0
  2323  0008DA  0100               	movlb	0	; force () banked
  2324  0008DC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2325  0008DE  0E15               	movlw	21
  2326  0008E0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2327  0008E2  EC4B  F010         	call	___wmul	;wreg free
  2328  0008E6  0EEA               	movlw	234
  2329  0008E8  0100               	movlb	0	; force () banked
  2330  0008EA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2331  0008EC  0EFF               	movlw	255
  2332  0008EE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2333  0008F0  0E60               	movlw	low _m_tabMines
  2334  0008F2  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2335  0008F4  0E00               	movlw	high _m_tabMines
  2336  0008F6  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2337  0008F8  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2338  0008FA  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2339  0008FC  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2340  0008FE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2341  000900  0100               	movlb	0	; force () banked
  2342  000902  51B4               	movf	?___wmul& (0+255),w,b
  2343  000904  0100               	movlb	0	; force () banked
  2344  000906  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2345  000908  0100               	movlb	0	; force () banked
  2346  00090A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2347  00090C  0100               	movlb	0	; force () banked
  2348  00090E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2349  000910  0100               	movlb	0	; force () banked
  2350  000912  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2351  000914  0100               	movlb	0	; force () banked
  2352  000916  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2353  000918  6ED9               	movwf	fsr2l,c
  2354  00091A  0100               	movlb	0	; force () banked
  2355  00091C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2356  00091E  0100               	movlb	0	; force () banked
  2357  000920  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2358  000922  6EDA               	movwf	fsr2h,c
  2359  000924  0E02               	movlw	2
  2360  000926  18DE               	xorwf	postinc2,w,c
  2361  000928  A4D8               	btfss	status,2,c
  2362  00092A  EF99  F004         	goto	u1371
  2363  00092E  EF9B  F004         	goto	u1370
  2364  000932                     u1371:
  2365  000932  EF9D  F004         	goto	l2160
  2366  000936                     u1370:
  2367  000936                     
  2368                           ; BSR set to: 0
  2369                           ;main.c: 299: nombreTouche++;
  2370  000936  0100               	movlb	0	; force () banked
  2371  000938  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2372  00093A                     l2160:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;main.c: 300: };main.c: 301: if(ligne!=0&&colonne!=19)
  2376  00093A  0100               	movlb	0	; force () banked
  2377  00093C  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2378  00093E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2379  000940  B4D8               	btfsc	status,2,c
  2380  000942  EFA5  F004         	goto	u1381
  2381  000946  EFA7  F004         	goto	u1380
  2382  00094A                     u1381:
  2383  00094A  EFE7  F004         	goto	l2168
  2384  00094E                     u1380:
  2385  00094E                     
  2386                           ; BSR set to: 0
  2387  00094E  0E13               	movlw	19
  2388  000950  0100               	movlb	0	; force () banked
  2389  000952  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2390  000954  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2391  000956  B4D8               	btfsc	status,2,c
  2392  000958  EFB0  F004         	goto	u1391
  2393  00095C  EFB2  F004         	goto	u1390
  2394  000960                     u1391:
  2395  000960  EFE7  F004         	goto	l2168
  2396  000964                     u1390:
  2397  000964                     
  2398                           ; BSR set to: 0
  2399                           ;main.c: 302: {;main.c: 303: if(m_tabMines[ligne-1][colonne+1]==2)
  2400  000964  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2401  000968  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2402  00096C  0E00               	movlw	0
  2403  00096E  0100               	movlb	0	; force () banked
  2404  000970  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2405  000972  0E15               	movlw	21
  2406  000974  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2407  000976  EC4B  F010         	call	___wmul	;wreg free
  2408  00097A  0EEC               	movlw	236
  2409  00097C  0100               	movlb	0	; force () banked
  2410  00097E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2411  000980  0EFF               	movlw	255
  2412  000982  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2413  000984  0E60               	movlw	low _m_tabMines
  2414  000986  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2415  000988  0E00               	movlw	high _m_tabMines
  2416  00098A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2417  00098C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2418  00098E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2419  000990  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2420  000992  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2421  000994  0100               	movlb	0	; force () banked
  2422  000996  51B4               	movf	?___wmul& (0+255),w,b
  2423  000998  0100               	movlb	0	; force () banked
  2424  00099A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2425  00099C  0100               	movlb	0	; force () banked
  2426  00099E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2427  0009A0  0100               	movlb	0	; force () banked
  2428  0009A2  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2429  0009A4  0100               	movlb	0	; force () banked
  2430  0009A6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2431  0009A8  0100               	movlb	0	; force () banked
  2432  0009AA  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2433  0009AC  6ED9               	movwf	fsr2l,c
  2434  0009AE  0100               	movlb	0	; force () banked
  2435  0009B0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2436  0009B2  0100               	movlb	0	; force () banked
  2437  0009B4  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2438  0009B6  6EDA               	movwf	fsr2h,c
  2439  0009B8  0E02               	movlw	2
  2440  0009BA  18DE               	xorwf	postinc2,w,c
  2441  0009BC  A4D8               	btfss	status,2,c
  2442  0009BE  EFE3  F004         	goto	u1401
  2443  0009C2  EFE5  F004         	goto	u1400
  2444  0009C6                     u1401:
  2445  0009C6  EFE7  F004         	goto	l2168
  2446  0009CA                     u1400:
  2447  0009CA                     
  2448                           ; BSR set to: 0
  2449                           ;main.c: 304: nombreTouche++;
  2450  0009CA  0100               	movlb	0	; force () banked
  2451  0009CC  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2452  0009CE                     l2168:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;main.c: 305: };main.c: 306: if(colonne!=19)
  2456  0009CE  0E13               	movlw	19
  2457  0009D0  0100               	movlb	0	; force () banked
  2458  0009D2  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2459  0009D4  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2460  0009D6  B4D8               	btfsc	status,2,c
  2461  0009D8  EFF0  F004         	goto	u1411
  2462  0009DC  EFF2  F004         	goto	u1410
  2463  0009E0                     u1411:
  2464  0009E0  EF23  F005         	goto	l2174
  2465  0009E4                     u1410:
  2466  0009E4                     
  2467                           ; BSR set to: 0
  2468                           ;main.c: 307: {;main.c: 308: if(m_tabMines[ligne][colonne+1]==2)
  2469  0009E4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2470  0009E8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2471  0009EC  0E00               	movlw	0
  2472  0009EE  0100               	movlb	0	; force () banked
  2473  0009F0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2474  0009F2  0E15               	movlw	21
  2475  0009F4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2476  0009F6  EC4B  F010         	call	___wmul	;wreg free
  2477  0009FA  0E60               	movlw	low _m_tabMines
  2478  0009FC  0100               	movlb	0	; force () banked
  2479  0009FE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2480  000A00  0E00               	movlw	high _m_tabMines
  2481  000A02  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2482  000A04  0E01               	movlw	1
  2483  000A06  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2484  000A08  0E00               	movlw	0
  2485  000A0A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2486  000A0C  0100               	movlb	0	; force () banked
  2487  000A0E  51B4               	movf	?___wmul& (0+255),w,b
  2488  000A10  0100               	movlb	0	; force () banked
  2489  000A12  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2490  000A14  0100               	movlb	0	; force () banked
  2491  000A16  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2492  000A18  0100               	movlb	0	; force () banked
  2493  000A1A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2494  000A1C  0100               	movlb	0	; force () banked
  2495  000A1E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2496  000A20  0100               	movlb	0	; force () banked
  2497  000A22  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2498  000A24  6ED9               	movwf	fsr2l,c
  2499  000A26  0100               	movlb	0	; force () banked
  2500  000A28  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2501  000A2A  0100               	movlb	0	; force () banked
  2502  000A2C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2503  000A2E  6EDA               	movwf	fsr2h,c
  2504  000A30  0E02               	movlw	2
  2505  000A32  18DE               	xorwf	postinc2,w,c
  2506  000A34  A4D8               	btfss	status,2,c
  2507  000A36  EF1F  F005         	goto	u1421
  2508  000A3A  EF21  F005         	goto	u1420
  2509  000A3E                     u1421:
  2510  000A3E  EF23  F005         	goto	l2174
  2511  000A42                     u1420:
  2512  000A42                     
  2513                           ; BSR set to: 0
  2514                           ;main.c: 309: nombreTouche++;
  2515  000A42  0100               	movlb	0	; force () banked
  2516  000A44  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2517  000A46                     l2174:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;main.c: 310: };main.c: 311: if(colonne!=0)
  2521  000A46  0100               	movlb	0	; force () banked
  2522  000A48  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2523  000A4A  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2524  000A4C  B4D8               	btfsc	status,2,c
  2525  000A4E  EF2B  F005         	goto	u1431
  2526  000A52  EF2D  F005         	goto	u1430
  2527  000A56                     u1431:
  2528  000A56  EF62  F005         	goto	l2180
  2529  000A5A                     u1430:
  2530  000A5A                     
  2531                           ; BSR set to: 0
  2532                           ;main.c: 312: {;main.c: 313: if(m_tabMines[ligne][colonne-1]==2)
  2533  000A5A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2534  000A5E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2535  000A62  0E00               	movlw	0
  2536  000A64  0100               	movlb	0	; force () banked
  2537  000A66  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2538  000A68  0E15               	movlw	21
  2539  000A6A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2540  000A6C  EC4B  F010         	call	___wmul	;wreg free
  2541  000A70  0EFF               	movlw	255
  2542  000A72  0100               	movlb	0	; force () banked
  2543  000A74  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2544  000A76  0EFF               	movlw	255
  2545  000A78  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2546  000A7A  0E60               	movlw	low _m_tabMines
  2547  000A7C  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2548  000A7E  0E00               	movlw	high _m_tabMines
  2549  000A80  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2550  000A82  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2551  000A84  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2552  000A86  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2553  000A88  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2554  000A8A  0100               	movlb	0	; force () banked
  2555  000A8C  51B4               	movf	?___wmul& (0+255),w,b
  2556  000A8E  0100               	movlb	0	; force () banked
  2557  000A90  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2558  000A92  0100               	movlb	0	; force () banked
  2559  000A94  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2560  000A96  0100               	movlb	0	; force () banked
  2561  000A98  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2562  000A9A  0100               	movlb	0	; force () banked
  2563  000A9C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2564  000A9E  0100               	movlb	0	; force () banked
  2565  000AA0  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2566  000AA2  6ED9               	movwf	fsr2l,c
  2567  000AA4  0100               	movlb	0	; force () banked
  2568  000AA6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2569  000AA8  0100               	movlb	0	; force () banked
  2570  000AAA  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2571  000AAC  6EDA               	movwf	fsr2h,c
  2572  000AAE  0E02               	movlw	2
  2573  000AB0  18DE               	xorwf	postinc2,w,c
  2574  000AB2  A4D8               	btfss	status,2,c
  2575  000AB4  EF5E  F005         	goto	u1441
  2576  000AB8  EF60  F005         	goto	u1440
  2577  000ABC                     u1441:
  2578  000ABC  EF62  F005         	goto	l2180
  2579  000AC0                     u1440:
  2580  000AC0                     
  2581                           ; BSR set to: 0
  2582                           ;main.c: 314: nombreTouche++;
  2583  000AC0  0100               	movlb	0	; force () banked
  2584  000AC2  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2585  000AC4                     l2180:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;main.c: 315: };main.c: 316: };main.c: 317: return nombreTouche;
  2589  000AC4  0100               	movlb	0	; force () banked
  2590  000AC6  51C3               	movf	calculToucheCombien@nombreTouche& (0+255),w,b
  2591  000AC8                     
  2592                           ; BSR set to: 0
  2593  000AC8  0012               	return		;funcret
  2594  000ACA                     __end_of_calculToucheCombien:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _menuAccueil *****************
  2598 ;; Defined at:
  2599 ;;		line 132 in file "main.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  menuMsgs       40   16[BANK0 ] const unsigned char [20]
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2613 ;;      Params:         0       0       0       0       0       0       0
  2614 ;;      Locals:         0      40       0       0       0       0       0
  2615 ;;      Temps:          0       2       0       0       0       0       0
  2616 ;;      Totals:         0      42       0       0       0       0       0
  2617 ;;Total ram usage:       42 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    5
  2620 ;; This function calls:
  2621 ;;		_lcd_cacheCurseur
  2622 ;;		_lcd_curseurHome
  2623 ;;		_lcd_effaceAffichage
  2624 ;;		_lcd_gotoXY
  2625 ;;		_lcd_putMessage
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text8
  2632  001AD0                     __ptext8:
  2633                           	opt callstack 0
  2634  001AD0                     _menuAccueil:
  2635                           	opt callstack 25
  2636  001AD0                     
  2637                           ;main.c: 135: const char menuMsgs[2][20] = {"Laboratoire 6 ","Simon Jourdenais"};
  2638  001AD0  0E01               	movlw	low menuAccueil@F2903
  2639  001AD2  6EF6               	movwf	tblptrl,c
  2640  001AD4                     	if	1	;There is more than 1 active tblptr byte
  2641  001AD4  0E06               	movlw	high menuAccueil@F2903
  2642  001AD6  6EF7               	movwf	tblptrh,c
  2643  001AD8                     	endif
  2644  001AD8                     	if	1	;There are 3 active tblptr bytes
  2645  001AD8  0E00               	movlw	low (menuAccueil@F2903 shr (0+16))
  2646  001ADA  6EF8               	movwf	tblptru,c
  2647  001ADC                     	endif
  2648  001ADC  EE20  F0C4         	lfsr	2,menuAccueil@menuMsgs
  2649  001AE0  0E27               	movlw	39
  2650  001AE2                     u1690:
  2651  001AE2  0009               	tblrd		*+
  2652  001AE4  CFF5 FFDE          	movff	tablat,postinc2
  2653  001AE8  06E8               	decf	wreg,f,c
  2654  001AEA  E2FB               	bc	u1690
  2655  001AEC                     
  2656                           ;main.c: 136: lcd_effaceAffichage();
  2657  001AEC  EC84  F010         	call	_lcd_effaceAffichage	;wreg free
  2658  001AF0                     
  2659                           ;main.c: 137: lcd_putMessage(menuMsgs[0]);
  2660  001AF0  0EC4               	movlw	low menuAccueil@menuMsgs
  2661  001AF2  0100               	movlb	0	; force () banked
  2662  001AF4  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  2663  001AF6  0E00               	movlw	high menuAccueil@menuMsgs
  2664  001AF8  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  2665  001AFA  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  2666  001AFC  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  2667  001AFE  A4D8               	btfss	status,2,c
  2668  001B00  0E20               	movlw	32
  2669  001B02  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  2670  001B04  EC19  F00C         	call	_lcd_putMessage	;wreg free
  2671  001B08                     
  2672                           ;main.c: 138: lcd_gotoXY(1,3);
  2673  001B08  0E03               	movlw	3
  2674  001B0A  0100               	movlb	0	; force () banked
  2675  001B0C  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2676  001B0E  0E01               	movlw	1
  2677  001B10  ECAB  F00D         	call	_lcd_gotoXY
  2678  001B14                     
  2679                           ;main.c: 139: lcd_putMessage(menuMsgs[1]);
  2680  001B14  0ED8               	movlw	low (menuAccueil@menuMsgs+20)
  2681  001B16  0100               	movlb	0	; force () banked
  2682  001B18  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  2683  001B1A  0E00               	movlw	high (menuAccueil@menuMsgs+20)
  2684  001B1C  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  2685  001B1E  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  2686  001B20  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  2687  001B22  A4D8               	btfss	status,2,c
  2688  001B24  0E20               	movlw	32
  2689  001B26  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  2690  001B28  EC19  F00C         	call	_lcd_putMessage	;wreg free
  2691  001B2C                     
  2692                           ;main.c: 140: lcd_curseurHome();
  2693  001B2C  EC93  F010         	call	_lcd_curseurHome	;wreg free
  2694  001B30                     
  2695                           ;main.c: 141: lcd_cacheCurseur();
  2696  001B30  EC8B  F010         	call	_lcd_cacheCurseur	;wreg free
  2697  001B34                     
  2698                           ;main.c: 142: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2699  001B34  0E02               	movlw	2
  2700  001B36  0100               	movlb	0	; force () banked
  2701  001B38  6FC3               	movwf	(??_menuAccueil+1)& (0+255),b
  2702  001B3A  0E45               	movlw	69
  2703  001B3C  6FC2               	movwf	??_menuAccueil& (0+255),b
  2704  001B3E  0EA9               	movlw	169
  2705  001B40                     u2207:
  2706  001B40  2EE8               	decfsz	wreg,f,c
  2707  001B42  D7FE               	bra	u2207
  2708  001B44  2FC2               	decfsz	??_menuAccueil& (0+255),f,b
  2709  001B46  D7FC               	bra	u2207
  2710  001B48  2FC3               	decfsz	(??_menuAccueil+1)& (0+255),f,b
  2711  001B4A  D7FA               	bra	u2207
  2712  001B4C  F000 F000          	nop2	
  2713  001B50                     
  2714                           ;main.c: 143: lcd_effaceAffichage();
  2715  001B50  EC84  F010         	call	_lcd_effaceAffichage	;wreg free
  2716  001B54  0012               	return		;funcret
  2717  001B56                     __end_of_menuAccueil:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _lcd_cacheCurseur *****************
  2721 ;; Defined at:
  2722 ;;		line 402 in file "Lcd4Lignes.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2736 ;;      Params:         0       0       0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    3
  2743 ;; This function calls:
  2744 ;;		_lcd_wrCom
  2745 ;; This function is called by:
  2746 ;;		_menuAccueil
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text9
  2751  002116                     __ptext9:
  2752                           	opt callstack 0
  2753  002116                     _lcd_cacheCurseur:
  2754                           	opt callstack 26
  2755  002116                     
  2756                           ;Lcd4Lignes.c: 404: lcd_wrCom(0x0C);
  2757  002116  0E0C               	movlw	12
  2758  002118  EC88  F00E         	call	_lcd_wrCom
  2759  00211C  0012               	return		;funcret
  2760  00211E                     __end_of_lcd_cacheCurseur:
  2761                           	opt callstack 0
  2762                           
  2763 ;; *************** function _lcd_montreCurseur *****************
  2764 ;; Defined at:
  2765 ;;		line 413 in file "Lcd4Lignes.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2779 ;;      Params:         0       0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    3
  2786 ;; This function calls:
  2787 ;;		_lcd_wrCom
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text10
  2794  00211E                     __ptext10:
  2795                           	opt callstack 0
  2796  00211E                     _lcd_montreCurseur:
  2797                           	opt callstack 27
  2798  00211E                     
  2799                           ;Lcd4Lignes.c: 415: lcd_wrCom(0x0F);
  2800  00211E  0E0F               	movlw	15
  2801  002120  EC88  F00E         	call	_lcd_wrCom
  2802  002124  0012               	return		;funcret
  2803  002126                     __end_of_lcd_montreCurseur:
  2804                           	opt callstack 0
  2805                           
  2806 ;; *************** function _lcd_init *****************
  2807 ;; Defined at:
  2808 ;;		line 259 in file "Lcd4Lignes.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2822 ;;      Params:         0       0       0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    5
  2829 ;; This function calls:
  2830 ;;		_lcd_initCGRam
  2831 ;;		_lcd_resetSequence
  2832 ;;		_lcd_wrCom
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text11
  2839  00206E                     __ptext11:
  2840                           	opt callstack 0
  2841  00206E                     _lcd_init:
  2842                           	opt callstack 25
  2843  00206E                     
  2844                           ;Lcd4Lignes.c: 262: lcd_resetSequence();
  2845  00206E  ECBE  F00E         	call	_lcd_resetSequence	;wreg free
  2846                           
  2847                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x28);
  2848  002072  0E28               	movlw	40
  2849  002074  EC88  F00E         	call	_lcd_wrCom
  2850                           
  2851                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x0F);
  2852  002078  0E0F               	movlw	15
  2853  00207A  EC88  F00E         	call	_lcd_wrCom
  2854                           
  2855                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x01);
  2856  00207E  0E01               	movlw	1
  2857  002080  EC88  F00E         	call	_lcd_wrCom
  2858                           
  2859                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x06);
  2860  002084  0E06               	movlw	6
  2861  002086  EC88  F00E         	call	_lcd_wrCom
  2862                           
  2863                           ;Lcd4Lignes.c: 267: lcd_wrCom(0x80);
  2864  00208A  0E80               	movlw	128
  2865  00208C  EC88  F00E         	call	_lcd_wrCom
  2866  002090                     
  2867                           ;Lcd4Lignes.c: 268: lcd_initCGRam();
  2868  002090  ECCC  F00C         	call	_lcd_initCGRam	;wreg free
  2869  002094  0012               	return		;funcret
  2870  002096                     __end_of_lcd_init:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function _lcd_resetSequence *****************
  2874 ;; Defined at:
  2875 ;;		line 222 in file "Lcd4Lignes.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2889 ;;      Params:         0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0
  2891 ;;      Temps:          0       1       0       0       0       0       0
  2892 ;;      Totals:         0       1       0       0       0       0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    1
  2896 ;; This function calls:
  2897 ;;		_lcd_ecrireDonnees
  2898 ;;		_lcd_strobeEnableBit
  2899 ;; This function is called by:
  2900 ;;		_lcd_init
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text12
  2905  001D7C                     __ptext12:
  2906                           	opt callstack 0
  2907  001D7C                     _lcd_resetSequence:
  2908                           	opt callstack 28
  2909  001D7C                     
  2910                           ;Lcd4Lignes.c: 227: TRISD = 0b00000000;
  2911  001D7C  0E00               	movlw	0
  2912  001D7E  6E95               	movwf	149,c	;volatile
  2913  001D80                     
  2914                           ;Lcd4Lignes.c: 229: _delay((unsigned long)((40)*(1000000/4000.0)));
  2915  001D80  0E0D               	movlw	13
  2916  001D82  0100               	movlb	0	; force () banked
  2917  001D84  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2918  001D86  0EFB               	movlw	251
  2919  001D88                     u2217:
  2920  001D88  2EE8               	decfsz	wreg,f,c
  2921  001D8A  D7FE               	bra	u2217
  2922  001D8C  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2923  001D8E  D7FC               	bra	u2217
  2924  001D90  F000 F000          	nop2	
  2925  001D94                     
  2926                           ;Lcd4Lignes.c: 230: PORTAbits.RA0 = 0;
  2927  001D94  9080               	bcf	128,0,c	;volatile
  2928  001D96                     
  2929                           ;Lcd4Lignes.c: 231: PORTAbits.RA1 = 0;
  2930  001D96  9280               	bcf	128,1,c	;volatile
  2931  001D98                     
  2932                           ;Lcd4Lignes.c: 233: lcd_ecrireDonnees(0x03);
  2933  001D98  0E03               	movlw	3
  2934  001D9A  EC6E  F010         	call	_lcd_ecrireDonnees
  2935  001D9E                     
  2936                           ;Lcd4Lignes.c: 234: lcd_strobeEnableBit();
  2937  001D9E  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  2938  001DA2                     
  2939                           ;Lcd4Lignes.c: 235: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2940  001DA2  0E03               	movlw	3
  2941  001DA4                     u2227:
  2942  001DA4  2EE8               	decfsz	wreg,f,c
  2943  001DA6  D7FE               	bra	u2227
  2944  001DA8  F000               	nop	
  2945  001DAA                     
  2946                           ;Lcd4Lignes.c: 238: lcd_ecrireDonnees(0x03);
  2947  001DAA  0E03               	movlw	3
  2948  001DAC  EC6E  F010         	call	_lcd_ecrireDonnees
  2949  001DB0                     
  2950                           ;Lcd4Lignes.c: 239: lcd_strobeEnableBit();
  2951  001DB0  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  2952  001DB4                     
  2953                           ;Lcd4Lignes.c: 240: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2954  001DB4  0E03               	movlw	3
  2955  001DB6                     u2237:
  2956  001DB6  2EE8               	decfsz	wreg,f,c
  2957  001DB8  D7FE               	bra	u2237
  2958  001DBA  F000               	nop	
  2959  001DBC                     
  2960                           ;Lcd4Lignes.c: 242: lcd_ecrireDonnees(0x03);
  2961  001DBC  0E03               	movlw	3
  2962  001DBE  EC6E  F010         	call	_lcd_ecrireDonnees
  2963  001DC2                     
  2964                           ;Lcd4Lignes.c: 243: lcd_strobeEnableBit();
  2965  001DC2  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  2966  001DC6                     
  2967                           ;Lcd4Lignes.c: 244: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2968  001DC6  0E03               	movlw	3
  2969  001DC8                     u2247:
  2970  001DC8  2EE8               	decfsz	wreg,f,c
  2971  001DCA  D7FE               	bra	u2247
  2972  001DCC  F000               	nop	
  2973  001DCE                     
  2974                           ;Lcd4Lignes.c: 246: lcd_ecrireDonnees(0x02);
  2975  001DCE  0E02               	movlw	2
  2976  001DD0  EC6E  F010         	call	_lcd_ecrireDonnees
  2977  001DD4                     
  2978                           ;Lcd4Lignes.c: 247: lcd_strobeEnableBit();
  2979  001DD4  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  2980  001DD8                     
  2981                           ;Lcd4Lignes.c: 248: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2982  001DD8  0E03               	movlw	3
  2983  001DDA                     u2257:
  2984  001DDA  2EE8               	decfsz	wreg,f,c
  2985  001DDC  D7FE               	bra	u2257
  2986  001DDE  F000               	nop	
  2987  001DE0                     
  2988                           ;Lcd4Lignes.c: 250: TRISD = 0b00001111;
  2989  001DE0  0E0F               	movlw	15
  2990  001DE2  6E95               	movwf	149,c	;volatile
  2991  001DE4  0012               	return		;funcret
  2992  001DE6                     __end_of_lcd_resetSequence:
  2993                           	opt callstack 0
  2994                           
  2995 ;; *************** function _lcd_initCGRam *****************
  2996 ;; Defined at:
  2997 ;;		line 418 in file "Lcd4Lignes.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  j               1    6[BANK0 ] unsigned char 
  3002 ;;  i               1    5[BANK0 ] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3012 ;;      Params:         0       0       0       0       0       0       0
  3013 ;;      Locals:         0       2       0       0       0       0       0
  3014 ;;      Temps:          0       2       0       0       0       0       0
  3015 ;;      Totals:         0       4       0       0       0       0       0
  3016 ;;Total ram usage:        4 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    4
  3019 ;; This function calls:
  3020 ;;		_lcd_curseurHome
  3021 ;;		_lcd_wrCom
  3022 ;;		_lcd_wrData
  3023 ;; This function is called by:
  3024 ;;		_lcd_init
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text13
  3029  001998                     __ptext13:
  3030                           	opt callstack 0
  3031  001998                     _lcd_initCGRam:
  3032                           	opt callstack 25
  3033  001998                     
  3034                           ;Lcd4Lignes.c: 420: char i,j;;Lcd4Lignes.c: 422: lcd_wrCom(0x40);
  3035  001998  0E40               	movlw	64
  3036  00199A  EC88  F00E         	call	_lcd_wrCom
  3037  00199E                     
  3038                           ;Lcd4Lignes.c: 423: for(i=0;i<8;i++)
  3039  00199E  0E00               	movlw	0
  3040  0019A0  0100               	movlb	0	; force () banked
  3041  0019A2  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3042  0019A4                     
  3043                           ; BSR set to: 0
  3044  0019A4  0E07               	movlw	7
  3045  0019A6  0100               	movlb	0	; force () banked
  3046  0019A8  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3047  0019AA  EFD9  F00C         	goto	u1591
  3048  0019AE  EFDB  F00C         	goto	u1590
  3049  0019B2                     u1591:
  3050  0019B2  EFDD  F00C         	goto	l2298
  3051  0019B6                     u1590:
  3052  0019B6  EF1A  F00D         	goto	l2314
  3053  0019BA                     l2298:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;Lcd4Lignes.c: 424: {;Lcd4Lignes.c: 425: for(j=0;j<8;j++)
  3057  0019BA  0E00               	movlw	0
  3058  0019BC  0100               	movlb	0	; force () banked
  3059  0019BE  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3060  0019C0                     
  3061                           ; BSR set to: 0
  3062  0019C0  0E07               	movlw	7
  3063  0019C2  0100               	movlb	0	; force () banked
  3064  0019C4  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3065  0019C6  EFE7  F00C         	goto	u1601
  3066  0019CA  EFE9  F00C         	goto	u1600
  3067  0019CE                     u1601:
  3068  0019CE  EFEB  F00C         	goto	l2304
  3069  0019D2                     u1600:
  3070  0019D2  EF0F  F00D         	goto	l2310
  3071  0019D6                     l2304:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;Lcd4Lignes.c: 426: lcd_wrData(matCGRAM[i][j]);
  3075  0019D6  0100               	movlb	0	; force () banked
  3076  0019D8  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3077  0019DA  0D08               	mullw	8
  3078  0019DC  0E54               	movlw	low _matCGRAM
  3079  0019DE  0100               	movlb	0	; force () banked
  3080  0019E0  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3081  0019E2  0E01               	movlw	high _matCGRAM
  3082  0019E4  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3083  0019E6  50F3               	movf	243,w,c
  3084  0019E8  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3085  0019EA  50F4               	movf	244,w,c
  3086  0019EC  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3087  0019EE  0100               	movlb	0	; force () banked
  3088  0019F0  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3089  0019F2  0100               	movlb	0	; force () banked
  3090  0019F4  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3091  0019F6  6ED9               	movwf	fsr2l,c
  3092  0019F8  0100               	movlb	0	; force () banked
  3093  0019FA  0E00               	movlw	0
  3094  0019FC  0100               	movlb	0	; force () banked
  3095  0019FE  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3096  001A00  6EDA               	movwf	fsr2h,c
  3097  001A02  50DF               	movf	indf2,w,c
  3098  001A04  EC07  F010         	call	_lcd_wrData
  3099  001A08  0100               	movlb	0	; force () banked
  3100  001A0A  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3101  001A0C                     
  3102                           ; BSR set to: 0
  3103  001A0C  0E07               	movlw	7
  3104  001A0E  0100               	movlb	0	; force () banked
  3105  001A10  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3106  001A12  EF0D  F00D         	goto	u1611
  3107  001A16  EF0F  F00D         	goto	u1610
  3108  001A1A                     u1611:
  3109  001A1A  EFEB  F00C         	goto	l2304
  3110  001A1E                     u1610:
  3111  001A1E                     l2310:
  3112                           
  3113                           ; BSR set to: 0
  3114  001A1E  0100               	movlb	0	; force () banked
  3115  001A20  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3116  001A22                     
  3117                           ; BSR set to: 0
  3118  001A22  0E07               	movlw	7
  3119  001A24  0100               	movlb	0	; force () banked
  3120  001A26  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3121  001A28  EF18  F00D         	goto	u1621
  3122  001A2C  EF1A  F00D         	goto	u1620
  3123  001A30                     u1621:
  3124  001A30  EFDD  F00C         	goto	l2298
  3125  001A34                     u1620:
  3126  001A34                     l2314:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;Lcd4Lignes.c: 427: };Lcd4Lignes.c: 428: lcd_curseurHome();
  3130  001A34  EC93  F010         	call	_lcd_curseurHome	;wreg free
  3131  001A38  0012               	return		;funcret
  3132  001A3A                     __end_of_lcd_initCGRam:
  3133                           	opt callstack 0
  3134                           
  3135 ;; *************** function _lcd_curseurHome *****************
  3136 ;; Defined at:
  3137 ;;		line 289 in file "Lcd4Lignes.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3151 ;;      Params:         0       0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		_lcd_wrCom
  3160 ;; This function is called by:
  3161 ;;		_menuAccueil
  3162 ;;		_lcd_initCGRam
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text14
  3167  002126                     __ptext14:
  3168                           	opt callstack 0
  3169  002126                     _lcd_curseurHome:
  3170                           	opt callstack 26
  3171  002126                     
  3172                           ;Lcd4Lignes.c: 291: lcd_wrCom(0x02);
  3173  002126  0E02               	movlw	2
  3174  002128  EC88  F00E         	call	_lcd_wrCom
  3175  00212C  0012               	return		;funcret
  3176  00212E                     __end_of_lcd_curseurHome:
  3177                           	opt callstack 0
  3178                           
  3179 ;; *************** function _initialisation *****************
  3180 ;; Defined at:
  3181 ;;		line 486 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3195 ;;      Params:         0       0       0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0
  3198 ;;      Totals:         0       0       0       0       0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    1
  3202 ;; This function calls:
  3203 ;;		_srand
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text15
  3210  001FDA                     __ptext15:
  3211                           	opt callstack 0
  3212  001FDA                     _initialisation:
  3213                           	opt callstack 29
  3214  001FDA                     
  3215                           ;main.c: 488: TRISD = 0;
  3216  001FDA  0E00               	movlw	0
  3217  001FDC  6E95               	movwf	149,c	;volatile
  3218                           
  3219                           ;main.c: 490: ANSELH = 0;
  3220  001FDE  0E00               	movlw	0
  3221  001FE0  6E7F               	movwf	127,c	;volatile
  3222  001FE2                     
  3223                           ;main.c: 491: TRISB = 0xFF;
  3224  001FE2  6893               	setf	147,c	;volatile
  3225                           
  3226                           ;main.c: 493: ANSEL = 0;
  3227  001FE4  0E00               	movlw	0
  3228  001FE6  6E7E               	movwf	126,c	;volatile
  3229                           
  3230                           ;main.c: 494: TRISA = 0;
  3231  001FE8  0E00               	movlw	0
  3232  001FEA  6E92               	movwf	146,c	;volatile
  3233  001FEC                     
  3234                           ;main.c: 498: T1CONbits.TMR1ON = 1;
  3235  001FEC  80CD               	bsf	205,0,c	;volatile
  3236  001FEE                     
  3237                           ;main.c: 499: srand(TMR1);
  3238  001FEE  CFCE F0B4          	movff	4046,srand@x	;volatile
  3239  001FF2  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  3240  001FF6  EC7C  F010         	call	_srand	;wreg free
  3241  001FFA                     
  3242                           ;main.c: 502: ANSELbits.ANS7 = 1;
  3243  001FFA  8E7E               	bsf	126,7,c	;volatile
  3244  001FFC                     
  3245                           ;main.c: 504: ADCON0bits.ADON = 1;
  3246  001FFC  80C2               	bsf	194,0,c	;volatile
  3247  001FFE                     
  3248                           ;main.c: 505: ADCON1 = 0;
  3249  001FFE  0E00               	movlw	0
  3250  002000  6EC1               	movwf	193,c	;volatile
  3251  002002                     
  3252                           ;main.c: 507: ADCON2bits.ADFM = 0;
  3253  002002  9EC0               	bcf	192,7,c	;volatile
  3254  002004                     
  3255                           ;main.c: 508: ADCON2bits.ACQT = 0;
  3256  002004  0EC7               	movlw	-57
  3257  002006  16C0               	andwf	192,f,c	;volatile
  3258  002008                     
  3259                           ;main.c: 509: ADCON2bits.ADCS = 0;
  3260  002008  0EF8               	movlw	-8
  3261  00200A  16C0               	andwf	192,f,c	;volatile
  3262  00200C  0012               	return		;funcret
  3263  00200E                     __end_of_initialisation:
  3264                           	opt callstack 0
  3265                           
  3266 ;; *************** function _srand *****************
  3267 ;; Defined at:
  3268 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  x               2    0[BANK0 ] unsigned int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		status,2
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3282 ;;      Params:         0       2       0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0
  3285 ;;      Totals:         0       2       0       0       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_initialisation
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text16
  3296  0020F8                     __ptext16:
  3297                           	opt callstack 0
  3298  0020F8                     _srand:
  3299                           	opt callstack 29
  3300  0020F8  C0B4  F0F6         	movff	srand@x,_randx
  3301  0020FC  C0B5  F0F7         	movff	srand@x+1,_randx+1
  3302  002100  0100               	movlb	0	; () banked
  3303  002102  6BF8               	clrf	(_randx+2)& (0+255),b
  3304  002104  6BF9               	clrf	(_randx+3)& (0+255),b
  3305  002106                     
  3306                           ; BSR set to: 0
  3307  002106  0012               	return		;funcret
  3308  002108                     __end_of_srand:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _init_serie *****************
  3312 ;; Defined at:
  3313 ;;		line 30 in file "serie.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3327 ;;      Params:         0       0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text17
  3341  0020BE                     __ptext17:
  3342                           	opt callstack 0
  3343  0020BE                     _init_serie:
  3344                           	opt callstack 30
  3345  0020BE                     
  3346                           ;serie.c: 33: TRISCbits.TRISC7=1;
  3347  0020BE  8E94               	bsf	148,7,c	;volatile
  3348                           
  3349                           ;serie.c: 34: TRISCbits.TRISC6=1;
  3350  0020C0  8C94               	bsf	148,6,c	;volatile
  3351  0020C2                     
  3352                           ;serie.c: 38: SPBRGH=0x00;
  3353  0020C2  0E00               	movlw	0
  3354  0020C4  6EB0               	movwf	176,c	;volatile
  3355                           
  3356                           ;serie.c: 39: SPBRG=25;
  3357  0020C6  0E19               	movlw	25
  3358  0020C8  6EAF               	movwf	175,c	;volatile
  3359  0020CA                     
  3360                           ;serie.c: 40: BAUDCONbits.BRG16=1;
  3361  0020CA  86B8               	bsf	184,3,c	;volatile
  3362  0020CC                     
  3363                           ;serie.c: 41: TXSTAbits.BRGH=1;
  3364  0020CC  84AC               	bsf	172,2,c	;volatile
  3365  0020CE                     
  3366                           ;serie.c: 44: TXSTAbits.SYNC=0;
  3367  0020CE  98AC               	bcf	172,4,c	;volatile
  3368  0020D0                     
  3369                           ;serie.c: 45: TXSTAbits.TXEN=1;
  3370  0020D0  8AAC               	bsf	172,5,c	;volatile
  3371  0020D2                     
  3372                           ;serie.c: 46: RCSTAbits.CREN = 1;
  3373  0020D2  88AB               	bsf	171,4,c	;volatile
  3374  0020D4                     
  3375                           ;serie.c: 47: RCSTAbits.SPEN=1;
  3376  0020D4  8EAB               	bsf	171,7,c	;volatile
  3377                           
  3378                           ;serie.c: 48: ANSEL = 0;
  3379  0020D6  0E00               	movlw	0
  3380  0020D8  6E7E               	movwf	126,c	;volatile
  3381  0020DA  0012               	return		;funcret
  3382  0020DC                     __end_of_init_serie:
  3383                           	opt callstack 0
  3384                           
  3385 ;; *************** function _initTabVue *****************
  3386 ;; Defined at:
  3387 ;;		line 153 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  j               1    3[BANK0 ] unsigned char 
  3392 ;;  k               1    4[BANK0 ] unsigned char 
  3393 ;;  i               1    2[BANK0 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3403 ;;      Params:         0       0       0       0       0       0       0
  3404 ;;      Locals:         0       3       0       0       0       0       0
  3405 ;;      Temps:          0       2       0       0       0       0       0
  3406 ;;      Totals:         0       5       0       0       0       0       0
  3407 ;;Total ram usage:        5 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text18
  3417  001692                     __ptext18:
  3418                           	opt callstack 0
  3419  001692                     _initTabVue:
  3420                           	opt callstack 30
  3421  001692                     
  3422                           ;main.c: 155: for(unsigned char i=0;i<4;i++)
  3423  001692  0E00               	movlw	0
  3424  001694  0100               	movlb	0	; force () banked
  3425  001696  6FB6               	movwf	initTabVue@i& (0+255),b
  3426  001698                     
  3427                           ; BSR set to: 0
  3428  001698  0E03               	movlw	3
  3429  00169A  0100               	movlb	0	; force () banked
  3430  00169C  65B6               	cpfsgt	initTabVue@i& (0+255),b
  3431  00169E  EF53  F00B         	goto	u1701
  3432  0016A2  EF55  F00B         	goto	u1700
  3433  0016A6                     u1701:
  3434  0016A6  EF57  F00B         	goto	l2416
  3435  0016AA                     u1700:
  3436  0016AA  EF93  F00B         	goto	l2432
  3437  0016AE                     l2416:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;main.c: 156: {;main.c: 157: for(unsigned char j=0;j<20;j++)
  3441  0016AE  0E00               	movlw	0
  3442  0016B0  0100               	movlb	0	; force () banked
  3443  0016B2  6FB7               	movwf	initTabVue@j& (0+255),b
  3444  0016B4                     
  3445                           ; BSR set to: 0
  3446  0016B4  0E13               	movlw	19
  3447  0016B6  0100               	movlb	0	; force () banked
  3448  0016B8  65B7               	cpfsgt	initTabVue@j& (0+255),b
  3449  0016BA  EF61  F00B         	goto	u1711
  3450  0016BE  EF63  F00B         	goto	u1710
  3451  0016C2                     u1711:
  3452  0016C2  EF65  F00B         	goto	l2422
  3453  0016C6                     u1710:
  3454  0016C6  EF88  F00B         	goto	l2428
  3455  0016CA                     l2422:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 158: {;main.c: 159: m_tabVue[i][j]=1;
  3459  0016CA  0100               	movlb	0	; force () banked
  3460  0016CC  51B6               	movf	initTabVue@i& (0+255),w,b
  3461  0016CE  0D15               	mullw	21
  3462  0016D0  0E00               	movlw	low _m_tabVue
  3463  0016D2  0100               	movlb	0	; force () banked
  3464  0016D4  6FB4               	movwf	??_initTabVue& (0+255),b
  3465  0016D6  0E01               	movlw	high _m_tabVue
  3466  0016D8  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  3467  0016DA  50F3               	movf	243,w,c
  3468  0016DC  27B4               	addwf	??_initTabVue& (0+255),f,b
  3469  0016DE  50F4               	movf	244,w,c
  3470  0016E0  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3471  0016E2  0100               	movlb	0	; force () banked
  3472  0016E4  51B7               	movf	initTabVue@j& (0+255),w,b
  3473  0016E6  0100               	movlb	0	; force () banked
  3474  0016E8  25B4               	addwf	??_initTabVue& (0+255),w,b
  3475  0016EA  6ED9               	movwf	fsr2l,c
  3476  0016EC  0100               	movlb	0	; force () banked
  3477  0016EE  0E00               	movlw	0
  3478  0016F0  0100               	movlb	0	; force () banked
  3479  0016F2  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3480  0016F4  6EDA               	movwf	fsr2h,c
  3481  0016F6  0E01               	movlw	1
  3482  0016F8  6EDF               	movwf	indf2,c
  3483  0016FA                     
  3484                           ; BSR set to: 0
  3485  0016FA  0100               	movlb	0	; force () banked
  3486  0016FC  2BB7               	incf	initTabVue@j& (0+255),f,b
  3487  0016FE                     
  3488                           ; BSR set to: 0
  3489  0016FE  0E13               	movlw	19
  3490  001700  0100               	movlb	0	; force () banked
  3491  001702  65B7               	cpfsgt	initTabVue@j& (0+255),b
  3492  001704  EF86  F00B         	goto	u1721
  3493  001708  EF88  F00B         	goto	u1720
  3494  00170C                     u1721:
  3495  00170C  EF65  F00B         	goto	l2422
  3496  001710                     u1720:
  3497  001710                     l2428:
  3498                           
  3499                           ; BSR set to: 0
  3500  001710  0100               	movlb	0	; force () banked
  3501  001712  2BB6               	incf	initTabVue@i& (0+255),f,b
  3502  001714                     
  3503                           ; BSR set to: 0
  3504  001714  0E03               	movlw	3
  3505  001716  0100               	movlb	0	; force () banked
  3506  001718  65B6               	cpfsgt	initTabVue@i& (0+255),b
  3507  00171A  EF91  F00B         	goto	u1731
  3508  00171E  EF93  F00B         	goto	u1730
  3509  001722                     u1731:
  3510  001722  EF57  F00B         	goto	l2416
  3511  001726                     u1730:
  3512  001726                     l2432:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;main.c: 160: };main.c: 161: };main.c: 162: for(unsigned char k=0;k<4;k++)
  3516  001726  0E00               	movlw	0
  3517  001728  0100               	movlb	0	; force () banked
  3518  00172A  6FB8               	movwf	initTabVue@k& (0+255),b
  3519  00172C                     
  3520                           ; BSR set to: 0
  3521  00172C  0E03               	movlw	3
  3522  00172E  0100               	movlb	0	; force () banked
  3523  001730  65B8               	cpfsgt	initTabVue@k& (0+255),b
  3524  001732  EF9D  F00B         	goto	u1741
  3525  001736  EF9F  F00B         	goto	u1740
  3526  00173A                     u1741:
  3527  00173A  EFA1  F00B         	goto	l2438
  3528  00173E                     u1740:
  3529  00173E  EFB7  F00B         	goto	l116
  3530  001742                     l2438:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;main.c: 163: {;main.c: 164: m_tabVue[k][20]='\0';
  3534  001742  0100               	movlb	0	; force () banked
  3535  001744  51B8               	movf	initTabVue@k& (0+255),w,b
  3536  001746  0D15               	mullw	21
  3537  001748  0E14               	movlw	low (_m_tabVue+20)
  3538  00174A  24F3               	addwf	243,w,c
  3539  00174C  6ED9               	movwf	fsr2l,c
  3540  00174E  0E01               	movlw	high (_m_tabVue+20)
  3541  001750  20F4               	addwfc	prodh,w,c
  3542  001752  6EDA               	movwf	fsr2h,c
  3543  001754  0E00               	movlw	0
  3544  001756  6EDF               	movwf	indf2,c
  3545  001758                     
  3546                           ; BSR set to: 0
  3547  001758  0100               	movlb	0	; force () banked
  3548  00175A  2BB8               	incf	initTabVue@k& (0+255),f,b
  3549  00175C                     
  3550                           ; BSR set to: 0
  3551  00175C  0E03               	movlw	3
  3552  00175E  0100               	movlb	0	; force () banked
  3553  001760  65B8               	cpfsgt	initTabVue@k& (0+255),b
  3554  001762  EFB5  F00B         	goto	u1751
  3555  001766  EFB7  F00B         	goto	u1750
  3556  00176A                     u1751:
  3557  00176A  EFA1  F00B         	goto	l2438
  3558  00176E                     u1750:
  3559  00176E                     l116:
  3560                           
  3561                           ; BSR set to: 0
  3562  00176E  0012               	return		;funcret
  3563  001770                     __end_of_initTabVue:
  3564                           	opt callstack 0
  3565                           
  3566 ;; *************** function _gagne *****************
  3567 ;; Defined at:
  3568 ;;		line 426 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  pMines          2   16[BANK0 ] PTR int 
  3571 ;;		 -> main@nbMines(2), 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  j               1   24[BANK0 ] unsigned char 
  3574 ;;  i               1   23[BANK0 ] unsigned char 
  3575 ;;  compteurBomb    1   22[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      unsigned char 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3585 ;;      Params:         0       2       0       0       0       0       0
  3586 ;;      Locals:         0       3       0       0       0       0       0
  3587 ;;      Temps:          0       4       0       0       0       0       0
  3588 ;;      Totals:         0       9       0       0       0       0       0
  3589 ;;Total ram usage:        9 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    6
  3592 ;; This function calls:
  3593 ;;		_afficheGagne
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text19
  3600  001564                     __ptext19:
  3601                           	opt callstack 0
  3602  001564                     _gagne:
  3603                           	opt callstack 24
  3604  001564                     
  3605                           ;main.c: 428: unsigned char compteurBombe=0;
  3606  001564  0E00               	movlw	0
  3607  001566  0100               	movlb	0	; force () banked
  3608  001568  6FCA               	movwf	gagne@compteurBombe& (0+255),b
  3609                           
  3610                           ;main.c: 430: for(unsigned char i=0;i<4;i++)
  3611  00156A  0E00               	movlw	0
  3612  00156C  0100               	movlb	0	; force () banked
  3613  00156E  6FCB               	movwf	gagne@i& (0+255),b
  3614  001570                     
  3615                           ; BSR set to: 0
  3616  001570  0E03               	movlw	3
  3617  001572  0100               	movlb	0	; force () banked
  3618  001574  65CB               	cpfsgt	gagne@i& (0+255),b
  3619  001576  EFBF  F00A         	goto	u1971
  3620  00157A  EFC1  F00A         	goto	u1970
  3621  00157E                     u1971:
  3622  00157E  EFC3  F00A         	goto	l2554
  3623  001582                     u1970:
  3624  001582  EF26  F00B         	goto	l2572
  3625  001586                     l2554:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;main.c: 431: {;main.c: 432: for(unsigned char j=0;j<20;j++)
  3629  001586  0E00               	movlw	0
  3630  001588  0100               	movlb	0	; force () banked
  3631  00158A  6FCC               	movwf	gagne@j& (0+255),b
  3632  00158C                     
  3633                           ; BSR set to: 0
  3634  00158C  0E13               	movlw	19
  3635  00158E  0100               	movlb	0	; force () banked
  3636  001590  65CC               	cpfsgt	gagne@j& (0+255),b
  3637  001592  EFCD  F00A         	goto	u1981
  3638  001596  EFCF  F00A         	goto	u1980
  3639  00159A                     u1981:
  3640  00159A  EFD1  F00A         	goto	l2560
  3641  00159E                     u1980:
  3642  00159E  EF1B  F00B         	goto	l2568
  3643  0015A2                     l2560:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 433: {;main.c: 434: if((m_tabVue[i][j]==1||m_tabVue[i][j]==3))
  3647  0015A2  0100               	movlb	0	; force () banked
  3648  0015A4  51CB               	movf	gagne@i& (0+255),w,b
  3649  0015A6  0D15               	mullw	21
  3650  0015A8  0E00               	movlw	low _m_tabVue
  3651  0015AA  0100               	movlb	0	; force () banked
  3652  0015AC  6FC6               	movwf	??_gagne& (0+255),b
  3653  0015AE  0E01               	movlw	high _m_tabVue
  3654  0015B0  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3655  0015B2  50F3               	movf	243,w,c
  3656  0015B4  27C6               	addwf	??_gagne& (0+255),f,b
  3657  0015B6  50F4               	movf	244,w,c
  3658  0015B8  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3659  0015BA  0100               	movlb	0	; force () banked
  3660  0015BC  51CC               	movf	gagne@j& (0+255),w,b
  3661  0015BE  0100               	movlb	0	; force () banked
  3662  0015C0  25C6               	addwf	??_gagne& (0+255),w,b
  3663  0015C2  6ED9               	movwf	fsr2l,c
  3664  0015C4  0100               	movlb	0	; force () banked
  3665  0015C6  0E00               	movlw	0
  3666  0015C8  0100               	movlb	0	; force () banked
  3667  0015CA  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3668  0015CC  6EDA               	movwf	fsr2h,c
  3669  0015CE  04DE               	decf	postinc2,w,c
  3670  0015D0  B4D8               	btfsc	status,2,c
  3671  0015D2  EFED  F00A         	goto	u1991
  3672  0015D6  EFEF  F00A         	goto	u1990
  3673  0015DA                     u1991:
  3674  0015DA  EF0E  F00B         	goto	l2564
  3675  0015DE                     u1990:
  3676  0015DE                     
  3677                           ; BSR set to: 0
  3678  0015DE  0100               	movlb	0	; force () banked
  3679  0015E0  51CB               	movf	gagne@i& (0+255),w,b
  3680  0015E2  0D15               	mullw	21
  3681  0015E4  0E00               	movlw	low _m_tabVue
  3682  0015E6  0100               	movlb	0	; force () banked
  3683  0015E8  6FC6               	movwf	??_gagne& (0+255),b
  3684  0015EA  0E01               	movlw	high _m_tabVue
  3685  0015EC  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3686  0015EE  50F3               	movf	243,w,c
  3687  0015F0  27C6               	addwf	??_gagne& (0+255),f,b
  3688  0015F2  50F4               	movf	244,w,c
  3689  0015F4  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3690  0015F6  0100               	movlb	0	; force () banked
  3691  0015F8  51CC               	movf	gagne@j& (0+255),w,b
  3692  0015FA  0100               	movlb	0	; force () banked
  3693  0015FC  25C6               	addwf	??_gagne& (0+255),w,b
  3694  0015FE  6ED9               	movwf	fsr2l,c
  3695  001600  0100               	movlb	0	; force () banked
  3696  001602  0E00               	movlw	0
  3697  001604  0100               	movlb	0	; force () banked
  3698  001606  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3699  001608  6EDA               	movwf	fsr2h,c
  3700  00160A  0E03               	movlw	3
  3701  00160C  18DE               	xorwf	postinc2,w,c
  3702  00160E  A4D8               	btfss	status,2,c
  3703  001610  EF0C  F00B         	goto	u2001
  3704  001614  EF0E  F00B         	goto	u2000
  3705  001618                     u2001:
  3706  001618  EF10  F00B         	goto	l212
  3707  00161C                     u2000:
  3708  00161C                     l2564:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;main.c: 435: {;main.c: 436: compteurBombe++;
  3712  00161C  0100               	movlb	0	; force () banked
  3713  00161E  2BCA               	incf	gagne@compteurBombe& (0+255),f,b
  3714  001620                     l212:
  3715                           
  3716                           ; BSR set to: 0
  3717  001620  0100               	movlb	0	; force () banked
  3718  001622  2BCC               	incf	gagne@j& (0+255),f,b
  3719  001624                     
  3720                           ; BSR set to: 0
  3721  001624  0E13               	movlw	19
  3722  001626  0100               	movlb	0	; force () banked
  3723  001628  65CC               	cpfsgt	gagne@j& (0+255),b
  3724  00162A  EF19  F00B         	goto	u2011
  3725  00162E  EF1B  F00B         	goto	u2010
  3726  001632                     u2011:
  3727  001632  EFD1  F00A         	goto	l2560
  3728  001636                     u2010:
  3729  001636                     l2568:
  3730                           
  3731                           ; BSR set to: 0
  3732  001636  0100               	movlb	0	; force () banked
  3733  001638  2BCB               	incf	gagne@i& (0+255),f,b
  3734  00163A                     
  3735                           ; BSR set to: 0
  3736  00163A  0E03               	movlw	3
  3737  00163C  0100               	movlb	0	; force () banked
  3738  00163E  65CB               	cpfsgt	gagne@i& (0+255),b
  3739  001640  EF24  F00B         	goto	u2021
  3740  001644  EF26  F00B         	goto	u2020
  3741  001648                     u2021:
  3742  001648  EFC3  F00A         	goto	l2554
  3743  00164C                     u2020:
  3744  00164C                     l2572:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;main.c: 437: };main.c: 438: };main.c: 439: };main.c: 440: if(compteurBombe==(*pMines))
  3748  00164C  C0C4  FFD9         	movff	gagne@pMines,fsr2l
  3749  001650  C0C5  FFDA         	movff	gagne@pMines+1,fsr2h
  3750  001654  0100               	movlb	0	; force () banked
  3751  001656  51CA               	movf	gagne@compteurBombe& (0+255),w,b
  3752  001658  0100               	movlb	0	; force () banked
  3753  00165A  6FC8               	movwf	(??_gagne+2)& (0+255),b
  3754  00165C  6BC9               	clrf	(??_gagne+3)& (0+255),b
  3755  00165E  50DE               	movf	postinc2,w,c
  3756  001660  19C8               	xorwf	(??_gagne+2)& (0+255),w,b
  3757  001662  E107               	bnz	u2031
  3758  001664  50DE               	movf	postinc2,w,c
  3759  001666  19C9               	xorwf	(??_gagne+3)& (0+255),w,b
  3760  001668  A4D8               	btfss	status,2,c
  3761  00166A  EF39  F00B         	goto	u2031
  3762  00166E  EF3B  F00B         	goto	u2030
  3763  001672                     u2031:
  3764  001672  EF47  F00B         	goto	l2584
  3765  001676                     u2030:
  3766  001676                     
  3767                           ; BSR set to: 0
  3768                           ;main.c: 441: {;main.c: 442: afficheGagne();
  3769  001676  ECF3  F00E         	call	_afficheGagne	;wreg free
  3770  00167A                     
  3771                           ;main.c: 443: (*pMines)++;
  3772  00167A  C0C4  FFD9         	movff	gagne@pMines,fsr2l
  3773  00167E  C0C5  FFDA         	movff	gagne@pMines+1,fsr2h
  3774  001682  2ADE               	incf	postinc2,f,c
  3775  001684  0E00               	movlw	0
  3776  001686  22DD               	addwfc	postdec2,f,c
  3777  001688                     
  3778                           ;main.c: 444: return 1;
  3779  001688  0E01               	movlw	1
  3780  00168A  EF48  F00B         	goto	l216
  3781  00168E                     l2584:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 446: else;main.c: 447: return 0;
  3785  00168E  0E00               	movlw	0
  3786  001690                     l216:
  3787  001690  0012               	return		;funcret
  3788  001692                     __end_of_gagne:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _afficheGagne *****************
  3792 ;; Defined at:
  3793 ;;		line 454 in file "main.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0
  3809 ;;      Temps:          0       2       0       0       0       0       0
  3810 ;;      Totals:         0       2       0       0       0       0       0
  3811 ;;Total ram usage:        2 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    5
  3814 ;; This function calls:
  3815 ;;		_lcd_effaceAffichage
  3816 ;;		_lcd_gotoXY
  3817 ;;		_lcd_putMessage
  3818 ;; This function is called by:
  3819 ;;		_gagne
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text20
  3824  001DE6                     __ptext20:
  3825                           	opt callstack 0
  3826  001DE6                     _afficheGagne:
  3827                           	opt callstack 24
  3828  001DE6                     
  3829                           ;main.c: 456: lcd_effaceAffichage();
  3830  001DE6  EC84  F010         	call	_lcd_effaceAffichage	;wreg free
  3831                           
  3832                           ;main.c: 457: lcd_gotoXY(5,2);
  3833  001DEA  0E02               	movlw	2
  3834  001DEC  0100               	movlb	0	; force () banked
  3835  001DEE  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3836  001DF0  0E05               	movlw	5
  3837  001DF2  ECAB  F00D         	call	_lcd_gotoXY
  3838  001DF6                     
  3839                           ;main.c: 458: lcd_putMessage("YOU WIN!");
  3840  001DF6  0E29               	movlw	low STR_1
  3841  001DF8  0100               	movlb	0	; force () banked
  3842  001DFA  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3843  001DFC  0E06               	movlw	high STR_1
  3844  001DFE  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3845  001E00  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  3846  001E02  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3847  001E04  A4D8               	btfss	status,2,c
  3848  001E06  0E00               	movlw	low (__mediumconst shr (0+16))
  3849  001E08  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3850  001E0A  EC19  F00C         	call	_lcd_putMessage	;wreg free
  3851  001E0E                     
  3852                           ;main.c: 459: lcd_gotoXY(6,3);
  3853  001E0E  0E03               	movlw	3
  3854  001E10  0100               	movlb	0	; force () banked
  3855  001E12  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3856  001E14  0E06               	movlw	6
  3857  001E16  ECAB  F00D         	call	_lcd_gotoXY
  3858                           
  3859                           ;main.c: 460: lcd_putMessage("+1 Mine");
  3860  001E1A  0E32               	movlw	low STR_2
  3861  001E1C  0100               	movlb	0	; force () banked
  3862  001E1E  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3863  001E20  0E06               	movlw	high STR_2
  3864  001E22  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3865  001E24  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  3866  001E26  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  3867  001E28  A4D8               	btfss	status,2,c
  3868  001E2A  0E00               	movlw	low (__mediumconst shr (0+16))
  3869  001E2C  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  3870  001E2E  EC19  F00C         	call	_lcd_putMessage	;wreg free
  3871  001E32                     
  3872                           ;main.c: 461: _delay((unsigned long)((2500)*(1000000/4000.0)));
  3873  001E32  0E04               	movlw	4
  3874  001E34  0100               	movlb	0	; force () banked
  3875  001E36  6FC3               	movwf	(??_afficheGagne+1)& (0+255),b
  3876  001E38  0E2C               	movlw	44
  3877  001E3A  6FC2               	movwf	??_afficheGagne& (0+255),b
  3878  001E3C  0EAB               	movlw	171
  3879  001E3E                     u2267:
  3880  001E3E  2EE8               	decfsz	wreg,f,c
  3881  001E40  D7FE               	bra	u2267
  3882  001E42  2FC2               	decfsz	??_afficheGagne& (0+255),f,b
  3883  001E44  D7FC               	bra	u2267
  3884  001E46  2FC3               	decfsz	(??_afficheGagne+1)& (0+255),f,b
  3885  001E48  D7FA               	bra	u2267
  3886  001E4A  F000 F000          	nop2	
  3887  001E4E  0012               	return		;funcret
  3888  001E50                     __end_of_afficheGagne:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _lcd_effaceAffichage *****************
  3892 ;; Defined at:
  3893 ;;		line 277 in file "Lcd4Lignes.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    3
  3914 ;; This function calls:
  3915 ;;		_lcd_wrCom
  3916 ;; This function is called by:
  3917 ;;		_menuAccueil
  3918 ;;		_afficheGagne
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text21
  3923  002108                     __ptext21:
  3924                           	opt callstack 0
  3925  002108                     _lcd_effaceAffichage:
  3926                           	opt callstack 26
  3927  002108                     
  3928                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x01);
  3929  002108  0E01               	movlw	1
  3930  00210A  EC88  F00E         	call	_lcd_wrCom
  3931                           
  3932                           ;Lcd4Lignes.c: 280: lcd_wrCom(0x80);
  3933  00210E  0E80               	movlw	128
  3934  002110  EC88  F00E         	call	_lcd_wrCom
  3935  002114  0012               	return		;funcret
  3936  002116                     __end_of_lcd_effaceAffichage:
  3937                           	opt callstack 0
  3938                           
  3939 ;; *************** function _deplace *****************
  3940 ;; Defined at:
  3941 ;;		line 327 in file "main.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3944 ;;		 -> main@posX(1), 
  3945 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3946 ;;		 -> main@posY(1), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3958 ;;      Params:         0       4       0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0
  3960 ;;      Temps:          0       1       0       0       0       0       0
  3961 ;;      Totals:         0       5       0       0       0       0       0
  3962 ;;Total ram usage:        5 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    4
  3965 ;; This function calls:
  3966 ;;		_getAnalog
  3967 ;;		_lcd_gotoXY
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text22
  3974  0013DE                     __ptext22:
  3975                           	opt callstack 0
  3976  0013DE                     _deplace:
  3977                           	opt callstack 26
  3978  0013DE                     
  3979                           ;main.c: 329: if(getAnalog(7)>180)
  3980  0013DE  0E07               	movlw	7
  3981  0013E0  EC21  F010         	call	_getAnalog
  3982  0013E4  0100               	movlb	0	; force () banked
  3983  0013E6  6FBD               	movwf	??_deplace& (0+255),b
  3984  0013E8  0EB4               	movlw	180
  3985  0013EA  65BD               	cpfsgt	??_deplace& (0+255),b
  3986  0013EC  EFFA  F009         	goto	u1891
  3987  0013F0  EFFC  F009         	goto	u1890
  3988  0013F4                     u1891:
  3989  0013F4  EF1D  F00A         	goto	l2526
  3990  0013F8                     u1890:
  3991  0013F8                     
  3992                           ; BSR set to: 0
  3993                           ;main.c: 330: {;main.c: 331: (*x)=(*x)-1;
  3994  0013F8  C0B9  FFD9         	movff	deplace@x,fsr2l
  3995  0013FC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3996  001400  50DF               	movf	indf2,w,c
  3997  001402  0100               	movlb	0	; force () banked
  3998  001404  6FBD               	movwf	??_deplace& (0+255),b
  3999  001406  05BD               	decf	??_deplace& (0+255),w,b
  4000  001408  C0B9  FFD9         	movff	deplace@x,fsr2l
  4001  00140C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4002  001410  6EDF               	movwf	indf2,c
  4003  001412                     
  4004                           ; BSR set to: 0
  4005                           ;main.c: 332: if((*x)<1)
  4006  001412  C0B9  FFD9         	movff	deplace@x,fsr2l
  4007  001416  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4008  00141A  50DF               	movf	indf2,w,c
  4009  00141C  A4D8               	btfss	status,2,c
  4010  00141E  EF13  F00A         	goto	u1901
  4011  001422  EF15  F00A         	goto	u1900
  4012  001426                     u1901:
  4013  001426  EF49  F00A         	goto	l2532
  4014  00142A                     u1900:
  4015  00142A                     
  4016                           ; BSR set to: 0
  4017                           ;main.c: 333: (*x)=20;
  4018  00142A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4019  00142E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4020  001432  0E14               	movlw	20
  4021  001434  6EDF               	movwf	indf2,c
  4022  001436  EF49  F00A         	goto	l2532
  4023  00143A                     l2526:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 335: else if(getAnalog(7)<80)
  4027  00143A  0E07               	movlw	7
  4028  00143C  EC21  F010         	call	_getAnalog
  4029  001440  0100               	movlb	0	; force () banked
  4030  001442  6FBD               	movwf	??_deplace& (0+255),b
  4031  001444  0E50               	movlw	80
  4032  001446  61BD               	cpfslt	??_deplace& (0+255),b
  4033  001448  EF28  F00A         	goto	u1911
  4034  00144C  EF2A  F00A         	goto	u1910
  4035  001450                     u1911:
  4036  001450  EF49  F00A         	goto	l2532
  4037  001454                     u1910:
  4038  001454                     
  4039                           ; BSR set to: 0
  4040                           ;main.c: 336: {;main.c: 337: (*x)=(*x)+1;
  4041  001454  C0B9  FFD9         	movff	deplace@x,fsr2l
  4042  001458  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4043  00145C  50DF               	movf	indf2,w,c
  4044  00145E  0100               	movlb	0	; force () banked
  4045  001460  6FBD               	movwf	??_deplace& (0+255),b
  4046  001462  29BD               	incf	??_deplace& (0+255),w,b
  4047  001464  C0B9  FFD9         	movff	deplace@x,fsr2l
  4048  001468  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4049  00146C  6EDF               	movwf	indf2,c
  4050                           
  4051                           ;main.c: 338: if((*x)>20)
  4052  00146E  C0B9  FFD9         	movff	deplace@x,fsr2l
  4053  001472  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4054  001476  0E14               	movlw	20
  4055  001478  64DF               	cpfsgt	indf2,c
  4056  00147A  EF41  F00A         	goto	u1921
  4057  00147E  EF43  F00A         	goto	u1920
  4058  001482                     u1921:
  4059  001482  EF49  F00A         	goto	l2532
  4060  001486                     u1920:
  4061  001486                     
  4062                           ; BSR set to: 0
  4063                           ;main.c: 339: (*x)=1;
  4064  001486  C0B9  FFD9         	movff	deplace@x,fsr2l
  4065  00148A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4066  00148E  0E01               	movlw	1
  4067  001490  6EDF               	movwf	indf2,c
  4068  001492                     l2532:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 340: };main.c: 341: if(getAnalog(6)<80)
  4072  001492  0E06               	movlw	6
  4073  001494  EC21  F010         	call	_getAnalog
  4074  001498  0100               	movlb	0	; force () banked
  4075  00149A  6FBD               	movwf	??_deplace& (0+255),b
  4076  00149C  0E50               	movlw	80
  4077  00149E  61BD               	cpfslt	??_deplace& (0+255),b
  4078  0014A0  EF54  F00A         	goto	u1931
  4079  0014A4  EF56  F00A         	goto	u1930
  4080  0014A8                     u1931:
  4081  0014A8  EF77  F00A         	goto	l2540
  4082  0014AC                     u1930:
  4083  0014AC                     
  4084                           ; BSR set to: 0
  4085                           ;main.c: 342: {;main.c: 343: (*y)=(*y)-1;
  4086  0014AC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4087  0014B0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4088  0014B4  50DF               	movf	indf2,w,c
  4089  0014B6  0100               	movlb	0	; force () banked
  4090  0014B8  6FBD               	movwf	??_deplace& (0+255),b
  4091  0014BA  05BD               	decf	??_deplace& (0+255),w,b
  4092  0014BC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4093  0014C0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4094  0014C4  6EDF               	movwf	indf2,c
  4095  0014C6                     
  4096                           ; BSR set to: 0
  4097                           ;main.c: 344: if((*y)<1)
  4098  0014C6  C0BB  FFD9         	movff	deplace@y,fsr2l
  4099  0014CA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4100  0014CE  50DF               	movf	indf2,w,c
  4101  0014D0  A4D8               	btfss	status,2,c
  4102  0014D2  EF6D  F00A         	goto	u1941
  4103  0014D6  EF6F  F00A         	goto	u1940
  4104  0014DA                     u1941:
  4105  0014DA  EFA3  F00A         	goto	l2546
  4106  0014DE                     u1940:
  4107  0014DE                     
  4108                           ; BSR set to: 0
  4109                           ;main.c: 345: (*y)=4;
  4110  0014DE  C0BB  FFD9         	movff	deplace@y,fsr2l
  4111  0014E2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4112  0014E6  0E04               	movlw	4
  4113  0014E8  6EDF               	movwf	indf2,c
  4114  0014EA  EFA3  F00A         	goto	l2546
  4115  0014EE                     l2540:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;main.c: 347: else if(getAnalog(6)>180)
  4119  0014EE  0E06               	movlw	6
  4120  0014F0  EC21  F010         	call	_getAnalog
  4121  0014F4  0100               	movlb	0	; force () banked
  4122  0014F6  6FBD               	movwf	??_deplace& (0+255),b
  4123  0014F8  0EB4               	movlw	180
  4124  0014FA  65BD               	cpfsgt	??_deplace& (0+255),b
  4125  0014FC  EF82  F00A         	goto	u1951
  4126  001500  EF84  F00A         	goto	u1950
  4127  001504                     u1951:
  4128  001504  EFA3  F00A         	goto	l2546
  4129  001508                     u1950:
  4130  001508                     
  4131                           ; BSR set to: 0
  4132                           ;main.c: 348: {;main.c: 349: (*y)=(*y)+1;
  4133  001508  C0BB  FFD9         	movff	deplace@y,fsr2l
  4134  00150C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4135  001510  50DF               	movf	indf2,w,c
  4136  001512  0100               	movlb	0	; force () banked
  4137  001514  6FBD               	movwf	??_deplace& (0+255),b
  4138  001516  29BD               	incf	??_deplace& (0+255),w,b
  4139  001518  C0BB  FFD9         	movff	deplace@y,fsr2l
  4140  00151C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4141  001520  6EDF               	movwf	indf2,c
  4142                           
  4143                           ;main.c: 350: if((*y)>4)
  4144  001522  C0BB  FFD9         	movff	deplace@y,fsr2l
  4145  001526  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4146  00152A  0E04               	movlw	4
  4147  00152C  64DF               	cpfsgt	indf2,c
  4148  00152E  EF9B  F00A         	goto	u1961
  4149  001532  EF9D  F00A         	goto	u1960
  4150  001536                     u1961:
  4151  001536  EFA3  F00A         	goto	l2546
  4152  00153A                     u1960:
  4153  00153A                     
  4154                           ; BSR set to: 0
  4155                           ;main.c: 351: (*y)=1;
  4156  00153A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4157  00153E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4158  001542  0E01               	movlw	1
  4159  001544  6EDF               	movwf	indf2,c
  4160  001546                     l2546:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 352: };main.c: 353: lcd_gotoXY((*x),(*y));
  4164  001546  C0BB  FFD9         	movff	deplace@y,fsr2l
  4165  00154A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4166  00154E  50DF               	movf	indf2,w,c
  4167  001550  0100               	movlb	0	; force () banked
  4168  001552  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4169  001554  C0B9  FFD9         	movff	deplace@x,fsr2l
  4170  001558  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4171  00155C  50DF               	movf	indf2,w,c
  4172  00155E  ECAB  F00D         	call	_lcd_gotoXY
  4173  001562  0012               	return		;funcret
  4174  001564                     __end_of_deplace:
  4175                           	opt callstack 0
  4176                           
  4177 ;; *************** function _getAnalog *****************
  4178 ;; Defined at:
  4179 ;;		line 469 in file "main.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  canal           1    wreg     unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  canal           1    1[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4193 ;;      Params:         0       0       0       0       0       0       0
  4194 ;;      Locals:         0       1       0       0       0       0       0
  4195 ;;      Temps:          0       1       0       0       0       0       0
  4196 ;;      Totals:         0       2       0       0       0       0       0
  4197 ;;Total ram usage:        2 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_deplace
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text23
  4207  002042                     __ptext23:
  4208                           	opt callstack 0
  4209  002042                     _getAnalog:
  4210                           	opt callstack 29
  4211                           
  4212                           ;incstack = 0
  4213                           ;getAnalog@canal stored from wreg
  4214  002042  0100               	movlb	0	; force () banked
  4215  002044  6FB5               	movwf	getAnalog@canal& (0+255),b
  4216  002046                     
  4217                           ;main.c: 471: ADCON0bits.CHS = canal;
  4218  002046  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4219  00204A  0100               	movlb	0	; force () banked
  4220  00204C  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4221  00204E  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4222  002050  50C2               	movf	194,w,c	;volatile
  4223  002052  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4224  002054  0BC3               	andlw	-61
  4225  002056  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4226  002058  6EC2               	movwf	194,c	;volatile
  4227  00205A                     
  4228                           ;main.c: 473: ADCON0bits.GO_DONE = 1;
  4229  00205A  82C2               	bsf	194,1,c	;volatile
  4230  00205C                     l223:
  4231  00205C  B2C2               	btfsc	194,1,c	;volatile
  4232  00205E  EF33  F010         	goto	u1451
  4233  002062  EF35  F010         	goto	u1450
  4234  002066                     u1451:
  4235  002066  EF2E  F010         	goto	l223
  4236  00206A                     u1450:
  4237  00206A                     
  4238                           ;main.c: 476: return ADRESH;
  4239  00206A  50C4               	movf	196,w,c	;volatile
  4240  00206C  0012               	return		;funcret
  4241  00206E                     __end_of_getAnalog:
  4242                           	opt callstack 0
  4243                           
  4244 ;; *************** function _demine *****************
  4245 ;; Defined at:
  4246 ;;		line 364 in file "main.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  x               1    wreg     unsigned char 
  4249 ;;  y               1   20[BANK0 ] unsigned char 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  x               1   29[BANK0 ] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      unsigned char 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4261 ;;      Params:         0       1       0       0       0       0       0
  4262 ;;      Locals:         0       1       0       0       0       0       0
  4263 ;;      Temps:          0       8       0       0       0       0       0
  4264 ;;      Totals:         0      10       0       0       0       0       0
  4265 ;;Total ram usage:       10 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    5
  4268 ;; This function calls:
  4269 ;;		_enleveTuilesAutour
  4270 ;;		_lcd_ecritChar
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text24
  4277  00100A                     __ptext24:
  4278                           	opt callstack 0
  4279  00100A                     _demine:
  4280                           	opt callstack 25
  4281                           
  4282                           ;incstack = 0
  4283                           ;demine@x stored from wreg
  4284  00100A  0100               	movlb	0	; force () banked
  4285  00100C  6FD1               	movwf	demine@x& (0+255),b
  4286  00100E                     
  4287                           ;main.c: 366: if(m_tabVue[y-1][x-1]!=3)
  4288  00100E  0100               	movlb	0	; force () banked
  4289  001010  51C8               	movf	demine@y& (0+255),w,b
  4290  001012  0D15               	mullw	21
  4291  001014  0EEA               	movlw	234
  4292  001016  0100               	movlb	0	; force () banked
  4293  001018  6FC9               	movwf	??_demine& (0+255),b
  4294  00101A  0EFF               	movlw	255
  4295  00101C  6FCA               	movwf	(??_demine+1)& (0+255),b
  4296  00101E  0E00               	movlw	low _m_tabVue
  4297  001020  6FCB               	movwf	(??_demine+2)& (0+255),b
  4298  001022  0E01               	movlw	high _m_tabVue
  4299  001024  6FCC               	movwf	(??_demine+3)& (0+255),b
  4300  001026  51C9               	movf	??_demine& (0+255),w,b
  4301  001028  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4302  00102A  51CA               	movf	(??_demine+1)& (0+255),w,b
  4303  00102C  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4304  00102E  50F3               	movf	243,w,c
  4305  001030  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4306  001032  50F4               	movf	244,w,c
  4307  001034  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4308  001036  0100               	movlb	0	; force () banked
  4309  001038  51D1               	movf	demine@x& (0+255),w,b
  4310  00103A  0100               	movlb	0	; force () banked
  4311  00103C  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4312  00103E  6ED9               	movwf	fsr2l,c
  4313  001040  0100               	movlb	0	; force () banked
  4314  001042  0E00               	movlw	0
  4315  001044  0100               	movlb	0	; force () banked
  4316  001046  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4317  001048  6EDA               	movwf	fsr2h,c
  4318  00104A  0E03               	movlw	3
  4319  00104C  18DE               	xorwf	postinc2,w,c
  4320  00104E  B4D8               	btfsc	status,2,c
  4321  001050  EF2C  F008         	goto	u2041
  4322  001054  EF2E  F008         	goto	u2040
  4323  001058                     u2041:
  4324  001058  EF0D  F009         	goto	l2608
  4325  00105C                     u2040:
  4326  00105C                     
  4327                           ; BSR set to: 0
  4328                           ;main.c: 367: {;main.c: 368: if(m_tabMines[y-1][x-1]==2)
  4329  00105C  0100               	movlb	0	; force () banked
  4330  00105E  51C8               	movf	demine@y& (0+255),w,b
  4331  001060  0D15               	mullw	21
  4332  001062  0EEA               	movlw	234
  4333  001064  0100               	movlb	0	; force () banked
  4334  001066  6FC9               	movwf	??_demine& (0+255),b
  4335  001068  0EFF               	movlw	255
  4336  00106A  6FCA               	movwf	(??_demine+1)& (0+255),b
  4337  00106C  0E60               	movlw	low _m_tabMines
  4338  00106E  6FCB               	movwf	(??_demine+2)& (0+255),b
  4339  001070  0E00               	movlw	high _m_tabMines
  4340  001072  6FCC               	movwf	(??_demine+3)& (0+255),b
  4341  001074  51C9               	movf	??_demine& (0+255),w,b
  4342  001076  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4343  001078  51CA               	movf	(??_demine+1)& (0+255),w,b
  4344  00107A  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4345  00107C  50F3               	movf	243,w,c
  4346  00107E  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4347  001080  50F4               	movf	244,w,c
  4348  001082  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4349  001084  0100               	movlb	0	; force () banked
  4350  001086  51D1               	movf	demine@x& (0+255),w,b
  4351  001088  0100               	movlb	0	; force () banked
  4352  00108A  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4353  00108C  6ED9               	movwf	fsr2l,c
  4354  00108E  0100               	movlb	0	; force () banked
  4355  001090  0E00               	movlw	0
  4356  001092  0100               	movlb	0	; force () banked
  4357  001094  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4358  001096  6EDA               	movwf	fsr2h,c
  4359  001098  0E02               	movlw	2
  4360  00109A  18DE               	xorwf	postinc2,w,c
  4361  00109C  A4D8               	btfss	status,2,c
  4362  00109E  EF53  F008         	goto	u2051
  4363  0010A2  EF55  F008         	goto	u2050
  4364  0010A6                     u2051:
  4365  0010A6  EF58  F008         	goto	l2598
  4366  0010AA                     u2050:
  4367  0010AA                     
  4368                           ; BSR set to: 0
  4369                           ;main.c: 369: return 0;
  4370  0010AA  0E00               	movlw	0
  4371  0010AC  EF0E  F009         	goto	l190
  4372  0010B0                     l2598:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;main.c: 370: else if(m_tabMines[y-1][x-1]!=2 && m_tabMines[y-1][x-1]!=' ')
  4376  0010B0  0100               	movlb	0	; force () banked
  4377  0010B2  51C8               	movf	demine@y& (0+255),w,b
  4378  0010B4  0D15               	mullw	21
  4379  0010B6  0EEA               	movlw	234
  4380  0010B8  0100               	movlb	0	; force () banked
  4381  0010BA  6FC9               	movwf	??_demine& (0+255),b
  4382  0010BC  0EFF               	movlw	255
  4383  0010BE  6FCA               	movwf	(??_demine+1)& (0+255),b
  4384  0010C0  0E60               	movlw	low _m_tabMines
  4385  0010C2  6FCB               	movwf	(??_demine+2)& (0+255),b
  4386  0010C4  0E00               	movlw	high _m_tabMines
  4387  0010C6  6FCC               	movwf	(??_demine+3)& (0+255),b
  4388  0010C8  51C9               	movf	??_demine& (0+255),w,b
  4389  0010CA  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4390  0010CC  51CA               	movf	(??_demine+1)& (0+255),w,b
  4391  0010CE  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4392  0010D0  50F3               	movf	243,w,c
  4393  0010D2  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4394  0010D4  50F4               	movf	244,w,c
  4395  0010D6  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4396  0010D8  0100               	movlb	0	; force () banked
  4397  0010DA  51D1               	movf	demine@x& (0+255),w,b
  4398  0010DC  0100               	movlb	0	; force () banked
  4399  0010DE  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4400  0010E0  6ED9               	movwf	fsr2l,c
  4401  0010E2  0100               	movlb	0	; force () banked
  4402  0010E4  0E00               	movlw	0
  4403  0010E6  0100               	movlb	0	; force () banked
  4404  0010E8  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4405  0010EA  6EDA               	movwf	fsr2h,c
  4406  0010EC  0E02               	movlw	2
  4407  0010EE  18DE               	xorwf	postinc2,w,c
  4408  0010F0  B4D8               	btfsc	status,2,c
  4409  0010F2  EF7D  F008         	goto	u2061
  4410  0010F6  EF7F  F008         	goto	u2060
  4411  0010FA                     u2061:
  4412  0010FA  EF07  F009         	goto	l2606
  4413  0010FE                     u2060:
  4414  0010FE                     
  4415                           ; BSR set to: 0
  4416  0010FE  0100               	movlb	0	; force () banked
  4417  001100  51C8               	movf	demine@y& (0+255),w,b
  4418  001102  0D15               	mullw	21
  4419  001104  0EEA               	movlw	234
  4420  001106  0100               	movlb	0	; force () banked
  4421  001108  6FC9               	movwf	??_demine& (0+255),b
  4422  00110A  0EFF               	movlw	255
  4423  00110C  6FCA               	movwf	(??_demine+1)& (0+255),b
  4424  00110E  0E60               	movlw	low _m_tabMines
  4425  001110  6FCB               	movwf	(??_demine+2)& (0+255),b
  4426  001112  0E00               	movlw	high _m_tabMines
  4427  001114  6FCC               	movwf	(??_demine+3)& (0+255),b
  4428  001116  51C9               	movf	??_demine& (0+255),w,b
  4429  001118  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4430  00111A  51CA               	movf	(??_demine+1)& (0+255),w,b
  4431  00111C  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4432  00111E  50F3               	movf	243,w,c
  4433  001120  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4434  001122  50F4               	movf	244,w,c
  4435  001124  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4436  001126  0100               	movlb	0	; force () banked
  4437  001128  51D1               	movf	demine@x& (0+255),w,b
  4438  00112A  0100               	movlb	0	; force () banked
  4439  00112C  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4440  00112E  6ED9               	movwf	fsr2l,c
  4441  001130  0100               	movlb	0	; force () banked
  4442  001132  0E00               	movlw	0
  4443  001134  0100               	movlb	0	; force () banked
  4444  001136  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4445  001138  6EDA               	movwf	fsr2h,c
  4446  00113A  0E20               	movlw	32
  4447  00113C  18DE               	xorwf	postinc2,w,c
  4448  00113E  B4D8               	btfsc	status,2,c
  4449  001140  EFA4  F008         	goto	u2071
  4450  001144  EFA6  F008         	goto	u2070
  4451  001148                     u2071:
  4452  001148  EF07  F009         	goto	l2606
  4453  00114C                     u2070:
  4454  00114C                     
  4455                           ; BSR set to: 0
  4456                           ;main.c: 371: {;main.c: 372: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1];
  4457  00114C  0100               	movlb	0	; force () banked
  4458  00114E  51C8               	movf	demine@y& (0+255),w,b
  4459  001150  0D15               	mullw	21
  4460  001152  0EEA               	movlw	234
  4461  001154  0100               	movlb	0	; force () banked
  4462  001156  6FC9               	movwf	??_demine& (0+255),b
  4463  001158  0EFF               	movlw	255
  4464  00115A  6FCA               	movwf	(??_demine+1)& (0+255),b
  4465  00115C  0E60               	movlw	low _m_tabMines
  4466  00115E  6FCB               	movwf	(??_demine+2)& (0+255),b
  4467  001160  0E00               	movlw	high _m_tabMines
  4468  001162  6FCC               	movwf	(??_demine+3)& (0+255),b
  4469  001164  51C9               	movf	??_demine& (0+255),w,b
  4470  001166  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4471  001168  51CA               	movf	(??_demine+1)& (0+255),w,b
  4472  00116A  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4473  00116C  50F3               	movf	243,w,c
  4474  00116E  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4475  001170  50F4               	movf	244,w,c
  4476  001172  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4477  001174  0100               	movlb	0	; force () banked
  4478  001176  51D1               	movf	demine@x& (0+255),w,b
  4479  001178  0100               	movlb	0	; force () banked
  4480  00117A  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4481  00117C  6ED9               	movwf	fsr2l,c
  4482  00117E  0100               	movlb	0	; force () banked
  4483  001180  0E00               	movlw	0
  4484  001182  0100               	movlb	0	; force () banked
  4485  001184  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4486  001186  6EDA               	movwf	fsr2h,c
  4487  001188  0100               	movlb	0	; force () banked
  4488  00118A  51C8               	movf	demine@y& (0+255),w,b
  4489  00118C  0D15               	mullw	21
  4490  00118E  0EEA               	movlw	234
  4491  001190  0100               	movlb	0	; force () banked
  4492  001192  6FCD               	movwf	(??_demine+4)& (0+255),b
  4493  001194  0EFF               	movlw	255
  4494  001196  6FCE               	movwf	(??_demine+5)& (0+255),b
  4495  001198  0E00               	movlw	low _m_tabVue
  4496  00119A  6FCF               	movwf	(??_demine+6)& (0+255),b
  4497  00119C  0E01               	movlw	high _m_tabVue
  4498  00119E  6FD0               	movwf	(??_demine+7)& (0+255),b
  4499  0011A0  51CD               	movf	(??_demine+4)& (0+255),w,b
  4500  0011A2  27CF               	addwf	(??_demine+6)& (0+255),f,b
  4501  0011A4  51CE               	movf	(??_demine+5)& (0+255),w,b
  4502  0011A6  23D0               	addwfc	(??_demine+7)& (0+255),f,b
  4503  0011A8  50F3               	movf	243,w,c
  4504  0011AA  27CF               	addwf	(??_demine+6)& (0+255),f,b
  4505  0011AC  50F4               	movf	244,w,c
  4506  0011AE  23D0               	addwfc	(??_demine+7)& (0+255),f,b
  4507  0011B0  0100               	movlb	0	; force () banked
  4508  0011B2  51D1               	movf	demine@x& (0+255),w,b
  4509  0011B4  0100               	movlb	0	; force () banked
  4510  0011B6  25CF               	addwf	(??_demine+6)& (0+255),w,b
  4511  0011B8  6EE1               	movwf	fsr1l,c
  4512  0011BA  0100               	movlb	0	; force () banked
  4513  0011BC  0E00               	movlw	0
  4514  0011BE  0100               	movlb	0	; force () banked
  4515  0011C0  21D0               	addwfc	(??_demine+7)& (0+255),w,b
  4516  0011C2  6EE2               	movwf	fsr1h,c
  4517  0011C4  CFDF FFE7          	movff	indf2,indf1
  4518  0011C8                     
  4519                           ; BSR set to: 0
  4520                           ;main.c: 373: lcd_ecritChar(m_tabVue[y-1][x-1]);
  4521  0011C8  0100               	movlb	0	; force () banked
  4522  0011CA  51C8               	movf	demine@y& (0+255),w,b
  4523  0011CC  0D15               	mullw	21
  4524  0011CE  0EEA               	movlw	234
  4525  0011D0  0100               	movlb	0	; force () banked
  4526  0011D2  6FC9               	movwf	??_demine& (0+255),b
  4527  0011D4  0EFF               	movlw	255
  4528  0011D6  6FCA               	movwf	(??_demine+1)& (0+255),b
  4529  0011D8  0E00               	movlw	low _m_tabVue
  4530  0011DA  6FCB               	movwf	(??_demine+2)& (0+255),b
  4531  0011DC  0E01               	movlw	high _m_tabVue
  4532  0011DE  6FCC               	movwf	(??_demine+3)& (0+255),b
  4533  0011E0  51C9               	movf	??_demine& (0+255),w,b
  4534  0011E2  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4535  0011E4  51CA               	movf	(??_demine+1)& (0+255),w,b
  4536  0011E6  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4537  0011E8  50F3               	movf	243,w,c
  4538  0011EA  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4539  0011EC  50F4               	movf	244,w,c
  4540  0011EE  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4541  0011F0  0100               	movlb	0	; force () banked
  4542  0011F2  51D1               	movf	demine@x& (0+255),w,b
  4543  0011F4  0100               	movlb	0	; force () banked
  4544  0011F6  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4545  0011F8  6ED9               	movwf	fsr2l,c
  4546  0011FA  0100               	movlb	0	; force () banked
  4547  0011FC  0E00               	movlw	0
  4548  0011FE  0100               	movlb	0	; force () banked
  4549  001200  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4550  001202  6EDA               	movwf	fsr2h,c
  4551  001204  50DF               	movf	indf2,w,c
  4552  001206  EC82  F00F         	call	_lcd_ecritChar
  4553                           
  4554                           ;main.c: 374: }
  4555  00120A  EF0D  F009         	goto	l2608
  4556  00120E                     l2606:
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;main.c: 375: else;main.c: 376: enleveTuilesAutour(x,y);
  4560  00120E  C0C8  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4561  001212  0100               	movlb	0	; force () banked
  4562  001214  51D1               	movf	demine@x& (0+255),w,b
  4563  001216  EC65  F005         	call	_enleveTuilesAutour
  4564  00121A                     l2608:
  4565                           
  4566                           ;main.c: 377: };main.c: 378: return 1;
  4567  00121A  0E01               	movlw	1
  4568  00121C                     l190:
  4569  00121C  0012               	return		;funcret
  4570  00121E                     __end_of_demine:
  4571                           	opt callstack 0
  4572                           
  4573 ;; *************** function _enleveTuilesAutour *****************
  4574 ;; Defined at:
  4575 ;;		line 387 in file "main.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  x               1    wreg     unsigned char 
  4578 ;;  y               1    6[BANK0 ] unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  x               1   15[BANK0 ] unsigned char 
  4581 ;;  i               1   19[BANK0 ] char 
  4582 ;;  j               1   18[BANK0 ] char 
  4583 ;;  yTabLigne       1   17[BANK0 ] unsigned char 
  4584 ;;  xTabCol         1   16[BANK0 ] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4594 ;;      Params:         0       1       0       0       0       0       0
  4595 ;;      Locals:         0       5       0       0       0       0       0
  4596 ;;      Temps:          0       8       0       0       0       0       0
  4597 ;;      Totals:         0      14       0       0       0       0       0
  4598 ;;Total ram usage:       14 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    4
  4601 ;; This function calls:
  4602 ;;		___wmul
  4603 ;;		_lcd_ecritChar
  4604 ;;		_lcd_gotoXY
  4605 ;; This function is called by:
  4606 ;;		_demine
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text25
  4611  000ACA                     __ptext25:
  4612                           	opt callstack 0
  4613  000ACA                     _enleveTuilesAutour:
  4614                           	opt callstack 25
  4615                           
  4616                           ;incstack = 0
  4617                           ;enleveTuilesAutour@x stored from wreg
  4618  000ACA  0100               	movlb	0	; force () banked
  4619  000ACC  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  4620  000ACE                     
  4621                           ;main.c: 389: unsigned char xTabCol=x-1;
  4622  000ACE  0100               	movlb	0	; force () banked
  4623  000AD0  05C3               	decf	enleveTuilesAutour@x& (0+255),w,b
  4624  000AD2  0100               	movlb	0	; force () banked
  4625  000AD4  6FC4               	movwf	enleveTuilesAutour@xTabCol& (0+255),b
  4626                           
  4627                           ;main.c: 390: unsigned char yTabLigne=y-1;
  4628  000AD6  0100               	movlb	0	; force () banked
  4629  000AD8  05BA               	decf	enleveTuilesAutour@y& (0+255),w,b
  4630  000ADA  0100               	movlb	0	; force () banked
  4631  000ADC  6FC5               	movwf	enleveTuilesAutour@yTabLigne& (0+255),b
  4632  000ADE                     
  4633                           ; BSR set to: 0
  4634                           ;main.c: 393: for(signed char j=-1;j<=1;j++)
  4635  000ADE  0100               	movlb	0	; force () banked
  4636  000AE0  69C6               	setf	enleveTuilesAutour@j& (0+255),b
  4637  000AE2  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4638  000AE4  0A80               	xorlw	128
  4639  000AE6  0F7E               	addlw	-130
  4640  000AE8  A0D8               	btfss	status,0,c
  4641  000AEA  EF79  F005         	goto	u1461
  4642  000AEE  EF7B  F005         	goto	u1460
  4643  000AF2                     u1461:
  4644  000AF2  EF7D  F005         	goto	l2200
  4645  000AF6                     u1460:
  4646  000AF6  EFE4  F006         	goto	l205
  4647  000AFA                     l2200:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;main.c: 394: {;main.c: 395: if(yTabLigne==0&&j==-1)
  4651  000AFA  0100               	movlb	0	; force () banked
  4652  000AFC  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4653  000AFE  A4D8               	btfss	status,2,c
  4654  000B00  EF84  F005         	goto	u1471
  4655  000B04  EF86  F005         	goto	u1470
  4656  000B08                     u1471:
  4657  000B08  EF92  F005         	goto	l2206
  4658  000B0C                     u1470:
  4659  000B0C                     
  4660                           ; BSR set to: 0
  4661  000B0C  0100               	movlb	0	; force () banked
  4662  000B0E  29C6               	incf	enleveTuilesAutour@j& (0+255),w,b
  4663  000B10  A4D8               	btfss	status,2,c
  4664  000B12  EF8D  F005         	goto	u1481
  4665  000B16  EF8F  F005         	goto	u1480
  4666  000B1A                     u1481:
  4667  000B1A  EF92  F005         	goto	l2206
  4668  000B1E                     u1480:
  4669  000B1E                     
  4670                           ; BSR set to: 0
  4671                           ;main.c: 396: j=0;
  4672  000B1E  0E00               	movlw	0
  4673  000B20  0100               	movlb	0	; force () banked
  4674  000B22  6FC6               	movwf	enleveTuilesAutour@j& (0+255),b
  4675  000B24                     l2206:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;main.c: 397: for(signed char i=-1;i<=1;i++)
  4679  000B24  0100               	movlb	0	; force () banked
  4680  000B26  69C7               	setf	enleveTuilesAutour@i& (0+255),b
  4681  000B28                     
  4682                           ; BSR set to: 0
  4683  000B28  0100               	movlb	0	; force () banked
  4684  000B2A  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  4685  000B2C  0A80               	xorlw	128
  4686  000B2E  0F7E               	addlw	-130
  4687  000B30  A0D8               	btfss	status,0,c
  4688  000B32  EF9D  F005         	goto	u1491
  4689  000B36  EF9F  F005         	goto	u1490
  4690  000B3A                     u1491:
  4691  000B3A  EFA1  F005         	goto	l2212
  4692  000B3E                     u1490:
  4693  000B3E  EFC1  F006         	goto	l2236
  4694  000B42                     l2212:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;main.c: 398: {;main.c: 399: if(xTabCol==0&&i==-1)
  4698  000B42  0100               	movlb	0	; force () banked
  4699  000B44  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4700  000B46  A4D8               	btfss	status,2,c
  4701  000B48  EFA8  F005         	goto	u1501
  4702  000B4C  EFAA  F005         	goto	u1500
  4703  000B50                     u1501:
  4704  000B50  EFB6  F005         	goto	l2218
  4705  000B54                     u1500:
  4706  000B54                     
  4707                           ; BSR set to: 0
  4708  000B54  0100               	movlb	0	; force () banked
  4709  000B56  29C7               	incf	enleveTuilesAutour@i& (0+255),w,b
  4710  000B58  A4D8               	btfss	status,2,c
  4711  000B5A  EFB1  F005         	goto	u1511
  4712  000B5E  EFB3  F005         	goto	u1510
  4713  000B62                     u1511:
  4714  000B62  EFB6  F005         	goto	l2218
  4715  000B66                     u1510:
  4716  000B66                     
  4717                           ; BSR set to: 0
  4718                           ;main.c: 400: i=0;
  4719  000B66  0E00               	movlw	0
  4720  000B68  0100               	movlb	0	; force () banked
  4721  000B6A  6FC7               	movwf	enleveTuilesAutour@i& (0+255),b
  4722  000B6C                     l2218:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;main.c: 402: if(m_tabVue[yTabLigne+j][xTabCol+i]==1)
  4726  000B6C  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  4727  000B70  0100               	movlb	0	; force () banked
  4728  000B72  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4729  000B74  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4730  000B76  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4731  000B78  0100               	movlb	0	; force () banked
  4732  000B7A  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4733  000B7C  0100               	movlb	0	; force () banked
  4734  000B7E  6FB4               	movwf	___wmul@multiplier& (0+255),b
  4735  000B80  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  4736  000B82  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  4737  000B84  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4738  000B86  0E00               	movlw	0
  4739  000B88  0100               	movlb	0	; force () banked
  4740  000B8A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4741  000B8C  0E15               	movlw	21
  4742  000B8E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4743  000B90  EC4B  F010         	call	___wmul	;wreg free
  4744  000B94  0100               	movlb	0	; force () banked
  4745  000B96  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4746  000B98  0D15               	mullw	21
  4747  000B9A  0E00               	movlw	low _m_tabVue
  4748  000B9C  0100               	movlb	0	; force () banked
  4749  000B9E  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4750  000BA0  0E01               	movlw	high _m_tabVue
  4751  000BA2  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4752  000BA4  50F3               	movf	243,w,c
  4753  000BA6  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4754  000BA8  50F4               	movf	244,w,c
  4755  000BAA  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4756  000BAC  0100               	movlb	0	; force () banked
  4757  000BAE  51B4               	movf	?___wmul& (0+255),w,b
  4758  000BB0  0100               	movlb	0	; force () banked
  4759  000BB2  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4760  000BB4  0100               	movlb	0	; force () banked
  4761  000BB6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4762  000BB8  0100               	movlb	0	; force () banked
  4763  000BBA  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4764  000BBC  0100               	movlb	0	; force () banked
  4765  000BBE  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4766  000BC0  0100               	movlb	0	; force () banked
  4767  000BC2  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4768  000BC4  0E00               	movlw	0
  4769  000BC6  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4770  000BC8  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  4771  000BCA  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4772  000BCC  6ED9               	movwf	fsr2l,c
  4773  000BCE  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4774  000BD0  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4775  000BD2  6EDA               	movwf	fsr2h,c
  4776  000BD4  04DE               	decf	postinc2,w,c
  4777  000BD6  A4D8               	btfss	status,2,c
  4778  000BD8  EFF0  F005         	goto	u1521
  4779  000BDC  EFF2  F005         	goto	u1520
  4780  000BE0                     u1521:
  4781  000BE0  EF9E  F006         	goto	l2226
  4782  000BE4                     u1520:
  4783  000BE4                     
  4784                           ; BSR set to: 0
  4785                           ;main.c: 403: {;main.c: 404: lcd_gotoXY(x+i,y+j);
  4786  000BE4  0100               	movlb	0	; force () banked
  4787  000BE6  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4788  000BE8  0100               	movlb	0	; force () banked
  4789  000BEA  25BA               	addwf	enleveTuilesAutour@y& (0+255),w,b
  4790  000BEC  0100               	movlb	0	; force () banked
  4791  000BEE  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4792  000BF0  0100               	movlb	0	; force () banked
  4793  000BF2  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  4794  000BF4  0100               	movlb	0	; force () banked
  4795  000BF6  25C3               	addwf	enleveTuilesAutour@x& (0+255),w,b
  4796  000BF8  ECAB  F00D         	call	_lcd_gotoXY
  4797  000BFC                     
  4798                           ;main.c: 405: m_tabVue[yTabLigne+j][xTabCol+i]=m_tabMines[yTabLigne+j][xTabCol+i];
  4799  000BFC  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  4800  000C00  0100               	movlb	0	; force () banked
  4801  000C02  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4802  000C04  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4803  000C06  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4804  000C08  0100               	movlb	0	; force () banked
  4805  000C0A  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4806  000C0C  0100               	movlb	0	; force () banked
  4807  000C0E  6FB4               	movwf	___wmul@multiplier& (0+255),b
  4808  000C10  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  4809  000C12  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  4810  000C14  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4811  000C16  0E00               	movlw	0
  4812  000C18  0100               	movlb	0	; force () banked
  4813  000C1A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4814  000C1C  0E15               	movlw	21
  4815  000C1E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4816  000C20  EC4B  F010         	call	___wmul	;wreg free
  4817  000C24  0100               	movlb	0	; force () banked
  4818  000C26  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4819  000C28  0D15               	mullw	21
  4820  000C2A  0E60               	movlw	low _m_tabMines
  4821  000C2C  0100               	movlb	0	; force () banked
  4822  000C2E  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4823  000C30  0E00               	movlw	high _m_tabMines
  4824  000C32  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4825  000C34  50F3               	movf	243,w,c
  4826  000C36  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4827  000C38  50F4               	movf	244,w,c
  4828  000C3A  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4829  000C3C  0100               	movlb	0	; force () banked
  4830  000C3E  51B4               	movf	?___wmul& (0+255),w,b
  4831  000C40  0100               	movlb	0	; force () banked
  4832  000C42  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4833  000C44  0100               	movlb	0	; force () banked
  4834  000C46  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4835  000C48  0100               	movlb	0	; force () banked
  4836  000C4A  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4837  000C4C  0100               	movlb	0	; force () banked
  4838  000C4E  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4839  000C50  0100               	movlb	0	; force () banked
  4840  000C52  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4841  000C54  0E00               	movlw	0
  4842  000C56  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4843  000C58  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  4844  000C5A  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4845  000C5C  6ED9               	movwf	fsr2l,c
  4846  000C5E  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4847  000C60  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4848  000C62  6EDA               	movwf	fsr2h,c
  4849  000C64  C0C7  F0BF         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour+4
  4850  000C68  6BC0               	clrf	(??_enleveTuilesAutour+5)& (0+255),b
  4851  000C6A  BFBF               	btfsc	(??_enleveTuilesAutour+4)& (0+255),7,b
  4852  000C6C  07C0               	decf	(??_enleveTuilesAutour+5)& (0+255),f,b
  4853  000C6E  0100               	movlb	0	; force () banked
  4854  000C70  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4855  000C72  0100               	movlb	0	; force () banked
  4856  000C74  6FB4               	movwf	___wmul@multiplier& (0+255),b
  4857  000C76  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  4858  000C78  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  4859  000C7A  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4860  000C7C  0E00               	movlw	0
  4861  000C7E  0100               	movlb	0	; force () banked
  4862  000C80  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4863  000C82  0E15               	movlw	21
  4864  000C84  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4865  000C86  EC4B  F010         	call	___wmul	;wreg free
  4866  000C8A  0100               	movlb	0	; force () banked
  4867  000C8C  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4868  000C8E  0D15               	mullw	21
  4869  000C90  0E00               	movlw	low _m_tabVue
  4870  000C92  0100               	movlb	0	; force () banked
  4871  000C94  6FC1               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  4872  000C96  0E01               	movlw	high _m_tabVue
  4873  000C98  6FC2               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  4874  000C9A  50F3               	movf	243,w,c
  4875  000C9C  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4876  000C9E  50F4               	movf	244,w,c
  4877  000CA0  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4878  000CA2  0100               	movlb	0	; force () banked
  4879  000CA4  51B4               	movf	?___wmul& (0+255),w,b
  4880  000CA6  0100               	movlb	0	; force () banked
  4881  000CA8  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4882  000CAA  0100               	movlb	0	; force () banked
  4883  000CAC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4884  000CAE  0100               	movlb	0	; force () banked
  4885  000CB0  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4886  000CB2  0100               	movlb	0	; force () banked
  4887  000CB4  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4888  000CB6  0100               	movlb	0	; force () banked
  4889  000CB8  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4890  000CBA  0E00               	movlw	0
  4891  000CBC  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4892  000CBE  51BF               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4893  000CC0  25C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4894  000CC2  6EE1               	movwf	fsr1l,c
  4895  000CC4  51C0               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  4896  000CC6  21C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  4897  000CC8  6EE2               	movwf	fsr1h,c
  4898  000CCA  CFDF FFE7          	movff	indf2,indf1
  4899  000CCE                     
  4900                           ; BSR set to: 0
  4901                           ;main.c: 406: lcd_ecritChar(m_tabVue[yTabLigne+j][xTabCol+i]);
  4902  000CCE  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  4903  000CD2  0100               	movlb	0	; force () banked
  4904  000CD4  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4905  000CD6  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4906  000CD8  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4907  000CDA  0100               	movlb	0	; force () banked
  4908  000CDC  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4909  000CDE  0100               	movlb	0	; force () banked
  4910  000CE0  6FB4               	movwf	___wmul@multiplier& (0+255),b
  4911  000CE2  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  4912  000CE4  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  4913  000CE6  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4914  000CE8  0E00               	movlw	0
  4915  000CEA  0100               	movlb	0	; force () banked
  4916  000CEC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4917  000CEE  0E15               	movlw	21
  4918  000CF0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4919  000CF2  EC4B  F010         	call	___wmul	;wreg free
  4920  000CF6  0100               	movlb	0	; force () banked
  4921  000CF8  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4922  000CFA  0D15               	mullw	21
  4923  000CFC  0E00               	movlw	low _m_tabVue
  4924  000CFE  0100               	movlb	0	; force () banked
  4925  000D00  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4926  000D02  0E01               	movlw	high _m_tabVue
  4927  000D04  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4928  000D06  50F3               	movf	243,w,c
  4929  000D08  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4930  000D0A  50F4               	movf	244,w,c
  4931  000D0C  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4932  000D0E  0100               	movlb	0	; force () banked
  4933  000D10  51B4               	movf	?___wmul& (0+255),w,b
  4934  000D12  0100               	movlb	0	; force () banked
  4935  000D14  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4936  000D16  0100               	movlb	0	; force () banked
  4937  000D18  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4938  000D1A  0100               	movlb	0	; force () banked
  4939  000D1C  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4940  000D1E  0100               	movlb	0	; force () banked
  4941  000D20  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4942  000D22  0100               	movlb	0	; force () banked
  4943  000D24  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4944  000D26  0E00               	movlw	0
  4945  000D28  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4946  000D2A  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  4947  000D2C  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4948  000D2E  6ED9               	movwf	fsr2l,c
  4949  000D30  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4950  000D32  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4951  000D34  6EDA               	movwf	fsr2h,c
  4952  000D36  50DF               	movf	indf2,w,c
  4953  000D38  EC82  F00F         	call	_lcd_ecritChar
  4954  000D3C                     l2226:
  4955                           
  4956                           ;main.c: 407: };main.c: 408: if(xTabCol==19&&i==0)
  4957  000D3C  0E13               	movlw	19
  4958  000D3E  0100               	movlb	0	; force () banked
  4959  000D40  19C4               	xorwf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4960  000D42  A4D8               	btfss	status,2,c
  4961  000D44  EFA6  F006         	goto	u1531
  4962  000D48  EFA8  F006         	goto	u1530
  4963  000D4C                     u1531:
  4964  000D4C  EFB4  F006         	goto	l2232
  4965  000D50                     u1530:
  4966  000D50                     
  4967                           ; BSR set to: 0
  4968  000D50  0100               	movlb	0	; force () banked
  4969  000D52  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  4970  000D54  A4D8               	btfss	status,2,c
  4971  000D56  EFAF  F006         	goto	u1541
  4972  000D5A  EFB1  F006         	goto	u1540
  4973  000D5E                     u1541:
  4974  000D5E  EFB4  F006         	goto	l2232
  4975  000D62                     u1540:
  4976  000D62                     
  4977                           ; BSR set to: 0
  4978                           ;main.c: 409: i=1;
  4979  000D62  0E01               	movlw	1
  4980  000D64  0100               	movlb	0	; force () banked
  4981  000D66  6FC7               	movwf	enleveTuilesAutour@i& (0+255),b
  4982  000D68                     l2232:
  4983                           
  4984                           ; BSR set to: 0
  4985  000D68  0100               	movlb	0	; force () banked
  4986  000D6A  2BC7               	incf	enleveTuilesAutour@i& (0+255),f,b
  4987  000D6C                     
  4988                           ; BSR set to: 0
  4989  000D6C  0100               	movlb	0	; force () banked
  4990  000D6E  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  4991  000D70  0A80               	xorlw	128
  4992  000D72  0F7E               	addlw	-130
  4993  000D74  A0D8               	btfss	status,0,c
  4994  000D76  EFBF  F006         	goto	u1551
  4995  000D7A  EFC1  F006         	goto	u1550
  4996  000D7E                     u1551:
  4997  000D7E  EFA1  F005         	goto	l2212
  4998  000D82                     u1550:
  4999  000D82                     l2236:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;main.c: 411: };main.c: 412: if(yTabLigne==3&&j==0)
  5003  000D82  0E03               	movlw	3
  5004  000D84  0100               	movlb	0	; force () banked
  5005  000D86  19C5               	xorwf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5006  000D88  A4D8               	btfss	status,2,c
  5007  000D8A  EFC9  F006         	goto	u1561
  5008  000D8E  EFCB  F006         	goto	u1560
  5009  000D92                     u1561:
  5010  000D92  EFD7  F006         	goto	l2242
  5011  000D96                     u1560:
  5012  000D96                     
  5013                           ; BSR set to: 0
  5014  000D96  0100               	movlb	0	; force () banked
  5015  000D98  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5016  000D9A  A4D8               	btfss	status,2,c
  5017  000D9C  EFD2  F006         	goto	u1571
  5018  000DA0  EFD4  F006         	goto	u1570
  5019  000DA4                     u1571:
  5020  000DA4  EFD7  F006         	goto	l2242
  5021  000DA8                     u1570:
  5022  000DA8                     
  5023                           ; BSR set to: 0
  5024                           ;main.c: 413: j=1;
  5025  000DA8  0E01               	movlw	1
  5026  000DAA  0100               	movlb	0	; force () banked
  5027  000DAC  6FC6               	movwf	enleveTuilesAutour@j& (0+255),b
  5028  000DAE                     l2242:
  5029                           
  5030                           ; BSR set to: 0
  5031  000DAE  0100               	movlb	0	; force () banked
  5032  000DB0  2BC6               	incf	enleveTuilesAutour@j& (0+255),f,b
  5033  000DB2                     
  5034                           ; BSR set to: 0
  5035  000DB2  0100               	movlb	0	; force () banked
  5036  000DB4  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5037  000DB6  0A80               	xorlw	128
  5038  000DB8  0F7E               	addlw	-130
  5039  000DBA  A0D8               	btfss	status,0,c
  5040  000DBC  EFE2  F006         	goto	u1581
  5041  000DC0  EFE4  F006         	goto	u1580
  5042  000DC4                     u1581:
  5043  000DC4  EF7D  F005         	goto	l2200
  5044  000DC8                     u1580:
  5045  000DC8                     l205:
  5046                           
  5047                           ; BSR set to: 0
  5048  000DC8  0012               	return		;funcret
  5049  000DCA                     __end_of_enleveTuilesAutour:
  5050                           	opt callstack 0
  5051                           
  5052 ;; *************** function ___wmul *****************
  5053 ;; Defined at:
  5054 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5057 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  product         2    4[BANK0 ] unsigned int 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  2    0[BANK0 ] unsigned int 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, prodl, prodh
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5069 ;;      Params:         0       4       0       0       0       0       0
  5070 ;;      Locals:         0       2       0       0       0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0
  5072 ;;      Totals:         0       6       0       0       0       0       0
  5073 ;;Total ram usage:        6 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_calculToucheCombien
  5079 ;;		_enleveTuilesAutour
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text26
  5084  002096                     __ptext26:
  5085                           	opt callstack 0
  5086  002096                     ___wmul:
  5087                           	opt callstack 28
  5088  002096  0100               	movlb	0	; () banked
  5089  002098  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5090  00209A  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5091  00209C  CFF3 F0B8          	movff	prodl,___wmul@product
  5092  0020A0  CFF4 F0B9          	movff	prodh,___wmul@product+1
  5093  0020A4  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5094  0020A6  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5095  0020A8  50F3               	movf	243,w,c
  5096  0020AA  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5097  0020AC  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5098  0020AE  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5099  0020B0  50F3               	movf	243,w,c
  5100  0020B2  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5101  0020B4                     
  5102                           ; BSR set to: 0
  5103  0020B4  C0B8  F0B4         	movff	___wmul@product,?___wmul
  5104  0020B8  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  5105  0020BC                     
  5106                           ; BSR set to: 0
  5107  0020BC  0012               	return		;funcret
  5108  0020BE                     __end_of___wmul:
  5109                           	opt callstack 0
  5110                           
  5111 ;; *************** function _afficheTabVue *****************
  5112 ;; Defined at:
  5113 ;;		line 172 in file "main.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  i               1   16[BANK0 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5127 ;;      Params:         0       0       0       0       0       0       0
  5128 ;;      Locals:         0       1       0       0       0       0       0
  5129 ;;      Temps:          0       2       0       0       0       0       0
  5130 ;;      Totals:         0       3       0       0       0       0       0
  5131 ;;Total ram usage:        3 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    5
  5134 ;; This function calls:
  5135 ;;		_lcd_gotoXY
  5136 ;;		_lcd_putMessage
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text27
  5143  001BC8                     __ptext27:
  5144                           	opt callstack 0
  5145  001BC8                     _afficheTabVue:
  5146                           	opt callstack 25
  5147  001BC8                     
  5148                           ;main.c: 174: for(unsigned char i =0; i<4;++i)
  5149  001BC8  0E00               	movlw	0
  5150  001BCA  0100               	movlb	0	; force () banked
  5151  001BCC  6FC4               	movwf	afficheTabVue@i& (0+255),b
  5152  001BCE                     
  5153                           ; BSR set to: 0
  5154  001BCE  0E03               	movlw	3
  5155  001BD0  0100               	movlb	0	; force () banked
  5156  001BD2  65C4               	cpfsgt	afficheTabVue@i& (0+255),b
  5157  001BD4  EFEE  F00D         	goto	u1871
  5158  001BD8  EFF0  F00D         	goto	u1870
  5159  001BDC                     u1871:
  5160  001BDC  EFF2  F00D         	goto	l2508
  5161  001BE0                     u1870:
  5162  001BE0  EF1A  F00E         	goto	l121
  5163  001BE4                     l2508:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;main.c: 175: {;main.c: 176: lcd_gotoXY(1,i+1);
  5167  001BE4  0100               	movlb	0	; force () banked
  5168  001BE6  29C4               	incf	afficheTabVue@i& (0+255),w,b
  5169  001BE8  0100               	movlb	0	; force () banked
  5170  001BEA  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5171  001BEC  0E01               	movlw	1
  5172  001BEE  ECAB  F00D         	call	_lcd_gotoXY
  5173  001BF2                     
  5174                           ;main.c: 177: lcd_putMessage(m_tabVue[i]);
  5175  001BF2  0100               	movlb	0	; force () banked
  5176  001BF4  51C4               	movf	afficheTabVue@i& (0+255),w,b
  5177  001BF6  0D15               	mullw	21
  5178  001BF8  0E00               	movlw	low _m_tabVue
  5179  001BFA  24F3               	addwf	243,w,c
  5180  001BFC  0100               	movlb	0	; force () banked
  5181  001BFE  6FC2               	movwf	??_afficheTabVue& (0+255),b
  5182  001C00  0E01               	movlw	high _m_tabVue
  5183  001C02  20F4               	addwfc	prodh,w,c
  5184  001C04  6FC3               	movwf	(??_afficheTabVue+1)& (0+255),b
  5185  001C06  C0C2  F0B9         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5186  001C0A  C0C3  F0BA         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5187  001C0E  0100               	movlb	0	; force () banked
  5188  001C10  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  5189  001C12  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5190  001C14  A4D8               	btfss	status,2,c
  5191  001C16  0E20               	movlw	32
  5192  001C18  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5193  001C1A  EC19  F00C         	call	_lcd_putMessage	;wreg free
  5194  001C1E  0100               	movlb	0	; force () banked
  5195  001C20  2BC4               	incf	afficheTabVue@i& (0+255),f,b
  5196  001C22                     
  5197                           ; BSR set to: 0
  5198  001C22  0E03               	movlw	3
  5199  001C24  0100               	movlb	0	; force () banked
  5200  001C26  65C4               	cpfsgt	afficheTabVue@i& (0+255),b
  5201  001C28  EF18  F00E         	goto	u1881
  5202  001C2C  EF1A  F00E         	goto	u1880
  5203  001C30                     u1881:
  5204  001C30  EFF2  F00D         	goto	l2508
  5205  001C34                     u1880:
  5206  001C34                     l121:
  5207                           
  5208                           ; BSR set to: 0
  5209  001C34  0012               	return		;funcret
  5210  001C36                     __end_of_afficheTabVue:
  5211                           	opt callstack 0
  5212                           
  5213 ;; *************** function _afficheTabMines *****************
  5214 ;; Defined at:
  5215 ;;		line 186 in file "main.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  i               1   16[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5229 ;;      Params:         0       0       0       0       0       0       0
  5230 ;;      Locals:         0       1       0       0       0       0       0
  5231 ;;      Temps:          0       2       0       0       0       0       0
  5232 ;;      Totals:         0       3       0       0       0       0       0
  5233 ;;Total ram usage:        3 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    5
  5236 ;; This function calls:
  5237 ;;		_lcd_gotoXY
  5238 ;;		_lcd_putMessage
  5239 ;; This function is called by:
  5240 ;;		_main
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text28
  5245  001C36                     __ptext28:
  5246                           	opt callstack 0
  5247  001C36                     _afficheTabMines:
  5248                           	opt callstack 25
  5249  001C36                     
  5250                           ;main.c: 188: for(unsigned char i =0; i<4;++i)
  5251  001C36  0E00               	movlw	0
  5252  001C38  0100               	movlb	0	; force () banked
  5253  001C3A  6FC4               	movwf	afficheTabMines@i& (0+255),b
  5254  001C3C                     
  5255                           ; BSR set to: 0
  5256  001C3C  0E03               	movlw	3
  5257  001C3E  0100               	movlb	0	; force () banked
  5258  001C40  65C4               	cpfsgt	afficheTabMines@i& (0+255),b
  5259  001C42  EF25  F00E         	goto	u2081
  5260  001C46  EF27  F00E         	goto	u2080
  5261  001C4A                     u2081:
  5262  001C4A  EF29  F00E         	goto	l2618
  5263  001C4E                     u2080:
  5264  001C4E  EF51  F00E         	goto	l126
  5265  001C52                     l2618:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;main.c: 189: {;main.c: 190: lcd_gotoXY(1,i+1);
  5269  001C52  0100               	movlb	0	; force () banked
  5270  001C54  29C4               	incf	afficheTabMines@i& (0+255),w,b
  5271  001C56  0100               	movlb	0	; force () banked
  5272  001C58  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5273  001C5A  0E01               	movlw	1
  5274  001C5C  ECAB  F00D         	call	_lcd_gotoXY
  5275  001C60                     
  5276                           ;main.c: 191: lcd_putMessage(m_tabMines[i]);
  5277  001C60  0100               	movlb	0	; force () banked
  5278  001C62  51C4               	movf	afficheTabMines@i& (0+255),w,b
  5279  001C64  0D15               	mullw	21
  5280  001C66  0E60               	movlw	low _m_tabMines
  5281  001C68  24F3               	addwf	243,w,c
  5282  001C6A  0100               	movlb	0	; force () banked
  5283  001C6C  6FC2               	movwf	??_afficheTabMines& (0+255),b
  5284  001C6E  0E00               	movlw	high _m_tabMines
  5285  001C70  20F4               	addwfc	prodh,w,c
  5286  001C72  6FC3               	movwf	(??_afficheTabMines+1)& (0+255),b
  5287  001C74  C0C2  F0B9         	movff	??_afficheTabMines,lcd_putMessage@chaine
  5288  001C78  C0C3  F0BA         	movff	??_afficheTabMines+1,lcd_putMessage@chaine+1
  5289  001C7C  0100               	movlb	0	; force () banked
  5290  001C7E  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  5291  001C80  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5292  001C82  A4D8               	btfss	status,2,c
  5293  001C84  0E20               	movlw	32
  5294  001C86  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5295  001C88  EC19  F00C         	call	_lcd_putMessage	;wreg free
  5296  001C8C  0100               	movlb	0	; force () banked
  5297  001C8E  2BC4               	incf	afficheTabMines@i& (0+255),f,b
  5298  001C90                     
  5299                           ; BSR set to: 0
  5300  001C90  0E03               	movlw	3
  5301  001C92  0100               	movlb	0	; force () banked
  5302  001C94  65C4               	cpfsgt	afficheTabMines@i& (0+255),b
  5303  001C96  EF4F  F00E         	goto	u2091
  5304  001C9A  EF51  F00E         	goto	u2090
  5305  001C9E                     u2091:
  5306  001C9E  EF29  F00E         	goto	l2618
  5307  001CA2                     u2090:
  5308  001CA2                     l126:
  5309                           
  5310                           ; BSR set to: 0
  5311  001CA2  0012               	return		;funcret
  5312  001CA4                     __end_of_afficheTabMines:
  5313                           	opt callstack 0
  5314                           
  5315 ;; *************** function _lcd_putMessage *****************
  5316 ;; Defined at:
  5317 ;;		line 388 in file "Lcd4Lignes.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  5320 ;;		 -> STR_2(8), STR_1(9), m_tabMines(84), menuAccueil@menuMsgs(40), 
  5321 ;;		 -> m_tabVue(84), 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  j               1   13[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5333 ;;      Params:         0       3       0       0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0
  5335 ;;      Temps:          0       5       0       0       0       0       0
  5336 ;;      Totals:         0       9       0       0       0       0       0
  5337 ;;Total ram usage:        9 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    4
  5340 ;; This function calls:
  5341 ;;		_lcd_ecritChar
  5342 ;; This function is called by:
  5343 ;;		_menuAccueil
  5344 ;;		_afficheTabVue
  5345 ;;		_afficheTabMines
  5346 ;;		_afficheGagne
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text29
  5351  001832                     __ptext29:
  5352                           	opt callstack 0
  5353  001832                     _lcd_putMessage:
  5354                           	opt callstack 25
  5355  001832                     
  5356                           ;Lcd4Lignes.c: 390: unsigned char j;;Lcd4Lignes.c: 392: for(j = 0; chaine[j] != 0; j++)
  5357  001832  0E00               	movlw	0
  5358  001834  0100               	movlb	0	; force () banked
  5359  001836  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  5360  001838  EF46  F00C         	goto	l2054
  5361  00183C                     l2050:
  5362                           
  5363                           ;Lcd4Lignes.c: 393: lcd_ecritChar(chaine[j]);
  5364  00183C  0100               	movlb	0	; force () banked
  5365  00183E  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  5366  001840  0100               	movlb	0	; force () banked
  5367  001842  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  5368  001844  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5369  001846  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  5370  001848  0100               	movlb	0	; force () banked
  5371  00184A  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5372  00184C  0100               	movlb	0	; force () banked
  5373  00184E  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5374  001850  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5375  001852  0100               	movlb	0	; force () banked
  5376  001854  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5377  001856  0100               	movlb	0	; force () banked
  5378  001858  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5379  00185A  0E00               	movlw	0
  5380  00185C  0100               	movlb	0	; force () banked
  5381  00185E  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5382  001860  0100               	movlb	0	; force () banked
  5383  001862  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5384  001864  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5385  001868  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5386  00186C  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5387  001870  BAF8               	btfsc	tblptru,5,c
  5388  001872  D003               	bra	u1157
  5389  001874  0008               	tblrd		*
  5390  001876  50F5               	movf	tablat,w,c
  5391  001878  D005               	bra	u1150
  5392  00187A                     u1157:
  5393  00187A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5394  00187E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5395  001882  50EF               	movf	indf0,w,c
  5396  001884                     u1150:
  5397  001884  EC82  F00F         	call	_lcd_ecritChar
  5398  001888  0100               	movlb	0	; force () banked
  5399  00188A  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  5400  00188C                     l2054:
  5401                           
  5402                           ; BSR set to: 0
  5403  00188C  0100               	movlb	0	; force () banked
  5404  00188E  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  5405  001890  0100               	movlb	0	; force () banked
  5406  001892  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  5407  001894  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5408  001896  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  5409  001898  0100               	movlb	0	; force () banked
  5410  00189A  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5411  00189C  0100               	movlb	0	; force () banked
  5412  00189E  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5413  0018A0  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5414  0018A2  0100               	movlb	0	; force () banked
  5415  0018A4  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5416  0018A6  0100               	movlb	0	; force () banked
  5417  0018A8  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5418  0018AA  0E00               	movlw	0
  5419  0018AC  0100               	movlb	0	; force () banked
  5420  0018AE  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5421  0018B0  0100               	movlb	0	; force () banked
  5422  0018B2  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5423  0018B4  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5424  0018B8  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5425  0018BC  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5426  0018C0  BAF8               	btfsc	tblptru,5,c
  5427  0018C2  D003               	bra	u1167
  5428  0018C4  0008               	tblrd		*
  5429  0018C6  50F5               	movf	tablat,w,c
  5430  0018C8  D005               	bra	u1160
  5431  0018CA                     u1167:
  5432  0018CA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5433  0018CE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5434  0018D2  50EF               	movf	indf0,w,c
  5435  0018D4                     u1160:
  5436  0018D4  0900               	iorlw	0
  5437  0018D6  A4D8               	btfss	status,2,c
  5438  0018D8  EF70  F00C         	goto	u1171
  5439  0018DC  EF72  F00C         	goto	u1170
  5440  0018E0                     u1171:
  5441  0018E0  EF1E  F00C         	goto	l2050
  5442  0018E4                     u1170:
  5443  0018E4  0012               	return		;funcret
  5444  0018E6                     __end_of_lcd_putMessage:
  5445                           	opt callstack 0
  5446                           
  5447 ;; *************** function _lcd_ecritChar *****************
  5448 ;; Defined at:
  5449 ;;		line 360 in file "Lcd4Lignes.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  car             1    wreg     unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  car             1    3[BANK0 ] unsigned char 
  5454 ;;  posRam          1    4[BANK0 ] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5464 ;;      Params:         0       0       0       0       0       0       0
  5465 ;;      Locals:         0       2       0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0
  5467 ;;      Totals:         0       2       0       0       0       0       0
  5468 ;;Total ram usage:        2 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    3
  5471 ;; This function calls:
  5472 ;;		_lcd_wrCom
  5473 ;;		_lcd_wrData
  5474 ;; This function is called by:
  5475 ;;		_main
  5476 ;;		_demine
  5477 ;;		_enleveTuilesAutour
  5478 ;;		_lcd_putMessage
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text30
  5483  001F04                     __ptext30:
  5484                           	opt callstack 0
  5485  001F04                     _lcd_ecritChar:
  5486                           	opt callstack 25
  5487                           
  5488                           ;incstack = 0
  5489                           ;lcd_ecritChar@car stored from wreg
  5490  001F04  0100               	movlb	0	; force () banked
  5491  001F06  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5492  001F08                     
  5493                           ;Lcd4Lignes.c: 362: unsigned char posRam;;Lcd4Lignes.c: 364: posRam = lcd_wrData(car);
  5494  001F08  0100               	movlb	0	; force () banked
  5495  001F0A  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5496  001F0C  EC07  F010         	call	_lcd_wrData
  5497  001F10  0100               	movlb	0	; force () banked
  5498  001F12  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5499                           
  5500                           ;Lcd4Lignes.c: 365: switch(posRam)
  5501  001F14  EF9B  F00F         	goto	l2044
  5502  001F18                     l2036:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;Lcd4Lignes.c: 368: lcd_wrCom(0xC0|0x80);
  5506  001F18  0EC0               	movlw	192
  5507  001F1A  EC88  F00E         	call	_lcd_wrCom
  5508                           
  5509                           ;Lcd4Lignes.c: 369: break;
  5510  001F1E  EFAB  F00F         	goto	l350
  5511  001F22                     l2038:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;Lcd4Lignes.c: 371: lcd_wrCom(0x94|0x80);
  5515  001F22  0E94               	movlw	148
  5516  001F24  EC88  F00E         	call	_lcd_wrCom
  5517                           
  5518                           ;Lcd4Lignes.c: 372: break;
  5519  001F28  EFAB  F00F         	goto	l350
  5520  001F2C                     l2040:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;Lcd4Lignes.c: 374: lcd_wrCom(0xD4|0x80);
  5524  001F2C  0ED4               	movlw	212
  5525  001F2E  EC88  F00E         	call	_lcd_wrCom
  5526                           
  5527                           ;Lcd4Lignes.c: 375: break;
  5528  001F32  EFAB  F00F         	goto	l350
  5529  001F36                     l2044:
  5530                           
  5531                           ; BSR set to: 0
  5532  001F36  0100               	movlb	0	; force () banked
  5533  001F38  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5534                           
  5535                           ; Switch size 1, requested type "simple"
  5536                           ; Number of cases is 3, Range of values is 148 to 212
  5537                           ; switch strategies available:
  5538                           ; Name         Instructions Cycles
  5539                           ; simple_byte           10     6 (average)
  5540                           ;	Chosen strategy is simple_byte
  5541  001F3A  0A94               	xorlw	148	; case 148
  5542  001F3C  B4D8               	btfsc	status,2,c
  5543  001F3E  EF8C  F00F         	goto	l2036
  5544  001F42  0A54               	xorlw	84	; case 192
  5545  001F44  B4D8               	btfsc	status,2,c
  5546  001F46  EF96  F00F         	goto	l2040
  5547  001F4A  0A14               	xorlw	20	; case 212
  5548  001F4C  B4D8               	btfsc	status,2,c
  5549  001F4E  EF91  F00F         	goto	l2038
  5550  001F52  EFAB  F00F         	goto	l350
  5551  001F56                     l350:
  5552  001F56  0012               	return		;funcret
  5553  001F58                     __end_of_lcd_ecritChar:
  5554                           	opt callstack 0
  5555                           
  5556 ;; *************** function _lcd_wrData *****************
  5557 ;; Defined at:
  5558 ;;		line 189 in file "Lcd4Lignes.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  caractere       1    wreg     unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  caractere       1    2[BANK0 ] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      unsigned char 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5572 ;;      Params:         0       0       0       0       0       0       0
  5573 ;;      Locals:         0       1       0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0
  5575 ;;      Totals:         0       1       0       0       0       0       0
  5576 ;;Total ram usage:        1 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    2
  5579 ;; This function calls:
  5580 ;;		_lcd_busy
  5581 ;;		_lcd_ecrireDonnees
  5582 ;;		_lcd_strobeEnableBit
  5583 ;; This function is called by:
  5584 ;;		_lcd_ecritChar
  5585 ;;		_lcd_initCGRam
  5586 ;;		_lcd_effaceChar
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text31
  5591  00200E                     __ptext31:
  5592                           	opt callstack 0
  5593  00200E                     _lcd_wrData:
  5594                           	opt callstack 25
  5595                           
  5596                           ;incstack = 0
  5597                           ;lcd_wrData@caractere stored from wreg
  5598  00200E  0100               	movlb	0	; force () banked
  5599  002010  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5600  002012                     
  5601                           ;Lcd4Lignes.c: 191: lcd_busy();
  5602  002012  ECAC  F00F         	call	_lcd_busy	;wreg free
  5603  002016                     
  5604                           ;Lcd4Lignes.c: 192: TRISD = 0b00000000;
  5605  002016  0E00               	movlw	0
  5606  002018  6E95               	movwf	149,c	;volatile
  5607  00201A                     
  5608                           ;Lcd4Lignes.c: 195: PORTAbits.RA0 = 1;
  5609  00201A  8080               	bsf	128,0,c	;volatile
  5610  00201C                     
  5611                           ;Lcd4Lignes.c: 196: PORTAbits.RA1 = 0;
  5612  00201C  9280               	bcf	128,1,c	;volatile
  5613  00201E                     
  5614                           ;Lcd4Lignes.c: 198: lcd_ecrireDonnees(caractere >> 4);
  5615  00201E  0100               	movlb	0	; force () banked
  5616  002020  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5617  002022  0B0F               	andlw	15
  5618  002024  EC6E  F010         	call	_lcd_ecrireDonnees
  5619  002028                     
  5620                           ;Lcd4Lignes.c: 199: lcd_strobeEnableBit();
  5621  002028  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  5622  00202C                     
  5623                           ;Lcd4Lignes.c: 202: lcd_ecrireDonnees(caractere);
  5624  00202C  0100               	movlb	0	; force () banked
  5625  00202E  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5626  002030  EC6E  F010         	call	_lcd_ecrireDonnees
  5627  002034                     
  5628                           ;Lcd4Lignes.c: 203: lcd_strobeEnableBit();
  5629  002034  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  5630  002038                     
  5631                           ;Lcd4Lignes.c: 206: TRISD = 0b00001111;
  5632  002038  0E0F               	movlw	15
  5633  00203A  6E95               	movwf	149,c	;volatile
  5634  00203C                     
  5635                           ;Lcd4Lignes.c: 207: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5636                           ;Lcd4Lignes.c: 208: return(lcd_busy());
  5637  00203C  ECAC  F00F         	call	_lcd_busy	;wreg free
  5638  002040  0012               	return		;funcret
  5639  002042                     __end_of_lcd_wrData:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _lcd_gotoXY *****************
  5643 ;; Defined at:
  5644 ;;		line 315 in file "Lcd4Lignes.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  x               1    wreg     unsigned char 
  5647 ;;  y               1    3[BANK0 ] unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  x               1    4[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5659 ;;      Params:         0       1       0       0       0       0       0
  5660 ;;      Locals:         0       1       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0
  5662 ;;      Totals:         0       2       0       0       0       0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    3
  5666 ;; This function calls:
  5667 ;;		_lcd_wrCom
  5668 ;; This function is called by:
  5669 ;;		_menuAccueil
  5670 ;;		_afficheTabVue
  5671 ;;		_afficheTabMines
  5672 ;;		_deplace
  5673 ;;		_enleveTuilesAutour
  5674 ;;		_afficheGagne
  5675 ;;		_lcd_effaceLigne
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text32
  5680  001B56                     __ptext32:
  5681                           	opt callstack 0
  5682  001B56                     _lcd_gotoXY:
  5683                           	opt callstack 26
  5684                           
  5685                           ;incstack = 0
  5686                           ;lcd_gotoXY@x stored from wreg
  5687  001B56  0100               	movlb	0	; force () banked
  5688  001B58  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5689  001B5A                     
  5690                           ;Lcd4Lignes.c: 317: switch(y)
  5691  001B5A  EFCF  F00D         	goto	l2068
  5692  001B5E                     l2058:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;Lcd4Lignes.c: 320: lcd_wrCom((x-1+0x80)|0x80);
  5696  001B5E  0100               	movlb	0	; force () banked
  5697  001B60  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5698  001B62  0F7F               	addlw	127
  5699  001B64  0980               	iorlw	128
  5700  001B66  EC88  F00E         	call	_lcd_wrCom
  5701                           
  5702                           ;Lcd4Lignes.c: 321: break;
  5703  001B6A  EFE3  F00D         	goto	l339
  5704  001B6E                     l2060:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;Lcd4Lignes.c: 323: lcd_wrCom((x-1+0xC0)|0x80);
  5708  001B6E  0100               	movlb	0	; force () banked
  5709  001B70  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5710  001B72  0FBF               	addlw	191
  5711  001B74  0980               	iorlw	128
  5712  001B76  EC88  F00E         	call	_lcd_wrCom
  5713                           
  5714                           ;Lcd4Lignes.c: 324: break;
  5715  001B7A  EFE3  F00D         	goto	l339
  5716  001B7E                     l2062:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;Lcd4Lignes.c: 326: lcd_wrCom((x-1+0x94)|0x80);
  5720  001B7E  0100               	movlb	0	; force () banked
  5721  001B80  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5722  001B82  0F93               	addlw	147
  5723  001B84  0980               	iorlw	128
  5724  001B86  EC88  F00E         	call	_lcd_wrCom
  5725                           
  5726                           ;Lcd4Lignes.c: 327: break;
  5727  001B8A  EFE3  F00D         	goto	l339
  5728  001B8E                     l2064:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;Lcd4Lignes.c: 329: lcd_wrCom((x-1+0xD4)|0x80);
  5732  001B8E  0100               	movlb	0	; force () banked
  5733  001B90  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5734  001B92  0FD3               	addlw	211
  5735  001B94  0980               	iorlw	128
  5736  001B96  EC88  F00E         	call	_lcd_wrCom
  5737                           
  5738                           ;Lcd4Lignes.c: 330: break;
  5739  001B9A  EFE3  F00D         	goto	l339
  5740  001B9E                     l2068:
  5741  001B9E  0100               	movlb	0	; force () banked
  5742  001BA0  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  5743                           
  5744                           ; Switch size 1, requested type "simple"
  5745                           ; Number of cases is 4, Range of values is 1 to 4
  5746                           ; switch strategies available:
  5747                           ; Name         Instructions Cycles
  5748                           ; simple_byte           13     7 (average)
  5749                           ;	Chosen strategy is simple_byte
  5750  001BA2  0A01               	xorlw	1	; case 1
  5751  001BA4  B4D8               	btfsc	status,2,c
  5752  001BA6  EFAF  F00D         	goto	l2058
  5753  001BAA  0A03               	xorlw	3	; case 2
  5754  001BAC  B4D8               	btfsc	status,2,c
  5755  001BAE  EFB7  F00D         	goto	l2060
  5756  001BB2  0A01               	xorlw	1	; case 3
  5757  001BB4  B4D8               	btfsc	status,2,c
  5758  001BB6  EFBF  F00D         	goto	l2062
  5759  001BBA  0A07               	xorlw	7	; case 4
  5760  001BBC  B4D8               	btfsc	status,2,c
  5761  001BBE  EFC7  F00D         	goto	l2064
  5762  001BC2  EFE3  F00D         	goto	l339
  5763  001BC6                     l339:
  5764  001BC6  0012               	return		;funcret
  5765  001BC8                     __end_of_lcd_gotoXY:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function _lcd_wrCom *****************
  5769 ;; Defined at:
  5770 ;;		line 157 in file "Lcd4Lignes.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  commande        1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  commande        1    2[BANK0 ] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      unsigned char 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5784 ;;      Params:         0       0       0       0       0       0       0
  5785 ;;      Locals:         0       1       0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0
  5787 ;;      Totals:         0       1       0       0       0       0       0
  5788 ;;Total ram usage:        1 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    2
  5791 ;; This function calls:
  5792 ;;		_lcd_busy
  5793 ;;		_lcd_ecrireDonnees
  5794 ;;		_lcd_strobeEnableBit
  5795 ;; This function is called by:
  5796 ;;		_lcd_init
  5797 ;;		_lcd_effaceAffichage
  5798 ;;		_lcd_curseurHome
  5799 ;;		_lcd_gotoXY
  5800 ;;		_lcd_ecritChar
  5801 ;;		_lcd_cacheCurseur
  5802 ;;		_lcd_montreCurseur
  5803 ;;		_lcd_initCGRam
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text33
  5808  001D10                     __ptext33:
  5809                           	opt callstack 0
  5810  001D10                     _lcd_wrCom:
  5811                           	opt callstack 25
  5812                           
  5813                           ;incstack = 0
  5814                           ;lcd_wrCom@commande stored from wreg
  5815  001D10  0100               	movlb	0	; force () banked
  5816  001D12  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  5817  001D14                     
  5818                           ;Lcd4Lignes.c: 159: lcd_busy();
  5819  001D14  ECAC  F00F         	call	_lcd_busy	;wreg free
  5820  001D18                     
  5821                           ;Lcd4Lignes.c: 161: TRISD = 0b00000000;
  5822  001D18  0E00               	movlw	0
  5823  001D1A  6E95               	movwf	149,c	;volatile
  5824  001D1C                     
  5825                           ;Lcd4Lignes.c: 164: PORTAbits.RA0 = 0;
  5826  001D1C  9080               	bcf	128,0,c	;volatile
  5827  001D1E                     
  5828                           ;Lcd4Lignes.c: 165: PORTAbits.RA1 = 0;
  5829  001D1E  9280               	bcf	128,1,c	;volatile
  5830  001D20                     
  5831                           ;Lcd4Lignes.c: 167: lcd_ecrireDonnees(commande >> 4);
  5832  001D20  0100               	movlb	0	; force () banked
  5833  001D22  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  5834  001D24  0B0F               	andlw	15
  5835  001D26  EC6E  F010         	call	_lcd_ecrireDonnees
  5836  001D2A                     
  5837                           ;Lcd4Lignes.c: 168: lcd_strobeEnableBit();
  5838  001D2A  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  5839  001D2E                     
  5840                           ;Lcd4Lignes.c: 171: lcd_ecrireDonnees(commande);
  5841  001D2E  0100               	movlb	0	; force () banked
  5842  001D30  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  5843  001D32  EC6E  F010         	call	_lcd_ecrireDonnees
  5844  001D36                     
  5845                           ;Lcd4Lignes.c: 172: lcd_strobeEnableBit();
  5846  001D36  EC97  F010         	call	_lcd_strobeEnableBit	;wreg free
  5847  001D3A                     
  5848                           ;Lcd4Lignes.c: 173: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5849  001D3A  0E03               	movlw	3
  5850  001D3C                     u2277:
  5851  001D3C  2EE8               	decfsz	wreg,f,c
  5852  001D3E  D7FE               	bra	u2277
  5853  001D40  F000               	nop	
  5854  001D42                     
  5855                           ;Lcd4Lignes.c: 175: if ((commande == 0x01) || commande == 0x02)
  5856  001D42  0100               	movlb	0	; force () banked
  5857  001D44  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  5858  001D46  B4D8               	btfsc	status,2,c
  5859  001D48  EFA8  F00E         	goto	u1131
  5860  001D4C  EFAA  F00E         	goto	u1130
  5861  001D50                     u1131:
  5862  001D50  EFB4  F00E         	goto	l1996
  5863  001D54                     u1130:
  5864  001D54                     
  5865                           ; BSR set to: 0
  5866  001D54  0E02               	movlw	2
  5867  001D56  0100               	movlb	0	; force () banked
  5868  001D58  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5869  001D5A  A4D8               	btfss	status,2,c
  5870  001D5C  EFB2  F00E         	goto	u1141
  5871  001D60  EFB4  F00E         	goto	u1140
  5872  001D64                     u1141:
  5873  001D64  EFB9  F00E         	goto	l1998
  5874  001D68                     u1140:
  5875  001D68                     l1996:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;Lcd4Lignes.c: 176: _delay((unsigned long)((2)*(1000000/4000.0)));
  5879  001D68  0EA6               	movlw	166
  5880  001D6A                     u2287:
  5881  001D6A  2EE8               	decfsz	wreg,f,c
  5882  001D6C  D7FE               	bra	u2287
  5883  001D6E  F000 F000          	nop2	
  5884  001D72                     l1998:
  5885                           
  5886                           ;Lcd4Lignes.c: 178: TRISD = 0b00001111;
  5887  001D72  0E0F               	movlw	15
  5888  001D74  6E95               	movwf	149,c	;volatile
  5889  001D76                     
  5890                           ;Lcd4Lignes.c: 180: return(lcd_busy());
  5891  001D76  ECAC  F00F         	call	_lcd_busy	;wreg free
  5892  001D7A  0012               	return		;funcret
  5893  001D7C                     __end_of_lcd_wrCom:
  5894                           	opt callstack 0
  5895                           
  5896 ;; *************** function _lcd_strobeEnableBit *****************
  5897 ;; Defined at:
  5898 ;;		line 432 in file "Lcd4Lignes.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		None
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5912 ;;      Params:         0       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; This function calls:
  5919 ;;		Nothing
  5920 ;; This function is called by:
  5921 ;;		_lcd_wrCom
  5922 ;;		_lcd_wrData
  5923 ;;		_lcd_resetSequence
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text34
  5928  00212E                     __ptext34:
  5929                           	opt callstack 0
  5930  00212E                     _lcd_strobeEnableBit:
  5931                           	opt callstack 26
  5932  00212E                     
  5933                           ;Lcd4Lignes.c: 434: PORTAbits.RA2 = 1;
  5934  00212E  8480               	bsf	128,2,c	;volatile
  5935                           
  5936                           ;Lcd4Lignes.c: 435: __nop();
  5937  002130  F000               	nop	
  5938                           
  5939                           ;Lcd4Lignes.c: 436: PORTAbits.RA2 = 0;
  5940  002132  9480               	bcf	128,2,c	;volatile
  5941  002134  0012               	return		;funcret
  5942  002136                     __end_of_lcd_strobeEnableBit:
  5943                           	opt callstack 0
  5944                           
  5945 ;; *************** function _lcd_ecrireDonnees *****************
  5946 ;; Defined at:
  5947 ;;		line 108 in file "Lcd4Lignes.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  donnee          1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  donnee          1    1[BANK0 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5961 ;;      Params:         0       0       0       0       0       0       0
  5962 ;;      Locals:         0       1       0       0       0       0       0
  5963 ;;      Temps:          0       1       0       0       0       0       0
  5964 ;;      Totals:         0       2       0       0       0       0       0
  5965 ;;Total ram usage:        2 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_lcd_wrCom
  5971 ;;		_lcd_wrData
  5972 ;;		_lcd_resetSequence
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text35
  5977  0020DC                     __ptext35:
  5978                           	opt callstack 0
  5979  0020DC                     _lcd_ecrireDonnees:
  5980                           	opt callstack 26
  5981                           
  5982                           ;incstack = 0
  5983                           ;lcd_ecrireDonnees@donnee stored from wreg
  5984  0020DC  0100               	movlb	0	; force () banked
  5985  0020DE  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5986  0020E0                     
  5987                           ;Lcd4Lignes.c: 111: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5988  0020E0  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5989  0020E4  0EF0               	movlw	240
  5990  0020E6  0100               	movlb	0	; force () banked
  5991  0020E8  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5992  0020EA  0100               	movlb	0	; force () banked
  5993  0020EC  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5994  0020EE  0B0F               	andlw	15
  5995  0020F0  0100               	movlb	0	; force () banked
  5996  0020F2  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5997  0020F4  6E83               	movwf	131,c	;volatile
  5998  0020F6                     
  5999                           ; BSR set to: 0
  6000  0020F6  0012               	return		;funcret
  6001  0020F8                     __end_of_lcd_ecrireDonnees:
  6002                           	opt callstack 0
  6003                           
  6004 ;; *************** function _lcd_busy *****************
  6005 ;; Defined at:
  6006 ;;		line 125 in file "Lcd4Lignes.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;		None
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  adresse         1    1[BANK0 ] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      unsigned char 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, status,0, cstack
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6020 ;;      Params:         0       0       0       0       0       0       0
  6021 ;;      Locals:         0       1       0       0       0       0       0
  6022 ;;      Temps:          0       1       0       0       0       0       0
  6023 ;;      Totals:         0       2       0       0       0       0       0
  6024 ;;Total ram usage:        2 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    1
  6027 ;; This function calls:
  6028 ;;		_lcd_lireDonnees
  6029 ;; This function is called by:
  6030 ;;		_lcd_wrCom
  6031 ;;		_lcd_wrData
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text36
  6036  001F58                     __ptext36:
  6037                           	opt callstack 0
  6038  001F58                     _lcd_busy:
  6039                           	opt callstack 25
  6040  001F58                     
  6041                           ;Lcd4Lignes.c: 127: unsigned char adresse;;Lcd4Lignes.c: 129: PORTAbits.RA0 = 0;
  6042  001F58  9080               	bcf	128,0,c	;volatile
  6043                           
  6044                           ;Lcd4Lignes.c: 130: PORTAbits.RA1 = 1;
  6045  001F5A  8280               	bsf	128,1,c	;volatile
  6046  001F5C                     l301:
  6047                           
  6048                           ;Lcd4Lignes.c: 133: {;Lcd4Lignes.c: 134: PORTAbits.RA2 = 1;
  6049  001F5C  8480               	bsf	128,2,c	;volatile
  6050                           
  6051                           ;Lcd4Lignes.c: 135: __nop();
  6052  001F5E  F000               	nop	
  6053  001F60                     
  6054                           ;Lcd4Lignes.c: 136: adresse = lcd_lireDonnees() << 4;
  6055  001F60  EC9B  F010         	call	_lcd_lireDonnees	;wreg free
  6056  001F64  0100               	movlb	0	; force () banked
  6057  001F66  6FB4               	movwf	??_lcd_busy& (0+255),b
  6058  001F68  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6059  001F6A  0BF0               	andlw	240
  6060  001F6C  0100               	movlb	0	; force () banked
  6061  001F6E  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6062  001F70                     
  6063                           ; BSR set to: 0
  6064                           ;Lcd4Lignes.c: 137: PORTAbits.RA2 = 0;
  6065  001F70  9480               	bcf	128,2,c	;volatile
  6066  001F72                     
  6067                           ;Lcd4Lignes.c: 139: PORTAbits.RA2 = 1;
  6068  001F72  8480               	bsf	128,2,c	;volatile
  6069  001F74                     
  6070                           ;Lcd4Lignes.c: 140: __nop();
  6071  001F74  F000               	nop	
  6072                           
  6073                           ;Lcd4Lignes.c: 141: adresse |= lcd_lireDonnees();
  6074  001F76  EC9B  F010         	call	_lcd_lireDonnees	;wreg free
  6075  001F7A  0100               	movlb	0	; force () banked
  6076  001F7C  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6077  001F7E                     
  6078                           ; BSR set to: 0
  6079                           ;Lcd4Lignes.c: 142: PORTAbits.RA2 = 0;
  6080  001F7E  9480               	bcf	128,2,c	;volatile
  6081  001F80                     
  6082                           ;Lcd4Lignes.c: 144: };Lcd4Lignes.c: 145: while(adresse&0x80);
  6083  001F80  0100               	movlb	0	; force () banked
  6084  001F82  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6085  001F84  EFC6  F00F         	goto	u1121
  6086  001F88  EFC8  F00F         	goto	u1120
  6087  001F8C                     u1121:
  6088  001F8C  EFAE  F00F         	goto	l301
  6089  001F90                     u1120:
  6090  001F90                     
  6091                           ; BSR set to: 0
  6092                           ;Lcd4Lignes.c: 147: PORTAbits.RA1 = 0;
  6093  001F90  9280               	bcf	128,1,c	;volatile
  6094  001F92                     
  6095                           ; BSR set to: 0
  6096                           ;Lcd4Lignes.c: 148: return(adresse&0x7f);
  6097  001F92  0100               	movlb	0	; force () banked
  6098  001F94  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6099  001F96  0B7F               	andlw	127
  6100  001F98                     
  6101                           ; BSR set to: 0
  6102  001F98  0012               	return		;funcret
  6103  001F9A                     __end_of_lcd_busy:
  6104                           	opt callstack 0
  6105                           
  6106 ;; *************** function _lcd_lireDonnees *****************
  6107 ;; Defined at:
  6108 ;;		line 94 in file "Lcd4Lignes.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6122 ;;      Params:         0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0
  6125 ;;      Totals:         0       0       0       0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_lcd_busy
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text37
  6136  002136                     __ptext37:
  6137                           	opt callstack 0
  6138  002136                     _lcd_lireDonnees:
  6139                           	opt callstack 25
  6140  002136                     
  6141                           ;Lcd4Lignes.c: 97: return (PORTD & 0x0f);
  6142  002136  5083               	movf	131,w,c	;volatile
  6143  002138  0B0F               	andlw	15
  6144  00213A  0012               	return		;funcret
  6145  00213C                     __end_of_lcd_lireDonnees:
  6146                           	opt callstack 0
  6147                           
  6148                           	psect	param0
  6149  0000                     tosu	equ	0xFFF
  6150                           tosh	equ	0xFFE
  6151                           tosl	equ	0xFFD
  6152                           stkptr	equ	0xFFC
  6153                           pclatu	equ	0xFFB
  6154                           pclath	equ	0xFFA
  6155                           pcl	equ	0xFF9
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           indf0	equ	0xFEF
  6163                           postinc0	equ	0xFEE
  6164                           postdec0	equ	0xFED
  6165                           preinc0	equ	0xFEC
  6166                           plusw0	equ	0xFEB
  6167                           fsr0h	equ	0xFEA
  6168                           fsr0l	equ	0xFE9
  6169                           wreg	equ	0xFE8
  6170                           indf1	equ	0xFE7
  6171                           postinc1	equ	0xFE6
  6172                           postdec1	equ	0xFE5
  6173                           preinc1	equ	0xFE4
  6174                           plusw1	equ	0xFE3
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           bsr	equ	0xFE0
  6178                           indf2	equ	0xFDF
  6179                           postinc2	equ	0xFDE
  6180                           postdec2	equ	0xFDD
  6181                           preinc2	equ	0xFDC
  6182                           plusw2	equ	0xFDB
  6183                           fsr2h	equ	0xFDA
  6184                           fsr2l	equ	0xFD9
  6185                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    40
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     66     154
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> STR_2(CODE[8]), STR_1(CODE[9]), m_tabMines(BANK0[84]), menuAccueil@menuMsgs(BANK0[40]), 
		 -> m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@posY(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@posX(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_menuAccueil
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _menuAccueil->_lcd_putMessage
    _lcd_cacheCurseur->_lcd_wrCom
    _lcd_montreCurseur->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _gagne->_afficheGagne
    _afficheGagne->_lcd_putMessage
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   23645
                                             56 BANK0     10    10      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                      _lcd_ecritChar
                           _lcd_init
                  _lcd_montreCurseur
                        _menuAccueil
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          8     6      2    1242
                                             20 BANK0      8     6      2
                            ___awmod
                               _rand
                          _videMines
 ---------------------------------------------------------------------------------
 (2) _videMines                                            4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     7     7      0    4504
                                             16 BANK0      7     7      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    4078
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _menuAccueil                                         42    42      0    2324
                                             14 BANK0     42    42      0
                   _lcd_cacheCurseur
                    _lcd_curseurHome
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (2) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           5     5      0     204
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2    2289
                                             16 BANK0      9     7      2
                       _afficheGagne
 ---------------------------------------------------------------------------------
 (2) _afficheGagne                                         2     2      0    1965
                                             14 BANK0      2     2      0
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1520
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    6073
                                             20 BANK0     10     9      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  14    13      1    5332
                                              6 BANK0     14    13      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3235
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        3     3      0    1899
                                             14 BANK0      3     3      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      3     3      0    1899
                                             14 BANK0      3     3      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       9     6      3     859
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (4) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     950
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (4) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (5) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (6) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     _afficheGagne
       _lcd_effaceAffichage
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
   _initTabVue
   _init_serie
   _initialisation
     _srand
   _lcd_ecritChar
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrData
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_montreCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _menuAccueil
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_curseurHome
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _videMines

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     42      9A       4       96.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      14        0.0%
DATA                 0      0     12E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 12:47:54 2019

    __end_of_calculToucheCombien 0ACA                               l92 0E7C  
                             l88 0EA6             ??_enleveTuilesAutour 00BB  
            ___wmul@multiplicand 00B6                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000     __size_of_lcd_strobeEnableBit 0008  
                            l121 1C34                              l107 1B54  
                            l220 1E4E                              l212 1620  
                            l116 176E                              l140 1830  
                            l301 1F5C                              l205 0DC8  
                            l133 1ACE                              l302 1F90  
                            l126 1CA2                              l303 1F98  
                            l223 205C                              l312 2040  
                            l216 1690                              l152 13DC  
                            l321 2114                              l226 206C  
                            l315 1DE4                              l252 20DA  
                            l324 212C                              l172 0AC8  
                            l309 1D7A                              l229 200C  
                            l350 1F56                              l190 121C  
                            l318 2094                              l185 1562  
                            l362 2124                              l339 1BC6  
                            l372 2134                              l356 18E4  
                            l295 213A                              l375 20BC  
                            l359 211C                              l369 1A38  
                            l298 20F6                              l386 1CFE  
                            l619 1996                              l387 1D0E  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                   __CFG_BORV$18 000000                     ___awmod@sign 00C7  
                            prod 000FF3                      lcd_gotoXY@x 00B8  
                            wreg 000FE8                      lcd_gotoXY@y 00B7  
   __size_of_lcd_effaceAffichage 000E                      main@nbMines 00F2  
                   __CFG_LVP$OFF 000000                             l2000 1D76  
                           l2002 1D76                             l2010 201A  
                           l1042 1F02                             l2020 202C  
                           l2012 201A                             l2030 203C  
                           l2022 202C                             l2014 201C  
                           l2006 2012                             l2110 1ABC  
                           l2102 1A72                             l1039 2106  
                           l2024 2034                             l2016 201E  
                           l2008 2016                             l2040 1F2C  
                           l2200 0AFA                             l2120 063C  
                           l2112 1EAE                             l2104 1AA2  
                           l2026 2038                             l2018 2028  
                           l2034 1F08                             l2050 183C  
                           l2202 0B0C                             l2130 0710  
                           l2122 0642                             l2114 1EE4  
                           l2106 1AA6                             l2060 1B6E  
                           l2028 2038                             l2036 1F18  
                           l2044 1F36                             l2052 1888  
                           l2220 0BE4                             l2212 0B42  
                           l2204 0B1E                             l2300 19C0  
                           l2140 07B8                             l2132 0724  
                           l2124 0698                             l2116 1EF6  
                           l2108 1AB8                             l2062 1B7E  
                           l2038 1F22                             l2054 188C  
                           l2230 0D62                             l2222 0BFC  
                           l2214 0B54                             l2206 0B24  
                           l2046 2108                             l2070 2126  
                           l2310 1A1E                             l2150 08A4  
                           l2142 0816                             l2134 078A  
                           l2126 06AE                             l2064 1B8E  
                           l2056 1B5A                             l2048 1832  
                           l2072 2096                             l2240 0DA8  
                           l2232 0D68                             l2224 0CCE  
                           l2216 0B66                             l2208 0B28  
                           l2312 1A22                             l2304 19D6  
                           l2400 1B14                             l2160 093A  
                           l2152 08A8                             l2144 081A  
                           l2136 078E                             l2128 070C  
                           l2320 18FA                             l2080 1CB6  
                           l2058 1B5E                             l2074 20B4  
                           l2242 0DAE                             l2234 0D6C  
                           l2226 0D3C                             l2218 0B6C  
                           l2250 1E0E                             l2410 1692  
                           l2306 1A08                             l2314 1A34  
                           l2402 1B2C                             l2170 09E4  
                           l2162 094E                             l2154 08BC  
                           l2146 0830                             l2138 07A4  
                           l2330 192E                             l2322 1902  
                           l2082 1CC4                             l2090 1A3A  
                           l2068 1B9E                             l2244 0DB2  
                           l2228 0D50                             l2236 0D82  
                           l2252 1E32                             l2412 1698  
                           l2308 1A0C                             l2260 1D94  
                           l2404 1B30                             l2172 0A42  
                           l2164 0964                             l2156 08D0  
                           l2148 0846                             l2180 0AC4  
                           l2500 13CA                             l2340 196A  
                           l2332 1936                             l2324 1906  
                           l2316 18E6                             l2084 1CD4  
                           l2092 1A40                             l2510 1BF2  
                           l2502 1BC8                             l2238 0D96  
                           l2190 206A                             l2246 1DE6  
                           l2430 1714                             l2422 16CA  
                           l2254 20F8                             l2270 1DAA  
                           l2262 1D96                             l2406 1B34  
                           l2174 0A46                             l2166 09CA  
                           l2158 0936                             l2342 1970  
                           l2334 193E                             l2326 1914  
                           l2318 18EC                             l2086 1CDE  
                           l2078 1CA4                             l2512 1C1E  
                           l2504 1BCE                             l2600 10FE  
                           l2184 2046                             l2520 13F8  
                           l2248 1DF6                             l2440 1758  
                           l2424 16FA                             l2432 1726  
                           l2416 16AE                             l2360 1FFA  
                           l2352 1FDA                             l2280 1DC6  
                           l2272 1DB0                             l2264 1D98  
                           l2256 1D7C                             l2088 2116  
                           l2408 1B50                             l2176 0A5A  
                           l2168 09CE                             l2336 194C  
                           l2344 1976                             l2328 191C  
                           l2096 1A56                             l2514 1C22  
                           l2194 0ACE                             l2602 114C  
                           l2186 205A                             l2530 1486  
                           l2522 1412                             l2442 175C  
                           l2434 172C                             l2426 16FE  
                           l2418 16B4                             l2370 2008  
                           l2362 1FFC                             l2354 1FE2  
                           l2290 1998                             l2282 1DCE  
                           l2274 1DB4                             l2266 1D9E  
                           l2258 1D80                             l2178 0AC0  
                           l2346 1986                             l2338 1962  
                           l2098 1A5C                             l2450 17AC  
                           l2620 1C60                             l2612 1C36  
                           l2508 1BE4                             l2196 0ADE  
                           l2604 11C8                             l2188 205A  
                           l2540 14EE                             l2524 142A  
                           l2532 1492                             l2428 1710  
                           l2380 20CE                             l2372 20BE  
                           l2364 1FFE                             l2356 1FEC  
                           l2292 199E                             l2284 1DD4  
                           l2276 1DBC                             l2268 1DA2  
                           l2516 211E                             l2460 122A  
                           l2348 198E                             l2452 17EA  
                           l2444 1770                             l2622 1C8C  
                           l2614 1C3C                             l2606 120E  
                           l2542 1508                             l2534 14AC  
                           l2526 143A                             l2518 13DE  
                           l2550 1570                             l2438 1742  
                           l2382 20D0                             l2374 20C2  
                           l2366 2002                             l2358 1FEE  
                           l2294 19A4                             l2286 1DD8  
                           l2278 1DC2                             l2390 2090  
                           l2470 125C                             l2454 181A  
                           l2446 1774                             l2624 1C90  
                           l2608 121A                             l2544 153A  
                           l2536 14C6                             l2528 1454  
                           l2560 15A2                             l2384 20D2  
                           l2376 20CA                             l2368 2004  
                           l2288 1DE0                             l2392 1AD0  
                           l2480 1338                             l2472 1274  
                           l2464 1240                             l2448 177C  
                           l2456 181E                             l2640 0DEE  
                           l2618 1C52                             l2538 14DE  
                           l2546 1546                             l2570 163A  
                           l2562 15DE                             l2554 1586  
                           l2386 20D4                             l2378 20CC  
                           l2298 19BA                             l2394 1AEC  
                           l2482 1368                             l2474 1288  
                           l2466 1246                             l2490 1394  
                           l2458 121E                             l2650 0E0A  
                           l2642 0DF2                             l2634 0DCA  
                           l1940 2136                             l2564 161C  
                           l2556 158C                             l2572 164C  
                           l2548 1564                             l2388 206E  
                           l2396 1AF0                             l2492 139A  
                           l2484 136C                             l2476 12C6  
                           l2660 0E4A                             l2652 0E0E  
                           l2644 0DF6                             l2636 0DE6  
                           l1950 1F70                             l2590 105C  
                           l2574 1676                             l2566 1624  
                           l2398 1B08                             l2478 12FA  
                           l2486 137E                             l2670 0EB4  
                           l2662 0E66                             l2654 0E12  
                           l2646 0DFA                             l2638 0DEA  
                           l1960 1F80                             l1952 1F72  
                           l1944 20E0                             l2592 10AA  
                           l2576 167A                             l2584 168E  
                           l2568 1636                             l2496 13B0  
                           l2488 1382                             l2680 0FD8  
                           l2672 0F00                             l2664 0E78  
                           l2656 0E2A                             l2648 0E06  
                           l1962 1F80                             l1954 1F72  
                           l1946 1F58                             l1970 1D14  
                           l2578 1688                             l2498 13C6  
                           l2682 0FDE                             l2674 0F40  
                           l2666 0E8A                             l2658 0E38  
                           l1964 1F92                             l1956 1F74  
                           l1948 1F60                             l1980 1D20  
                           l1972 1D18                             l2588 100E  
                           l2676 0F4A                             l2668 0E9E  
                           l2684 0FF0                             l1958 1F7E  
                           l1990 1D3A                             l1982 1D2A  
                           l1974 1D1C                             l2598 10B0  
                           l2678 0F98                             l1968 212E  
                           l1992 1D42                             l1984 1D2E  
                           l1976 1D1C                             l1994 1D54  
                           l1986 1D2E                             l1978 1D1E  
                           l1996 1D68                             l1988 1D36  
                           l1998 1D72                             STR_1 0629  
                           STR_2 0632                             u1120 1F90  
                           u2000 161C                             u1200 1A52  
                           u1121 1F8C                             u2001 1618  
                           u1201 1A4E                             u1130 1D54  
                           u2010 1636                             u1210 1A6E  
                           u1131 1D50                             u2011 1632  
                           u1211 1A6A                             u1140 1D68  
                           u2020 164C                             u1300 07B8  
                           u1220 1AB8                             u1141 1D64  
                           u2021 1648                             u1301 07B4  
                           u1221 1AB4                             u1150 1884  
                           u2030 1676                             u1310 0816  
                           u1230 1ACE                             u2110 0E38  
                           u2031 1672                             u1311 0812  
                           u1231 1ACA                             u2111 0E34  
                           u1160 18D4                             u2040 105C  
                           u1400 09CA                             u1320 0830  
                           u1240 0698                             u2120 0E66  
                           u2041 1058                             u1401 09C6  
                           u1321 082C                             u1241 0694  
                           u2121 0E62                             u1170 18E4  
                           u2050 10AA                             u1410 09E4  
                           u1330 0846                             u1250 06AE  
                           u2130 0E78                             u1171 18E0  
                           u2051 10A6                             u1411 09E0  
                           u1331 0842                             u1251 06AA  
                           u2131 0E74                             u1500 0B54  
                           u2060 10FE                             u1420 0A42  
                           u1340 08A4                             u1260 070C  
                           u1180 1CC4                             u2140 0E8A  
                           u1157 187A                             u1501 0B50  
                           u2061 10FA                             u1421 0A3E  
                           u1341 08A0                             u1261 0708  
                           u1181 1CC0                             u2141 0E86  
                           u1510 0B66                             u2070 114C  
                           u1430 0A5A                             u1350 08BC  
                           u1270 0724                             u1190 1CFE  
                           u2150 0EB4                             u1167 18CA  
                           u1511 0B62                             u2071 1148  
                           u2207 1B40                             u1431 0A56  
                           u1351 08B8                             u1271 0720  
                           u1191 1CFA                             u2151 0EB0  
                           u2080 1C4E                             u1520 0BE4  
                           u1600 19D2                             u1440 0AC0  
                           u1360 08D0                             u1280 078A  
                           u2160 0F00                             u2081 1C4A  
                           u1521 0BE0                             u1601 19CE  
                           u2217 1D88                             u1441 0ABC  
                           u1361 08CC                             u1281 0786  
                           u2161 0EFC                             u2090 1CA2  
                           u1530 0D50                             u1450 206A  
                           u1610 1A1E                             u1370 0936  
                           u1290 07A4                             u2170 0F98  
                           u2091 1C9E                             u1531 0D4C  
                           u1451 2066                             u1611 1A1A  
                           u2227 1DA4                             u1371 0932  
                           u1291 07A0                             u2171 0F94  
                           u1540 0D62                             u1460 0AF6  
                           u1700 16AA                             u1620 1A34  
                           u1380 094E                             u1541 0D5E  
                           u1461 0AF2                             u1701 16A6  
                           u1621 1A30                             u2237 1DB6  
                           u1381 094A                             u1550 0D82  
                           u1470 0B0C                             u1710 16C6  
                           u1390 0964                             u1630 18FA  
                           u1551 0D7E                             u1471 0B08  
                           u1711 16C2                             u2247 1DC8  
                           u1391 0960                             u1631 18F6  
                           u1560 0D96                             u1480 0B1E  
                           u1720 1710                             u1800 1288  
                           u1640 1914                             u1561 0D92  
                           u1481 0B1A                             u1721 170C  
                           u2257 1DDA                             u1801 1284  
                           u1641 1910                             u1570 0DA8  
                           u1490 0B3E                             u1730 1726  
                           u1810 12C6                             u1650 192E  
                           u1571 0DA4                             u1491 0B3A  
                           u2267 1E3E                             u1731 1722  
                           u1811 12C2                             u1651 192A  
                           u2187 0FE6                             u1580 0DC8  
                           u1900 142A                             u1740 173E  
                           u1820 1338                             u1660 194C  
                           u2277 1D3C                             u1581 0DC4  
                           u1901 1426                             u1741 173A  
                           u1821 1334                             u1661 1948  
                           u2197 0FF8                             u1910 1454  
                           u1750 176E                             u1590 19B6  
                           u1830 137E                             u1670 1962  
                           u2287 1D6A                             u1911 1450  
                           u1751 176A                             u1591 19B2  
                           u1831 137A                             u1671 195E  
                           u1920 1486                             u1840 1394  
                           u1680 1986                             u1760 17EA  
                           u1921 1482                             u1841 1390  
                           u1681 1982                             u1761 17E6  
                           u1930 14AC                             u1690 1AE2  
                           u1850 13AC                             u1770 1830  
                           u1931 14A8                             u1851 13A8  
                           u1771 182C                             u1940 14DE  
                           u1860 13DC                             u1780 123C  
                           u1941 14DA                             u1861 13D8  
                           u1781 1238                             u1870 1BE0  
                           u1950 1508                             u1790 1258  
                           u1871 1BDC                             u1951 1504  
                           u1791 1254                             u1880 1C34  
                           u1960 153A                             u1881 1C30  
                           u1961 1536                             u1890 13F8  
                           u1970 1582                             u1891 13F4  
                           u1971 157E                             u1980 159E  
                           u1981 159A                             u1990 15DE  
                           u1991 15DA                             _RCIF 007CF5  
                           _TMR1 000FCE                 ??_initialisation 00B6  
                           _main 0DCA                             _rand 1EAE  
                           fsr0h 000FEA                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                  ?_lcd_putMessage 00B9  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                     ?_menuAccueil 00B4  
                ??_lcd_ecritChar 00B7                            ?_main 00B4  
                          ?_rand 00C0                  __end_of___awmod 1998  
                          _ANSEL 000F7E                            _RCREG 000FAE  
                          _SPBRG 000FAF                            _PORTD 000F83  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISD 000F95                            _TXREG 000FAD  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                __end_of_deplace 1564              ___lmul@multiplicand 00B8  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                ??_lcd_initCGRam 00B7                            _gagne 1564  
                          _randx 00F6                            _srand 20F8  
                          tablat 000FF5                            status 000FD8  
          __size_of_afficheGagne 006A         __end_of_lcd_cacheCurseur 211E  
                 __CFG_HFOFST$ON 000000                ??_afficheTabMines 00C2  
                 __CFG_PBADEN$ON 000000                 _metToucheCombien 121E  
                __initialization 1E50                     __end_of_main 100A  
                   __end_of_rand 1F04              enleveTuilesAutour@i 00C7  
            enleveTuilesAutour@j 00C6              enleveTuilesAutour@x 00C3  
            enleveTuilesAutour@y 00BA             lcd_putMessage@chaine 00B9  
     calculToucheCombien@colonne 00BC                           ??_main 00EC  
                         ??_rand 00C2                    main@finPartie 00F1  
                  __activetblptr 000003                     _afficheGagne 1DE6  
                         ?_gagne 00C4                           _ADCON1 000FC1  
                         _ADRESH 000FC4                           ?_srand 00B4  
                         _ANSELH 000F7F                      initTabVue@i 00B6  
                    initTabVue@j 00B7                      initTabVue@k 00B8  
                 __CFG_WDTEN$OFF 000000                     ?_rempliMines 00C8  
                         _SPBRGH 000FB0                   __CFG_XINST$OFF 000000  
                 lcd_initCGRam@i 00B9                   lcd_initCGRam@j 00BA  
                 getAnalog@canal 00B5                 __end_of_lcd_busy 1F9A  
               __end_of_lcd_init 2096                           ___lmul 1CA4  
                         ___wmul 2096                   __CFG_STVREN$ON 000000  
                      ??___awmod 00C6                           _demine 100A  
                         gagne@i 00CB                           gagne@j 00CC  
                         clear_0 1E96                           clear_1 1EA2  
                ___awmod@divisor 00C4                        ??_deplace 00BD  
                ___awmod@counter 00C6                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                           srand@x 00B4  
         __size_of_afficheTabVue 006E                _lcd_resetSequence 1D7C  
                     __accesstop 0060          __end_of__initialization 1EA8  
            _lcd_strobeEnableBit 212E               ?_lcd_resetSequence 00B4  
                  ___rparam_used 000000              _lcd_effaceAffichage 2108  
                   __pidataBANK0 213C                     __pidataBANK1 1F9A  
            ??_lcd_resetSequence 00B6                    __end_of_gagne 1692  
                  __end_of_srand 2108             __size_of_menuAccueil 0086  
           ?_lcd_strobeEnableBit 00B4               __size_of_getAnalog 002C  
              _lcd_montreCurseur 211E               ?_lcd_montreCurseur 00B4  
           ?_lcd_effaceAffichage 00B4               __size_of_lcd_wrCom 006C  
                        ??_gagne 00C6        __end_of_lcd_resetSequence 1DE6  
                        ??_srand 00B6         __size_of_lcd_lireDonnees 0006  
              _lcd_ecrireDonnees 20DC                       __pbssBANK0 0060  
                     __pbssBANK1 0100                 ??_lcd_putMessage 00BC  
            ??_lcd_montreCurseur 00B7               ?_lcd_ecrireDonnees 00B4  
       __size_of_lcd_curseurHome 0008              ??_lcd_ecrireDonnees 00B4  
                        ?___lmul 00B4                          ?___wmul 00B4  
                        ?_demine 00C8                    _afficheTabVue 1BC8  
      __end_of_lcd_montreCurseur 2126                   ___lmul@product 00BC  
    __size_of_enleveTuilesAutour 0300            ??_lcd_strobeEnableBit 00B4  
             __size_of_videMines 0096     __size_of_calculToucheCombien 048E  
       __end_of_metToucheCombien 13DE                       _lcd_gotoXY 1B56  
          ??_lcd_effaceAffichage 00B7                       _lcd_wrData 200E  
                _afficheTabMines 1C36        __end_of_lcd_ecrireDonnees 20F8  
                      ?_lcd_busy 00B4                        ?_lcd_init 00B4  
        lcd_ecrireDonnees@donnee 00B5      metToucheCombien@minesTouche 00C7  
                     _m_tabMines 0060                __end_of_getAnalog 206E  
              ?_lcd_cacheCurseur 00B4             __size_of_rempliMines 00C2  
                        __Hparam 0000                          __Lparam 0000  
             ??_lcd_cacheCurseur 00B7                       _initTabVue 1692  
              __end_of_lcd_wrCom 1D7C                   ?_afficheTabVue 00B4  
                __size_of___lmul 006C                          ___awmod 18E6  
                __size_of___wmul 0028                  __size_of_demine 0214  
                   __psmallconst 0600                          __pcinit 1E50  
                     _init_serie 20BE                        _ANSELbits 000F7E  
                        __ramtop 0600                          _deplace 13DE  
                        __ptext0 0DCA                          __ptext1 1770  
                        __ptext2 1A3A                          __ptext3 1EAE  
                        __ptext4 1CA4                          __ptext5 18E6  
                        __ptext6 121E                          __ptext7 063C  
                        __ptext8 1AD0                          __ptext9 2116  
          __end_of_lcd_ecritChar 1F58                  lcd_busy@adresse 00B5  
                      _T1CONbits 000FCD                 ___awmod@dividend 00C2  
                        demine@x 00D1                          demine@y 00C8  
               lcd_ecritChar@car 00B7                       ??_lcd_busy 00B4  
                     ??_lcd_init 00BB       __size_of_lcd_resetSequence 006A  
           end_of_initialization 1EA8            __end_of_lcd_initCGRam 1A3A  
              __end_of_videMines 1AD0  calculToucheCombien@nombreTouche 00C3  
              ??_lcd_lireDonnees 00B4                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
        __size_of_initialisation 0034                ??_lcd_curseurHome 00B7  
            lcd_ecritChar@posRam 00B8       __size_of_lcd_montreCurseur 0008  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
        __end_of_afficheTabMines 1CA4                      ?_lcd_gotoXY 00B7  
                      _TRISCbits 000F94                      ?_lcd_wrData 00B4  
     __size_of_lcd_ecrireDonnees 001C                        _TXSTAbits 000FAC  
                ??_afficheTabVue 00C2                      ?_initTabVue 00B4  
                 __end_of___lmul 1D10                   __end_of___wmul 20BE  
                    _BAUDCONbits 000FB8                      ?_init_serie 00B4  
                 __end_of_demine 121E              start_initialization 1E50  
            _calculToucheCombien 063C                    ??_menuAccueil 00C2  
            __size_of_lcd_gotoXY 0072                         ??___lmul 00BC  
                       ??___wmul 00B8                    rempliMines@nb 00C8  
            __size_of_lcd_wrData 0034                         ??_demine 00C9  
                    __pdataBANK0 00F6                      __pdataBANK1 0154  
               __CFG_LPT1OSC$OFF 000000             ?_calculToucheCombien 00BA  
               ?_afficheTabMines 00B4                    __pcstackBANK0 00B4  
              ?_metToucheCombien 00B4                 afficheTabMines@i 00C4  
            __size_of_initTabVue 00DE               ??_metToucheCombien 00C4  
           rempliMines@mineReste 00CD                __size_of_lcd_busy 0042  
              __size_of_lcd_init 0028              menuAccueil@menuMsgs 00C4  
            __size_of_init_serie 001E                __CFG_CCP2MX$PORTC 000000  
                      _getAnalog 2042      __end_of_lcd_strobeEnableBit 2136  
                 _initialisation 1FDA       __end_of_enleveTuilesAutour 0DCA  
                       ?___awmod 00C2                 menuAccueil@F2903 0601  
                       ?_deplace 00B9      __end_of_lcd_effaceAffichage 2116  
                      _lcd_wrCom 1D10            ??_calculToucheCombien 00BE  
      __size_of_lcd_cacheCurseur 0008              __end_of_menuAccueil 1B56  
                    __smallconst 0600        enleveTuilesAutour@xTabCol 00C4  
                  ?_afficheGagne 00B4                   __size_of_gagne 012E  
                _lcd_lireDonnees 2136              lcd_wrData@caractere 00B6  
                 __size_of_srand 0010                    ??_rempliMines 00CA  
                     videMines@i 00B6                       videMines@j 00B7  
                _lcd_curseurHome 2126                   ___wmul@product 00B8  
         __end_of_initialisation 200E                        _videMines 1A3A  
                     ?_getAnalog 00B4                 __CFG_WDTPS$32768 000000  
        __size_of_lcd_putMessage 00B4                       ?_lcd_wrCom 00B4  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
              ___wmul@multiplier 00B4                   ??_afficheGagne 00C2  
                   ??_lcd_gotoXY 00B8                     ??_lcd_wrData 00B6  
              lcd_wrCom@commande 00B6                ___lmul@multiplier 00B4  
                      copy_data0 1E64                        copy_data1 1E84  
                       __Hparam0 0000           __size_of_lcd_ecritChar 0054  
                       __Lparam0 0000                  ?_initialisation 00B4  
            __end_of_rempliMines 1832                       ?_videMines 00B4  
                   ??_initTabVue 00B4               __CFG_BOREN$SBORDIS 000000  
                   rempliMines@x 00CE                     rempliMines@y 00CF  
                    _menuAccueil 1AD0               __end_of_lcd_gotoXY 1BC8  
             __end_of_lcd_wrData 2042                 __size_of___awmod 00B2  
                   ??_init_serie 00B4           __size_of_lcd_initCGRam 00A2  
                lcd_putMessage@j 00C1                 __size_of_deplace 0186  
        __end_of_lcd_lireDonnees 213C                         _matCGRAM 0154  
        __end_of_lcd_curseurHome 212E                         __ptext10 211E  
                       __ptext11 206E                         __ptext20 1DE6  
                       __ptext12 1D7C                         __ptext21 2108  
                       __ptext13 1998                         __ptext30 1F04  
                       __ptext22 13DE                         __ptext14 2126  
                       __ptext31 200E                         __ptext23 2042  
                       __ptext15 1FDA                         __ptext32 1B56  
                       __ptext24 100A                         __ptext16 20F8  
                       __ptext33 1D10                         __ptext25 0ACA  
                       __ptext17 20BE                         __ptext34 212E  
                       __ptext26 2096                         __ptext18 1692  
                       __ptext35 20DC                         __ptext27 1BC8  
                       __ptext19 1564                         __ptext36 1F58  
                       __ptext28 1C36                         __ptext37 2136  
                       __ptext29 1832                metToucheCombien@i 00C9  
              metToucheCombien@j 00CA                metToucheCombien@k 00C8  
                       _lcd_busy 1F58                         _lcd_init 206E  
             __end_of_initTabVue 1770         calculToucheCombien@ligne 00BA  
                       _m_tabVue 0100                    __size_of_main 0240  
                  __size_of_rand 0056                      gagne@pMines 00C4  
             __end_of_init_serie 20DC                         deplace@x 00B9  
                       deplace@y 00BB                      ??_getAnalog 00B4  
          __end_of_afficheTabVue 1C36                         main@posX 00F5  
                       main@posY 00F4                      ??_lcd_wrCom 00B6  
               _lcd_cacheCurseur 2116                    _lcd_ecritChar 1F04  
             gagne@compteurBombe 00CA                   afficheTabVue@i 00C4  
                  _lcd_initCGRam 1998         __end_ofmenuAccueil@F2903 0629  
                    _rempliMines 1770        __size_of_metToucheCombien 01C0  
                    ??_videMines 00B4             __end_of_afficheGagne 1E50  
                 _lcd_putMessage 1832                   ?_lcd_ecritChar 00B4  
               ?_lcd_lireDonnees 00B4               _enleveTuilesAutour 0ACA  
               ?_lcd_curseurHome 00B4         __size_of_afficheTabMines 006E  
    enleveTuilesAutour@yTabLigne 00C5                   ?_lcd_initCGRam 00B4  
            ?_enleveTuilesAutour 00BA                __CFG_FOSC$INTIO67 000000  
         __end_of_lcd_putMessage 18E6  
