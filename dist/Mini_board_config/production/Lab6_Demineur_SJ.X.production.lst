

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 16:26:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,minocg
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,minocg
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,minocg
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,minocg
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K20 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  00234E                     __pidataBANK0:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _randx
    95  00234E  0001               	dw	1
    96  002350  0000               	dw	0
    97                           
    98                           	psect	idataBANK1
    99  0021AC                     __pidataBANK1:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for _matCGRAM
   103  0021AC  08                 	db	8
   104  0021AD  04                 	db	4
   105  0021AE  04                 	db	4
   106  0021AF  0A                 	db	10
   107  0021B0  11                 	db	17
   108  0021B1  1F                 	db	31
   109  0021B2  11                 	db	17
   110  0021B3  00                 	db	0
   111  0021B4  1F                 	db	31
   112  0021B5  1B                 	db	27
   113  0021B6  11                 	db	17
   114  0021B7  11                 	db	17
   115  0021B8  11                 	db	17
   116  0021B9  11                 	db	17
   117  0021BA  1B                 	db	27
   118  0021BB  1F                 	db	31
   119  0021BC  03                 	db	3
   120  0021BD  04                 	db	4
   121  0021BE  0A                 	db	10
   122  0021BF  15                 	db	21
   123  0021C0  1F                 	db	31
   124  0021C1  15                 	db	21
   125  0021C2  0A                 	db	10
   126  0021C3  00                 	db	0
   127  0021C4  1F                 	db	31
   128  0021C5  11                 	db	17
   129  0021C6  11                 	db	17
   130  0021C7  1F                 	db	31
   131  0021C8  10                 	db	16
   132  0021C9  10                 	db	16
   133  0021CA  10                 	db	16
   134  0021CB  10                 	db	16
   135  0021CC  11                 	db	17
   136  0021CD  11                 	db	17
   137  0021CE  15                 	db	21
   138  0021CF  15                 	db	21
   139  0021D0  0E                 	db	14
   140  0021D1  0A                 	db	10
   141  0021D2  15                 	db	21
   142  0021D3  00                 	db	0
   143  0021D4  11                 	db	17
   144  0021D5  0A                 	db	10
   145  0021D6  04                 	db	4
   146  0021D7  1B                 	db	27
   147  0021D8  11                 	db	17
   148  0021D9  1B                 	db	27
   149  0021DA  15                 	db	21
   150  0021DB  00                 	db	0
   151  0021DC  1B                 	db	27
   152  0021DD  0E                 	db	14
   153  0021DE  1B                 	db	27
   154  0021DF  1B                 	db	27
   155  0021E0  1B                 	db	27
   156  0021E1  11                 	db	17
   157  0021E2  11                 	db	17
   158  0021E3  00                 	db	0
   159  0021E4  0A                 	db	10
   160  0021E5  04                 	db	4
   161  0021E6  15                 	db	21
   162  0021E7  15                 	db	21
   163  0021E8  1B                 	db	27
   164  0021E9  0A                 	db	10
   165  0021EA  04                 	db	4
   166  0021EB  00                 	db	0
   167                           
   168                           	psect	smallconst
   169  000600                     __psmallconst:
   170                           	opt callstack 0
   171  000600  00                 	db	0
   172  000601                     menuAccueil@F2903:
   173                           	opt callstack 0
   174  000601  4C                 	db	76
   175  000602  61                 	db	97
   176  000603  62                 	db	98
   177  000604  6F                 	db	111
   178  000605  72                 	db	114
   179  000606  61                 	db	97
   180  000607  74                 	db	116
   181  000608  6F                 	db	111
   182  000609  69                 	db	105
   183  00060A  72                 	db	114
   184  00060B  65                 	db	101
   185  00060C  20                 	db	32
   186  00060D  36                 	db	54
   187  00060E  20                 	db	32
   188  00060F  00                 	db	0
   189  000610  00                 	db	0
   190  000611  00                 	db	0
   191  000612  00                 	db	0
   192  000613  00                 	db	0
   193  000614  00                 	db	0
   194  000615  53                 	db	83
   195  000616  69                 	db	105
   196  000617  6D                 	db	109
   197  000618  6F                 	db	111
   198  000619  6E                 	db	110
   199  00061A  20                 	db	32
   200  00061B  4A                 	db	74
   201  00061C  6F                 	db	111
   202  00061D  75                 	db	117
   203  00061E  72                 	db	114
   204  00061F  64                 	db	100
   205  000620  65                 	db	101
   206  000621  6E                 	db	110
   207  000622  61                 	db	97
   208  000623  69                 	db	105
   209  000624  73                 	db	115
   210  000625  00                 	db	0
   211  000626  00                 	db	0
   212  000627  00                 	db	0
   213  000628  00                 	db	0
   214  000629                     __end_ofmenuAccueil@F2903:
   215                           	opt callstack 0
   216  0000                     _TMR1	set	4046
   217  0000                     _PORTAbits	set	3968
   218  0000                     _PORTD	set	3971
   219  0000                     _RCREG	set	4014
   220  0000                     _TXREG	set	4013
   221  0000                     _RCSTAbits	set	4011
   222  0000                     _TXSTAbits	set	4012
   223  0000                     _BAUDCONbits	set	4024
   224  0000                     _SPBRG	set	4015
   225  0000                     _SPBRGH	set	4016
   226  0000                     _TRISCbits	set	3988
   227  0000                     _ADCON2bits	set	4032
   228  0000                     _ADCON1	set	4033
   229  0000                     _ANSELbits	set	3966
   230  0000                     _T1CONbits	set	4045
   231  0000                     _TRISA	set	3986
   232  0000                     _ANSEL	set	3966
   233  0000                     _TRISB	set	3987
   234  0000                     _ANSELH	set	3967
   235  0000                     _TRISD	set	3989
   236  0000                     _ADRESH	set	4036
   237  0000                     _ADCON0bits	set	4034
   238  0000                     _PORTBbits	set	3969
   239  0000                     _RCIF	set	31989
   240  000629                     STR_1:
   241  000629  59                 	db	89	;'Y'
   242  00062A  4F                 	db	79	;'O'
   243  00062B  55                 	db	85	;'U'
   244  00062C  20                 	db	32
   245  00062D  57                 	db	87	;'W'
   246  00062E  49                 	db	73	;'I'
   247  00062F  4E                 	db	78	;'N'
   248  000630  21                 	db	33
   249  000631  00                 	db	0
   250  000632                     STR_2:
   251  000632  2B                 	db	43
   252  000633  31                 	db	49	;'1'
   253  000634  20                 	db	32
   254  000635  4D                 	db	77	;'M'
   255  000636  69                 	db	105	;'i'
   256  000637  6E                 	db	110	;'n'
   257  000638  65                 	db	101	;'e'
   258  000639  00                 	db	0
   259                           
   260                           ; #config settings
   261  00063A  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  002062                     __pcinit:
   265                           	opt callstack 0
   266  002062                     start_initialization:
   267                           	opt callstack 0
   268  002062                     __initialization:
   269                           	opt callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK1 (64 bytes)
   272                           ; load TBLPTR registers with __pidataBANK1
   273  002062  0EAC               	movlw	low __pidataBANK1
   274  002064  6EF6               	movwf	tblptrl,c
   275  002066  0E21               	movlw	high __pidataBANK1
   276  002068  6EF7               	movwf	tblptrh,c
   277  00206A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   278  00206C  6EF8               	movwf	tblptru,c
   279  00206E  EE01  F054         	lfsr	0,__pdataBANK1
   280  002072  EE10 F040          	lfsr	1,64
   281  002076                     copy_data0:
   282  002076  0009               	tblrd		*+
   283  002078  CFF5 FFEE          	movff	tablat,postinc0
   284  00207C  50E5               	movf	postdec1,w,c
   285  00207E  50E1               	movf	fsr1l,w,c
   286  002080  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to BANK0 (4 bytes)
   289                           ; load TBLPTR registers with __pidataBANK0
   290  002082  0E4E               	movlw	low __pidataBANK0
   291  002084  6EF6               	movwf	tblptrl,c
   292  002086  0E23               	movlw	high __pidataBANK0
   293  002088  6EF7               	movwf	tblptrh,c
   294  00208A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   295  00208C  6EF8               	movwf	tblptru,c
   296  00208E  EE00  F0F6         	lfsr	0,__pdataBANK0
   297  002092  EE10 F004          	lfsr	1,4
   298  002096                     copy_data1:
   299  002096  0009               	tblrd		*+
   300  002098  CFF5 FFEE          	movff	tablat,postinc0
   301  00209C  50E5               	movf	postdec1,w,c
   302  00209E  50E1               	movf	fsr1l,w,c
   303  0020A0  E1FA               	bnz	copy_data1
   304                           
   305                           ; Clear objects allocated to BANK1 (84 bytes)
   306  0020A2  EE01  F000         	lfsr	0,__pbssBANK1
   307  0020A6  0E54               	movlw	84
   308  0020A8                     clear_0:
   309  0020A8  6AEE               	clrf	postinc0,c
   310  0020AA  06E8               	decf	wreg,f,c
   311  0020AC  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (84 bytes)
   314  0020AE  EE00  F060         	lfsr	0,__pbssBANK0
   315  0020B2  0E54               	movlw	84
   316  0020B4                     clear_1:
   317  0020B4  6AEE               	clrf	postinc0,c
   318  0020B6  06E8               	decf	wreg,f,c
   319  0020B8  E1FD               	bnz	clear_1
   320  0020BA                     end_of_initialization:
   321                           	opt callstack 0
   322  0020BA                     __end_of__initialization:
   323                           	opt callstack 0
   324  0020BA  0100               	movlb	0
   325  0020BC  EF8F  F009         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssBANK0
   328  000060                     __pbssBANK0:
   329                           	opt callstack 0
   330  000060                     _m_tabMines:
   331                           	opt callstack 0
   332  000060                     	ds	84
   333                           
   334                           	psect	dataBANK0
   335  0000F6                     __pdataBANK0:
   336                           	opt callstack 0
   337  0000F6                     _randx:
   338                           	opt callstack 0
   339  0000F6                     	ds	4
   340                           
   341                           	psect	bssBANK1
   342  000100                     __pbssBANK1:
   343                           	opt callstack 0
   344  000100                     _m_tabVue:
   345                           	opt callstack 0
   346  000100                     	ds	84
   347                           
   348                           	psect	dataBANK1
   349  000154                     __pdataBANK1:
   350                           	opt callstack 0
   351  000154                     _matCGRAM:
   352                           	opt callstack 0
   353  000154                     	ds	64
   354                           
   355                           	psect	cstackBANK0
   356  0000B4                     __pcstackBANK0:
   357                           	opt callstack 0
   358  0000B4                     ??_initTabVue:
   359  0000B4                     ??_getAnalog:
   360  0000B4                     ??_videMines:
   361  0000B4                     ??_lcd_ecrireDonnees:
   362  0000B4                     ??_lcd_busy:
   363  0000B4                     ?___wmul:
   364                           	opt callstack 0
   365  0000B4                     ?___lmul:
   366                           	opt callstack 0
   367  0000B4                     ___wmul@multiplier:
   368                           	opt callstack 0
   369  0000B4                     srand@x:
   370                           	opt callstack 0
   371  0000B4                     ___lmul@multiplier:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x0
   375  0000B4                     	ds	1
   376  0000B5                     getAnalog@canal:
   377                           	opt callstack 0
   378  0000B5                     lcd_ecrireDonnees@donnee:
   379                           	opt callstack 0
   380  0000B5                     lcd_busy@adresse:
   381                           	opt callstack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384  0000B5                     	ds	1
   385  0000B6                     ??_lcd_resetSequence:
   386  0000B6                     initTabVue@i:
   387                           	opt callstack 0
   388  0000B6                     videMines@i:
   389                           	opt callstack 0
   390  0000B6                     lcd_wrCom@commande:
   391                           	opt callstack 0
   392  0000B6                     lcd_wrData@caractere:
   393                           	opt callstack 0
   394  0000B6                     ___wmul@multiplicand:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  0000B6                     	ds	1
   399  0000B7                     ??_lcd_initCGRam:
   400  0000B7                     initTabVue@j:
   401                           	opt callstack 0
   402  0000B7                     videMines@j:
   403                           	opt callstack 0
   404  0000B7                     lcd_gotoXY@y:
   405                           	opt callstack 0
   406  0000B7                     lcd_ecritChar@car:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410  0000B7                     	ds	1
   411  0000B8                     initTabVue@k:
   412                           	opt callstack 0
   413  0000B8                     lcd_gotoXY@x:
   414                           	opt callstack 0
   415  0000B8                     lcd_ecritChar@posRam:
   416                           	opt callstack 0
   417  0000B8                     ___wmul@product:
   418                           	opt callstack 0
   419  0000B8                     ___lmul@multiplicand:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x4
   423  0000B8                     	ds	1
   424  0000B9                     lcd_initCGRam@i:
   425                           	opt callstack 0
   426  0000B9                     deplace@x:
   427                           	opt callstack 0
   428  0000B9                     lcd_putMessage@chaine:
   429                           	opt callstack 0
   430                           
   431                           ; 3 bytes @ 0x5
   432  0000B9                     	ds	1
   433  0000BA                     enleveTuilesAutour@y:
   434                           	opt callstack 0
   435  0000BA                     lcd_initCGRam@j:
   436                           	opt callstack 0
   437  0000BA                     calculToucheCombien@ligne:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x6
   441  0000BA                     	ds	1
   442  0000BB                     ??_enleveTuilesAutour:
   443  0000BB                     deplace@y:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x7
   447  0000BB                     	ds	1
   448  0000BC                     ??_lcd_putMessage:
   449  0000BC                     calculToucheCombien@colonne:
   450                           	opt callstack 0
   451  0000BC                     ___lmul@product:
   452                           	opt callstack 0
   453                           
   454                           ; 4 bytes @ 0x8
   455  0000BC                     	ds	1
   456  0000BD                     ??_deplace:
   457                           
   458                           ; 1 bytes @ 0x9
   459  0000BD                     	ds	1
   460  0000BE                     ??_calculToucheCombien:
   461                           
   462                           ; 1 bytes @ 0xA
   463  0000BE                     	ds	2
   464  0000C0                     ?_rand:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0xC
   468  0000C0                     	ds	1
   469  0000C1                     lcd_putMessage@j:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0xD
   473  0000C1                     	ds	1
   474  0000C2                     ??_menuAccueil:
   475  0000C2                     ??_afficheTabVue:
   476  0000C2                     ??_afficheTabMines:
   477  0000C2                     ??_afficheGagne:
   478  0000C2                     ?___awmod:
   479                           	opt callstack 0
   480  0000C2                     ___awmod@dividend:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0xE
   484  0000C2                     	ds	1
   485  0000C3                     calculToucheCombien@nombreTouche:
   486                           	opt callstack 0
   487  0000C3                     enleveTuilesAutour@x:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0xF
   491  0000C3                     	ds	1
   492  0000C4                     ??_metToucheCombien:
   493  0000C4                     afficheTabVue@i:
   494                           	opt callstack 0
   495  0000C4                     afficheTabMines@i:
   496                           	opt callstack 0
   497  0000C4                     enleveTuilesAutour@xTabCol:
   498                           	opt callstack 0
   499  0000C4                     gagne@pMines:
   500                           	opt callstack 0
   501  0000C4                     ___awmod@divisor:
   502                           	opt callstack 0
   503  0000C4                     menuAccueil@menuMsgs:
   504                           	opt callstack 0
   505                           
   506                           ; 40 bytes @ 0x10
   507  0000C4                     	ds	1
   508  0000C5                     enleveTuilesAutour@yTabLigne:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x11
   512  0000C5                     	ds	1
   513  0000C6                     ??_gagne:
   514  0000C6                     enleveTuilesAutour@j:
   515                           	opt callstack 0
   516  0000C6                     ___awmod@counter:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x12
   520  0000C6                     	ds	1
   521  0000C7                     metToucheCombien@minesTouche:
   522                           	opt callstack 0
   523  0000C7                     enleveTuilesAutour@i:
   524                           	opt callstack 0
   525  0000C7                     ___awmod@sign:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x13
   529  0000C7                     	ds	1
   530  0000C8                     metToucheCombien@k:
   531                           	opt callstack 0
   532  0000C8                     demine@y:
   533                           	opt callstack 0
   534  0000C8                     rempliMines@nb:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  0000C8                     	ds	1
   539  0000C9                     ??_demine:
   540  0000C9                     metToucheCombien@i:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x15
   544  0000C9                     	ds	1
   545  0000CA                     ??_rempliMines:
   546  0000CA                     metToucheCombien@j:
   547                           	opt callstack 0
   548  0000CA                     gagne@compteurBombe:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0x16
   552  0000CA                     	ds	1
   553  0000CB                     gagne@resteTuiles:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x17
   557  0000CB                     	ds	1
   558  0000CC                     gagne@i:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x18
   562  0000CC                     	ds	1
   563  0000CD                     rempliMines@mineReste:
   564                           	opt callstack 0
   565  0000CD                     gagne@j:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0x19
   569  0000CD                     	ds	1
   570  0000CE                     rempliMines@x:
   571                           	opt callstack 0
   572                           
   573                           ; 1 bytes @ 0x1A
   574  0000CE                     	ds	1
   575  0000CF                     rempliMines@y:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0x1B
   579  0000CF                     	ds	2
   580  0000D1                     demine@x:
   581                           	opt callstack 0
   582                           
   583                           ; 1 bytes @ 0x1D
   584  0000D1                     	ds	27
   585  0000EC                     ??_main:
   586                           
   587                           ; 1 bytes @ 0x38
   588  0000EC                     	ds	5
   589  0000F1                     main@finPartie:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x3D
   593  0000F1                     	ds	1
   594  0000F2                     main@nbMines:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x3E
   598  0000F2                     	ds	2
   599  0000F4                     main@posY:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x40
   603  0000F4                     	ds	1
   604  0000F5                     main@posX:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x41
   608  0000F5                     	ds	1
   609                           
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 71 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  nbMines         2   62[BANK0 ] int 
   620 ;;  posX            1   65[BANK0 ] unsigned char 
   621 ;;  posY            1   64[BANK0 ] unsigned char 
   622 ;;  finPartie       1   61[BANK0 ] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   632 ;;      Params:         0       0       0       0       0       0       0
   633 ;;      Locals:         0       5       0       0       0       0       0
   634 ;;      Temps:          0       5       0       0       0       0       0
   635 ;;      Totals:         0      10       0       0       0       0       0
   636 ;;Total ram usage:       10 bytes
   637 ;; Hardware stack levels required when called:    7
   638 ;; This function calls:
   639 ;;		_afficheTabMines
   640 ;;		_afficheTabVue
   641 ;;		_demine
   642 ;;		_deplace
   643 ;;		_gagne
   644 ;;		_initTabVue
   645 ;;		_init_serie
   646 ;;		_initialisation
   647 ;;		_lcd_ecritChar
   648 ;;		_lcd_init
   649 ;;		_lcd_montreCurseur
   650 ;;		_menuAccueil
   651 ;;		_metToucheCombien
   652 ;;		_rempliMines
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text0
   659  00131E                     __ptext0:
   660                           	opt callstack 0
   661  00131E                     _main:
   662                           	opt callstack 24
   663  00131E                     
   664                           ;main.c: 74: unsigned char posY =4/2;
   665  00131E  0E02               	movlw	2
   666  001320  0100               	movlb	0	; force () banked
   667  001322  6FF4               	movwf	main@posY& (0+255),b
   668                           
   669                           ;main.c: 75: unsigned char posX =20/2;
   670  001324  0E0A               	movlw	10
   671  001326  0100               	movlb	0	; force () banked
   672  001328  6FF5               	movwf	main@posX& (0+255),b
   673                           
   674                           ;main.c: 76: int nbMines=1;
   675  00132A  0E00               	movlw	0
   676  00132C  0100               	movlb	0	; force () banked
   677  00132E  6FF3               	movwf	(main@nbMines+1)& (0+255),b
   678  001330  0E01               	movlw	1
   679  001332  6FF2               	movwf	main@nbMines& (0+255),b
   680                           
   681                           ;main.c: 77: bool finPartie=0;
   682  001334  0E00               	movlw	0
   683  001336  0100               	movlb	0	; force () banked
   684  001338  6FF1               	movwf	main@finPartie& (0+255),b
   685  00133A                     
   686                           ; BSR set to: 0
   687                           ;main.c: 80: initialisation();
   688  00133A  ECF6  F010         	call	_initialisation	;wreg free
   689  00133E                     
   690                           ;main.c: 81: init_serie();
   691  00133E  EC68  F011         	call	_init_serie	;wreg free
   692  001342                     
   693                           ;main.c: 82: lcd_init();
   694  001342  EC40  F011         	call	_lcd_init	;wreg free
   695  001346                     
   696                           ;main.c: 83: menuAccueil();
   697  001346  EC71  F00E         	call	_menuAccueil	;wreg free
   698  00134A                     
   699                           ;main.c: 85: initTabVue();
   700  00134A  EC52  F00C         	call	_initTabVue	;wreg free
   701  00134E                     
   702                           ;main.c: 86: rempliMines(nbMines);
   703  00134E  C0F2  F0C8         	movff	main@nbMines,rempliMines@nb
   704  001352  C0F3  F0C9         	movff	main@nbMines+1,rempliMines@nb+1
   705  001356  ECC1  F00C         	call	_rempliMines	;wreg free
   706  00135A                     
   707                           ;main.c: 87: metToucheCombien();
   708  00135A  ECAF  F00A         	call	_metToucheCombien	;wreg free
   709  00135E                     
   710                           ;main.c: 88: afficheTabVue();
   711  00135E  ECED  F00E         	call	_afficheTabVue	;wreg free
   712  001362                     
   713                           ;main.c: 89: lcd_montreCurseur();
   714  001362  EC98  F011         	call	_lcd_montreCurseur	;wreg free
   715  001366                     l2705:
   716                           
   717                           ;main.c: 91: {;main.c: 92: deplace(&posX,&posY);
   718  001366  0EF5               	movlw	low main@posX
   719  001368  0100               	movlb	0	; force () banked
   720  00136A  6FB9               	movwf	deplace@x& (0+255),b
   721  00136C  0E00               	movlw	high main@posX
   722  00136E  6FBA               	movwf	(deplace@x+1)& (0+255),b
   723  001370  0EF4               	movlw	low main@posY
   724  001372  0100               	movlb	0	; force () banked
   725  001374  6FBB               	movwf	deplace@y& (0+255),b
   726  001376  0E00               	movlw	high main@posY
   727  001378  6FBC               	movwf	(deplace@y+1)& (0+255),b
   728  00137A  EC8F  F00B         	call	_deplace	;wreg free
   729  00137E                     
   730                           ;main.c: 94: if(PORTBbits.RB1)
   731  00137E  A281               	btfss	129,1,c	;volatile
   732  001380  EFC4  F009         	goto	u2291
   733  001384  EFC6  F009         	goto	u2290
   734  001388                     u2291:
   735  001388  EFFD  F009         	goto	l88
   736  00138C                     u2290:
   737  00138C                     
   738                           ;main.c: 95: {;main.c: 96: finPartie=gagne(&nbMines);
   739  00138C  0EF2               	movlw	low main@nbMines
   740  00138E  0100               	movlb	0	; force () banked
   741  001390  6FC4               	movwf	gagne@pMines& (0+255),b
   742  001392  0E00               	movlw	high main@nbMines
   743  001394  6FC5               	movwf	(gagne@pMines+1)& (0+255),b
   744  001396  EC22  F007         	call	_gagne	;wreg free
   745  00139A  0100               	movlb	0	; force () banked
   746  00139C  6FF1               	movwf	main@finPartie& (0+255),b
   747  00139E                     
   748                           ; BSR set to: 0
   749                           ;main.c: 97: if((!demine(posX,posY))||(finPartie==1))
   750  00139E  C0F4  F0C8         	movff	main@posY,demine@y
   751  0013A2  0100               	movlb	0	; force () banked
   752  0013A4  51F5               	movf	main@posX& (0+255),w,b
   753  0013A6  EC5E  F008         	call	_demine
   754  0013AA  0900               	iorlw	0
   755  0013AC  B4D8               	btfsc	status,2,c
   756  0013AE  EFDB  F009         	goto	u2301
   757  0013B2  EFDD  F009         	goto	u2300
   758  0013B6                     u2301:
   759  0013B6  EFE6  F009         	goto	l2715
   760  0013BA                     u2300:
   761  0013BA  0100               	movlb	0	; force () banked
   762  0013BC  05F1               	decf	main@finPartie& (0+255),w,b
   763  0013BE  A4D8               	btfss	status,2,c
   764  0013C0  EFE4  F009         	goto	u2311
   765  0013C4  EFE6  F009         	goto	u2310
   766  0013C8                     u2311:
   767  0013C8  EFA2  F00A         	goto	l2735
   768  0013CC                     u2310:
   769  0013CC                     l2715:
   770                           
   771                           ;main.c: 98: {;main.c: 99: afficheTabMines();
   772  0013CC  EC24  F00F         	call	_afficheTabMines	;wreg free
   773  0013D0                     l92:
   774  0013D0  B281               	btfsc	129,1,c	;volatile
   775  0013D2  EFED  F009         	goto	u2321
   776  0013D6  EFEF  F009         	goto	u2320
   777  0013DA                     u2321:
   778  0013DA  EFE8  F009         	goto	l92
   779  0013DE                     u2320:
   780  0013DE                     
   781                           ;main.c: 101: initTabVue();
   782  0013DE  EC52  F00C         	call	_initTabVue	;wreg free
   783                           
   784                           ;main.c: 102: rempliMines(nbMines);
   785  0013E2  C0F2  F0C8         	movff	main@nbMines,rempliMines@nb
   786  0013E6  C0F3  F0C9         	movff	main@nbMines+1,rempliMines@nb+1
   787  0013EA  ECC1  F00C         	call	_rempliMines	;wreg free
   788                           
   789                           ;main.c: 103: metToucheCombien();
   790  0013EE  ECAF  F00A         	call	_metToucheCombien	;wreg free
   791  0013F2                     
   792                           ;main.c: 104: afficheTabVue();
   793  0013F2  ECED  F00E         	call	_afficheTabVue	;wreg free
   794  0013F6  EFA2  F00A         	goto	l2735
   795  0013FA                     l88:
   796                           
   797                           ;main.c: 107: else if(!PORTBbits.RB0)
   798  0013FA  B081               	btfsc	129,0,c	;volatile
   799  0013FC  EF02  F00A         	goto	u2331
   800  001400  EF04  F00A         	goto	u2330
   801  001404                     u2331:
   802  001404  EFA2  F00A         	goto	l2735
   803  001408                     u2330:
   804  001408                     
   805                           ;main.c: 108: {;main.c: 109: if(m_tabVue[posY-1][posX-1]==1)
   806  001408  0100               	movlb	0	; force () banked
   807  00140A  51F4               	movf	main@posY& (0+255),w,b
   808  00140C  0D15               	mullw	21
   809  00140E  0EEA               	movlw	234
   810  001410  0100               	movlb	0	; force () banked
   811  001412  6FEC               	movwf	??_main& (0+255),b
   812  001414  0EFF               	movlw	255
   813  001416  6FED               	movwf	(??_main+1)& (0+255),b
   814  001418  0E00               	movlw	low _m_tabVue
   815  00141A  6FEE               	movwf	(??_main+2)& (0+255),b
   816  00141C  0E01               	movlw	high _m_tabVue
   817  00141E  6FEF               	movwf	(??_main+3)& (0+255),b
   818  001420  51EC               	movf	??_main& (0+255),w,b
   819  001422  27EE               	addwf	(??_main+2)& (0+255),f,b
   820  001424  51ED               	movf	(??_main+1)& (0+255),w,b
   821  001426  23EF               	addwfc	(??_main+3)& (0+255),f,b
   822  001428  50F3               	movf	243,w,c
   823  00142A  27EE               	addwf	(??_main+2)& (0+255),f,b
   824  00142C  50F4               	movf	244,w,c
   825  00142E  23EF               	addwfc	(??_main+3)& (0+255),f,b
   826  001430  0100               	movlb	0	; force () banked
   827  001432  51F5               	movf	main@posX& (0+255),w,b
   828  001434  0100               	movlb	0	; force () banked
   829  001436  25EE               	addwf	(??_main+2)& (0+255),w,b
   830  001438  6ED9               	movwf	fsr2l,c
   831  00143A  0100               	movlb	0	; force () banked
   832  00143C  0E00               	movlw	0
   833  00143E  0100               	movlb	0	; force () banked
   834  001440  21EF               	addwfc	(??_main+3)& (0+255),w,b
   835  001442  6EDA               	movwf	fsr2h,c
   836  001444  04DE               	decf	postinc2,w,c
   837  001446  A4D8               	btfss	status,2,c
   838  001448  EF28  F00A         	goto	u2341
   839  00144C  EF2A  F00A         	goto	u2340
   840  001450                     u2341:
   841  001450  EF4F  F00A         	goto	l2727
   842  001454                     u2340:
   843  001454                     
   844                           ; BSR set to: 0
   845                           ;main.c: 110: {;main.c: 111: m_tabVue[posY-1][posX-1]=3;
   846  001454  0100               	movlb	0	; force () banked
   847  001456  51F4               	movf	main@posY& (0+255),w,b
   848  001458  0D15               	mullw	21
   849  00145A  0EEA               	movlw	234
   850  00145C  0100               	movlb	0	; force () banked
   851  00145E  6FEC               	movwf	??_main& (0+255),b
   852  001460  0EFF               	movlw	255
   853  001462  6FED               	movwf	(??_main+1)& (0+255),b
   854  001464  0E00               	movlw	low _m_tabVue
   855  001466  6FEE               	movwf	(??_main+2)& (0+255),b
   856  001468  0E01               	movlw	high _m_tabVue
   857  00146A  6FEF               	movwf	(??_main+3)& (0+255),b
   858  00146C  51EC               	movf	??_main& (0+255),w,b
   859  00146E  27EE               	addwf	(??_main+2)& (0+255),f,b
   860  001470  51ED               	movf	(??_main+1)& (0+255),w,b
   861  001472  23EF               	addwfc	(??_main+3)& (0+255),f,b
   862  001474  50F3               	movf	243,w,c
   863  001476  27EE               	addwf	(??_main+2)& (0+255),f,b
   864  001478  50F4               	movf	244,w,c
   865  00147A  23EF               	addwfc	(??_main+3)& (0+255),f,b
   866  00147C  0100               	movlb	0	; force () banked
   867  00147E  51F5               	movf	main@posX& (0+255),w,b
   868  001480  0100               	movlb	0	; force () banked
   869  001482  25EE               	addwf	(??_main+2)& (0+255),w,b
   870  001484  6ED9               	movwf	fsr2l,c
   871  001486  0100               	movlb	0	; force () banked
   872  001488  0E00               	movlw	0
   873  00148A  0100               	movlb	0	; force () banked
   874  00148C  21EF               	addwfc	(??_main+3)& (0+255),w,b
   875  00148E  6EDA               	movwf	fsr2h,c
   876  001490  0E03               	movlw	3
   877  001492  6EDF               	movwf	indf2,c
   878  001494                     
   879                           ; BSR set to: 0
   880                           ;main.c: 112: lcd_ecritChar(3);
   881  001494  0E03               	movlw	3
   882  001496  EC8B  F010         	call	_lcd_ecritChar
   883                           
   884                           ;main.c: 113: }
   885  00149A  EF99  F00A         	goto	l2733
   886  00149E                     l2727:
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 114: else if(m_tabVue[posY-1][posX-1]==3)
   890  00149E  0100               	movlb	0	; force () banked
   891  0014A0  51F4               	movf	main@posY& (0+255),w,b
   892  0014A2  0D15               	mullw	21
   893  0014A4  0EEA               	movlw	234
   894  0014A6  0100               	movlb	0	; force () banked
   895  0014A8  6FEC               	movwf	??_main& (0+255),b
   896  0014AA  0EFF               	movlw	255
   897  0014AC  6FED               	movwf	(??_main+1)& (0+255),b
   898  0014AE  0E00               	movlw	low _m_tabVue
   899  0014B0  6FEE               	movwf	(??_main+2)& (0+255),b
   900  0014B2  0E01               	movlw	high _m_tabVue
   901  0014B4  6FEF               	movwf	(??_main+3)& (0+255),b
   902  0014B6  51EC               	movf	??_main& (0+255),w,b
   903  0014B8  27EE               	addwf	(??_main+2)& (0+255),f,b
   904  0014BA  51ED               	movf	(??_main+1)& (0+255),w,b
   905  0014BC  23EF               	addwfc	(??_main+3)& (0+255),f,b
   906  0014BE  50F3               	movf	243,w,c
   907  0014C0  27EE               	addwf	(??_main+2)& (0+255),f,b
   908  0014C2  50F4               	movf	244,w,c
   909  0014C4  23EF               	addwfc	(??_main+3)& (0+255),f,b
   910  0014C6  0100               	movlb	0	; force () banked
   911  0014C8  51F5               	movf	main@posX& (0+255),w,b
   912  0014CA  0100               	movlb	0	; force () banked
   913  0014CC  25EE               	addwf	(??_main+2)& (0+255),w,b
   914  0014CE  6ED9               	movwf	fsr2l,c
   915  0014D0  0100               	movlb	0	; force () banked
   916  0014D2  0E00               	movlw	0
   917  0014D4  0100               	movlb	0	; force () banked
   918  0014D6  21EF               	addwfc	(??_main+3)& (0+255),w,b
   919  0014D8  6EDA               	movwf	fsr2h,c
   920  0014DA  0E03               	movlw	3
   921  0014DC  18DE               	xorwf	postinc2,w,c
   922  0014DE  A4D8               	btfss	status,2,c
   923  0014E0  EF74  F00A         	goto	u2351
   924  0014E4  EF76  F00A         	goto	u2350
   925  0014E8                     u2351:
   926  0014E8  EF99  F00A         	goto	l2733
   927  0014EC                     u2350:
   928  0014EC                     
   929                           ; BSR set to: 0
   930                           ;main.c: 115: {;main.c: 116: m_tabVue[posY-1][posX-1]=1;
   931  0014EC  0100               	movlb	0	; force () banked
   932  0014EE  51F4               	movf	main@posY& (0+255),w,b
   933  0014F0  0D15               	mullw	21
   934  0014F2  0EEA               	movlw	234
   935  0014F4  0100               	movlb	0	; force () banked
   936  0014F6  6FEC               	movwf	??_main& (0+255),b
   937  0014F8  0EFF               	movlw	255
   938  0014FA  6FED               	movwf	(??_main+1)& (0+255),b
   939  0014FC  0E00               	movlw	low _m_tabVue
   940  0014FE  6FEE               	movwf	(??_main+2)& (0+255),b
   941  001500  0E01               	movlw	high _m_tabVue
   942  001502  6FEF               	movwf	(??_main+3)& (0+255),b
   943  001504  51EC               	movf	??_main& (0+255),w,b
   944  001506  27EE               	addwf	(??_main+2)& (0+255),f,b
   945  001508  51ED               	movf	(??_main+1)& (0+255),w,b
   946  00150A  23EF               	addwfc	(??_main+3)& (0+255),f,b
   947  00150C  50F3               	movf	243,w,c
   948  00150E  27EE               	addwf	(??_main+2)& (0+255),f,b
   949  001510  50F4               	movf	244,w,c
   950  001512  23EF               	addwfc	(??_main+3)& (0+255),f,b
   951  001514  0100               	movlb	0	; force () banked
   952  001516  51F5               	movf	main@posX& (0+255),w,b
   953  001518  0100               	movlb	0	; force () banked
   954  00151A  25EE               	addwf	(??_main+2)& (0+255),w,b
   955  00151C  6ED9               	movwf	fsr2l,c
   956  00151E  0100               	movlb	0	; force () banked
   957  001520  0E00               	movlw	0
   958  001522  0100               	movlb	0	; force () banked
   959  001524  21EF               	addwfc	(??_main+3)& (0+255),w,b
   960  001526  6EDA               	movwf	fsr2h,c
   961  001528  0E01               	movlw	1
   962  00152A  6EDF               	movwf	indf2,c
   963  00152C                     
   964                           ; BSR set to: 0
   965                           ;main.c: 117: lcd_ecritChar(1);
   966  00152C  0E01               	movlw	1
   967  00152E  EC8B  F010         	call	_lcd_ecritChar
   968  001532                     l2733:
   969                           
   970                           ;main.c: 118: };main.c: 119: _delay((unsigned long)((25)*(1000000/4000.0)));
   971  001532  0E09               	movlw	9
   972  001534  0100               	movlb	0	; force () banked
   973  001536  6FEC               	movwf	??_main& (0+255),b
   974  001538  0E1C               	movlw	28
   975  00153A                     u2367:
   976  00153A  2EE8               	decfsz	wreg,f,c
   977  00153C  D7FE               	bra	u2367
   978  00153E  2FEC               	decfsz	??_main& (0+255),f,b
   979  001540  D7FC               	bra	u2367
   980  001542  F000               	nop	
   981  001544                     l2735:
   982                           
   983                           ;main.c: 120: };main.c: 121: _delay((unsigned long)((100)*(1000000/4000.0)));
   984  001544  0E21               	movlw	33
   985  001546  0100               	movlb	0	; force () banked
   986  001548  6FEC               	movwf	??_main& (0+255),b
   987  00154A  0E76               	movlw	118
   988  00154C                     u2377:
   989  00154C  2EE8               	decfsz	wreg,f,c
   990  00154E  D7FE               	bra	u2377
   991  001550  2FEC               	decfsz	??_main& (0+255),f,b
   992  001552  D7FC               	bra	u2377
   993  001554  F000               	nop	
   994  001556  EFB3  F009         	goto	l2705
   995  00155A  EF00  F000         	goto	start
   996  00155E                     __end_of_main:
   997                           	opt callstack 0
   998                           
   999 ;; *************** function _rempliMines *****************
  1000 ;; Defined at:
  1001 ;;		line 216 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  nb              2   20[BANK0 ] int 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  y               1   27[BANK0 ] unsigned char 
  1006 ;;  x               1   26[BANK0 ] unsigned char 
  1007 ;;  mineReste       1   25[BANK0 ] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1017 ;;      Params:         0       2       0       0       0       0       0
  1018 ;;      Locals:         0       3       0       0       0       0       0
  1019 ;;      Temps:          0       3       0       0       0       0       0
  1020 ;;      Totals:         0       8       0       0       0       0       0
  1021 ;;Total ram usage:        8 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		___awmod
  1026 ;;		_rand
  1027 ;;		_videMines
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text1
  1034  001982                     __ptext1:
  1035                           	opt callstack 0
  1036  001982                     _rempliMines:
  1037                           	opt callstack 28
  1038  001982                     
  1039                           ;main.c: 218: unsigned char x,y;;main.c: 219: char mineReste=nb;
  1040  001982  C0C8  F0CD         	movff	rempliMines@nb,rempliMines@mineReste
  1041  001986                     
  1042                           ;main.c: 221: videMines();
  1043  001986  EC26  F00E         	call	_videMines	;wreg free
  1044                           
  1045                           ;main.c: 223: while(mineReste!=0)
  1046  00198A  EF18  F00D         	goto	l2487
  1047  00198E                     l2479:
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 224: {;main.c: 225: x=rand()%4;
  1051  00198E  EC60  F010         	call	_rand	;wreg free
  1052  001992  0100               	movlb	0	; force () banked
  1053  001994  51C0               	movf	?_rand& (0+255),w,b
  1054  001996  0B03               	andlw	3
  1055  001998  0100               	movlb	0	; force () banked
  1056  00199A  6FCE               	movwf	rempliMines@x& (0+255),b
  1057                           
  1058                           ;main.c: 226: y=rand()%20;
  1059  00199C  EC60  F010         	call	_rand	;wreg free
  1060  0019A0  C0C0  F0C2         	movff	?_rand,___awmod@dividend
  1061  0019A4  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
  1062  0019A8  0E00               	movlw	0
  1063  0019AA  0100               	movlb	0	; force () banked
  1064  0019AC  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
  1065  0019AE  0E14               	movlw	20
  1066  0019B0  6FC4               	movwf	___awmod@divisor& (0+255),b
  1067  0019B2  EC7C  F00D         	call	___awmod	;wreg free
  1068  0019B6  0100               	movlb	0	; force () banked
  1069  0019B8  51C2               	movf	?___awmod& (0+255),w,b
  1070  0019BA  0100               	movlb	0	; force () banked
  1071  0019BC  6FCF               	movwf	rempliMines@y& (0+255),b
  1072  0019BE                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 227: if(m_tabMines[x][y]!=2)
  1075  0019BE  0100               	movlb	0	; force () banked
  1076  0019C0  51CE               	movf	rempliMines@x& (0+255),w,b
  1077  0019C2  0D15               	mullw	21
  1078  0019C4  0E60               	movlw	low _m_tabMines
  1079  0019C6  0100               	movlb	0	; force () banked
  1080  0019C8  6FCA               	movwf	??_rempliMines& (0+255),b
  1081  0019CA  0E00               	movlw	high _m_tabMines
  1082  0019CC  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1083  0019CE  50F3               	movf	243,w,c
  1084  0019D0  27CA               	addwf	??_rempliMines& (0+255),f,b
  1085  0019D2  50F4               	movf	244,w,c
  1086  0019D4  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1087  0019D6  0100               	movlb	0	; force () banked
  1088  0019D8  51CF               	movf	rempliMines@y& (0+255),w,b
  1089  0019DA  0100               	movlb	0	; force () banked
  1090  0019DC  25CA               	addwf	??_rempliMines& (0+255),w,b
  1091  0019DE  6ED9               	movwf	fsr2l,c
  1092  0019E0  0100               	movlb	0	; force () banked
  1093  0019E2  0E00               	movlw	0
  1094  0019E4  0100               	movlb	0	; force () banked
  1095  0019E6  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1096  0019E8  6EDA               	movwf	fsr2h,c
  1097  0019EA  0E02               	movlw	2
  1098  0019EC  18DE               	xorwf	postinc2,w,c
  1099  0019EE  B4D8               	btfsc	status,2,c
  1100  0019F0  EFFC  F00C         	goto	u1861
  1101  0019F4  EFFE  F00C         	goto	u1860
  1102  0019F8                     u1861:
  1103  0019F8  EF18  F00D         	goto	l2487
  1104  0019FC                     u1860:
  1105  0019FC                     
  1106                           ; BSR set to: 0
  1107                           ;main.c: 228: {;main.c: 229: m_tabMines[x][y]=2;
  1108  0019FC  0100               	movlb	0	; force () banked
  1109  0019FE  51CE               	movf	rempliMines@x& (0+255),w,b
  1110  001A00  0D15               	mullw	21
  1111  001A02  0E60               	movlw	low _m_tabMines
  1112  001A04  0100               	movlb	0	; force () banked
  1113  001A06  6FCA               	movwf	??_rempliMines& (0+255),b
  1114  001A08  0E00               	movlw	high _m_tabMines
  1115  001A0A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1116  001A0C  50F3               	movf	243,w,c
  1117  001A0E  27CA               	addwf	??_rempliMines& (0+255),f,b
  1118  001A10  50F4               	movf	244,w,c
  1119  001A12  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1120  001A14  0100               	movlb	0	; force () banked
  1121  001A16  51CF               	movf	rempliMines@y& (0+255),w,b
  1122  001A18  0100               	movlb	0	; force () banked
  1123  001A1A  25CA               	addwf	??_rempliMines& (0+255),w,b
  1124  001A1C  6ED9               	movwf	fsr2l,c
  1125  001A1E  0100               	movlb	0	; force () banked
  1126  001A20  0E00               	movlw	0
  1127  001A22  0100               	movlb	0	; force () banked
  1128  001A24  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1129  001A26  6EDA               	movwf	fsr2h,c
  1130  001A28  0E02               	movlw	2
  1131  001A2A  6EDF               	movwf	indf2,c
  1132  001A2C                     
  1133                           ; BSR set to: 0
  1134                           ;main.c: 230: mineReste--;
  1135  001A2C  0100               	movlb	0	; force () banked
  1136  001A2E  07CD               	decf	rempliMines@mineReste& (0+255),f,b
  1137  001A30                     l2487:
  1138  001A30  0100               	movlb	0	; force () banked
  1139  001A32  51CD               	movf	rempliMines@mineReste& (0+255),w,b
  1140  001A34  A4D8               	btfss	status,2,c
  1141  001A36  EF1F  F00D         	goto	u1871
  1142  001A3A  EF21  F00D         	goto	u1870
  1143  001A3E                     u1871:
  1144  001A3E  EFC7  F00C         	goto	l2479
  1145  001A42                     u1870:
  1146  001A42                     
  1147                           ; BSR set to: 0
  1148  001A42  0012               	return		;funcret
  1149  001A44                     __end_of_rempliMines:
  1150                           	opt callstack 0
  1151                           
  1152 ;; *************** function _videMines *****************
  1153 ;; Defined at:
  1154 ;;		line 199 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  j               1    3[BANK0 ] unsigned char 
  1159 ;;  i               1    2[BANK0 ] unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         0       0       0       0       0       0       0
  1170 ;;      Locals:         0       2       0       0       0       0       0
  1171 ;;      Temps:          0       2       0       0       0       0       0
  1172 ;;      Totals:         0       4       0       0       0       0       0
  1173 ;;Total ram usage:        4 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_rempliMines
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text2
  1183  001C4C                     __ptext2:
  1184                           	opt callstack 0
  1185  001C4C                     _videMines:
  1186                           	opt callstack 29
  1187  001C4C                     
  1188                           ;main.c: 201: for(unsigned char i=0;i<4;i++)
  1189  001C4C  0E00               	movlw	0
  1190  001C4E  0100               	movlb	0	; force () banked
  1191  001C50  6FB6               	movwf	videMines@i& (0+255),b
  1192  001C52                     
  1193                           ; BSR set to: 0
  1194  001C52  0E03               	movlw	3
  1195  001C54  0100               	movlb	0	; force () banked
  1196  001C56  65B6               	cpfsgt	videMines@i& (0+255),b
  1197  001C58  EF30  F00E         	goto	u1291
  1198  001C5C  EF32  F00E         	goto	u1290
  1199  001C60                     u1291:
  1200  001C60  EF34  F00E         	goto	l2125
  1201  001C64                     u1290:
  1202  001C64  EF70  F00E         	goto	l133
  1203  001C68                     l2125:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 202: {;main.c: 203: for(unsigned char j=0;j<20;j++)
  1207  001C68  0E00               	movlw	0
  1208  001C6A  0100               	movlb	0	; force () banked
  1209  001C6C  6FB7               	movwf	videMines@j& (0+255),b
  1210  001C6E                     
  1211                           ; BSR set to: 0
  1212  001C6E  0E13               	movlw	19
  1213  001C70  0100               	movlb	0	; force () banked
  1214  001C72  65B7               	cpfsgt	videMines@j& (0+255),b
  1215  001C74  EF3E  F00E         	goto	u1301
  1216  001C78  EF40  F00E         	goto	u1300
  1217  001C7C                     u1301:
  1218  001C7C  EF42  F00E         	goto	l2131
  1219  001C80                     u1300:
  1220  001C80  EF65  F00E         	goto	l2137
  1221  001C84                     l2131:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 204: {;main.c: 205: m_tabMines[i][j]=' ';
  1225  001C84  0100               	movlb	0	; force () banked
  1226  001C86  51B6               	movf	videMines@i& (0+255),w,b
  1227  001C88  0D15               	mullw	21
  1228  001C8A  0E60               	movlw	low _m_tabMines
  1229  001C8C  0100               	movlb	0	; force () banked
  1230  001C8E  6FB4               	movwf	??_videMines& (0+255),b
  1231  001C90  0E00               	movlw	high _m_tabMines
  1232  001C92  6FB5               	movwf	(??_videMines+1)& (0+255),b
  1233  001C94  50F3               	movf	243,w,c
  1234  001C96  27B4               	addwf	??_videMines& (0+255),f,b
  1235  001C98  50F4               	movf	244,w,c
  1236  001C9A  23B5               	addwfc	(??_videMines+1)& (0+255),f,b
  1237  001C9C  0100               	movlb	0	; force () banked
  1238  001C9E  51B7               	movf	videMines@j& (0+255),w,b
  1239  001CA0  0100               	movlb	0	; force () banked
  1240  001CA2  25B4               	addwf	??_videMines& (0+255),w,b
  1241  001CA4  6ED9               	movwf	fsr2l,c
  1242  001CA6  0100               	movlb	0	; force () banked
  1243  001CA8  0E00               	movlw	0
  1244  001CAA  0100               	movlb	0	; force () banked
  1245  001CAC  21B5               	addwfc	(??_videMines+1)& (0+255),w,b
  1246  001CAE  6EDA               	movwf	fsr2h,c
  1247  001CB0  0E20               	movlw	32
  1248  001CB2  6EDF               	movwf	indf2,c
  1249  001CB4                     
  1250                           ; BSR set to: 0
  1251  001CB4  0100               	movlb	0	; force () banked
  1252  001CB6  2BB7               	incf	videMines@j& (0+255),f,b
  1253  001CB8                     
  1254                           ; BSR set to: 0
  1255  001CB8  0E13               	movlw	19
  1256  001CBA  0100               	movlb	0	; force () banked
  1257  001CBC  65B7               	cpfsgt	videMines@j& (0+255),b
  1258  001CBE  EF63  F00E         	goto	u1311
  1259  001CC2  EF65  F00E         	goto	u1310
  1260  001CC6                     u1311:
  1261  001CC6  EF42  F00E         	goto	l2131
  1262  001CCA                     u1310:
  1263  001CCA                     l2137:
  1264                           
  1265                           ; BSR set to: 0
  1266  001CCA  0100               	movlb	0	; force () banked
  1267  001CCC  2BB6               	incf	videMines@i& (0+255),f,b
  1268  001CCE                     
  1269                           ; BSR set to: 0
  1270  001CCE  0E03               	movlw	3
  1271  001CD0  0100               	movlb	0	; force () banked
  1272  001CD2  65B6               	cpfsgt	videMines@i& (0+255),b
  1273  001CD4  EF6E  F00E         	goto	u1321
  1274  001CD8  EF70  F00E         	goto	u1320
  1275  001CDC                     u1321:
  1276  001CDC  EF34  F00E         	goto	l2125
  1277  001CE0                     u1320:
  1278  001CE0                     l133:
  1279                           
  1280                           ; BSR set to: 0
  1281  001CE0  0012               	return		;funcret
  1282  001CE2                     __end_of_videMines:
  1283                           	opt callstack 0
  1284                           
  1285 ;; *************** function _rand *****************
  1286 ;; Defined at:
  1287 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   12[BANK0 ] int 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         0       2       0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0
  1304 ;;      Totals:         0       2       0       0       0       0       0
  1305 ;;Total ram usage:        2 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		___lmul
  1310 ;; This function is called by:
  1311 ;;		_rempliMines
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text3
  1316  0020C0                     __ptext3:
  1317                           	opt callstack 0
  1318  0020C0                     _rand:
  1319                           	opt callstack 28
  1320  0020C0  C0F6  F0B4         	movff	_randx,___lmul@multiplier
  1321  0020C4  C0F7  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1322  0020C8  C0F8  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1323  0020CC  C0F9  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1324  0020D0  0E6D               	movlw	109
  1325  0020D2  0100               	movlb	0	; () banked
  1326  0020D4  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1327  0020D6  0E4E               	movlw	78
  1328  0020D8  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1329  0020DA  0EC6               	movlw	198
  1330  0020DC  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1331  0020DE  0E41               	movlw	65
  1332  0020E0  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1333  0020E2  EC5B  F00F         	call	___lmul	;wreg free
  1334  0020E6  C0B4  F0F6         	movff	?___lmul,_randx
  1335  0020EA  C0B5  F0F7         	movff	?___lmul+1,_randx+1
  1336  0020EE  C0B6  F0F8         	movff	?___lmul+2,_randx+2
  1337  0020F2  C0B7  F0F9         	movff	?___lmul+3,_randx+3
  1338  0020F6  0E39               	movlw	57
  1339  0020F8  0100               	movlb	0	; () banked
  1340  0020FA  27F6               	addwf	_randx& (0+255),f,b
  1341  0020FC  0E30               	movlw	48
  1342  0020FE  23F7               	addwfc	(_randx+1)& (0+255),f,b
  1343  002100  0E00               	movlw	0
  1344  002102  23F8               	addwfc	(_randx+2)& (0+255),f,b
  1345  002104  0E00               	movlw	0
  1346  002106  23F9               	addwfc	(_randx+3)& (0+255),f,b
  1347  002108                     
  1348                           ; BSR set to: 0
  1349  002108  0EFF               	movlw	255
  1350  00210A  15F8               	andwf	(_randx+2)& (0+255),w,b
  1351  00210C  6FC0               	movwf	?_rand& (0+255),b
  1352  00210E  0E7F               	movlw	127
  1353  002110  15F9               	andwf	(_randx+3)& (0+255),w,b
  1354  002112  6FC1               	movwf	(?_rand+1)& (0+255),b
  1355  002114                     
  1356                           ; BSR set to: 0
  1357  002114  0012               	return		;funcret
  1358  002116                     __end_of_rand:
  1359                           	opt callstack 0
  1360                           
  1361 ;; *************** function ___lmul *****************
  1362 ;; Defined at:
  1363 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1366 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  product         4    8[BANK0 ] unsigned long 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  4    0[BANK0 ] unsigned long 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       8       0       0       0       0       0
  1379 ;;      Locals:         0       4       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0
  1381 ;;      Totals:         0      12       0       0       0       0       0
  1382 ;;Total ram usage:       12 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_rand
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text4
  1392  001EB6                     __ptext4:
  1393                           	opt callstack 0
  1394  001EB6                     ___lmul:
  1395                           	opt callstack 28
  1396  001EB6  0E00               	movlw	0
  1397  001EB8  0100               	movlb	0	; () banked
  1398  001EBA  6FBC               	movwf	___lmul@product& (0+255),b
  1399  001EBC  0E00               	movlw	0
  1400  001EBE  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1401  001EC0  0E00               	movlw	0
  1402  001EC2  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1403  001EC4  0E00               	movlw	0
  1404  001EC6  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1405  001EC8                     l2109:
  1406                           
  1407                           ; BSR set to: 0
  1408  001EC8  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1409  001ECA  EF69  F00F         	goto	u1271
  1410  001ECE  EF6B  F00F         	goto	u1270
  1411  001ED2                     u1271:
  1412  001ED2  EF73  F00F         	goto	l2113
  1413  001ED6                     u1270:
  1414  001ED6                     
  1415                           ; BSR set to: 0
  1416  001ED6  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1417  001ED8  27BC               	addwf	___lmul@product& (0+255),f,b
  1418  001EDA  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1419  001EDC  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1420  001EDE  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1421  001EE0  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1422  001EE2  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1423  001EE4  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1424  001EE6                     l2113:
  1425                           
  1426                           ; BSR set to: 0
  1427  001EE6  90D8               	bcf	status,0,c
  1428  001EE8  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1429  001EEA  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1430  001EEC  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1431  001EEE  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1432  001EF0                     
  1433                           ; BSR set to: 0
  1434  001EF0  90D8               	bcf	status,0,c
  1435  001EF2  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1436  001EF4  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1437  001EF6  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1438  001EF8  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1439  001EFA  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1440  001EFC  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1441  001EFE  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1442  001F00  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1443  001F02  A4D8               	btfss	status,2,c
  1444  001F04  EF86  F00F         	goto	u1281
  1445  001F08  EF88  F00F         	goto	u1280
  1446  001F0C                     u1281:
  1447  001F0C  EF64  F00F         	goto	l2109
  1448  001F10                     u1280:
  1449  001F10                     
  1450                           ; BSR set to: 0
  1451  001F10  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1452  001F14  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1453  001F18  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1454  001F1C  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1455  001F20                     
  1456                           ; BSR set to: 0
  1457  001F20  0012               	return		;funcret
  1458  001F22                     __end_of___lmul:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function ___awmod *****************
  1462 ;; Defined at:
  1463 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  dividend        2   14[BANK0 ] int 
  1466 ;;  divisor         2   16[BANK0 ] int 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  sign            1   19[BANK0 ] unsigned char 
  1469 ;;  counter         1   18[BANK0 ] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2   14[BANK0 ] int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1479 ;;      Params:         0       4       0       0       0       0       0
  1480 ;;      Locals:         0       2       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0
  1482 ;;      Totals:         0       6       0       0       0       0       0
  1483 ;;Total ram usage:        6 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_rempliMines
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text5
  1493  001AF8                     __ptext5:
  1494                           	opt callstack 0
  1495  001AF8                     ___awmod:
  1496                           	opt callstack 29
  1497  001AF8  0E00               	movlw	0
  1498  001AFA  0100               	movlb	0	; () banked
  1499  001AFC  6FC7               	movwf	___awmod@sign& (0+255),b
  1500  001AFE                     
  1501                           ; BSR set to: 0
  1502  001AFE  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1503  001B00  EF86  F00D         	goto	u1730
  1504  001B04  EF84  F00D         	goto	u1731
  1505  001B08                     u1731:
  1506  001B08  EF8C  F00D         	goto	l2355
  1507  001B0C                     u1730:
  1508  001B0C                     
  1509                           ; BSR set to: 0
  1510  001B0C  6DC2               	negf	___awmod@dividend& (0+255),b
  1511  001B0E  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1512  001B10  B0D8               	btfsc	status,0,c
  1513  001B12  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1514  001B14                     
  1515                           ; BSR set to: 0
  1516  001B14  0E01               	movlw	1
  1517  001B16  6FC7               	movwf	___awmod@sign& (0+255),b
  1518  001B18                     l2355:
  1519                           
  1520                           ; BSR set to: 0
  1521  001B18  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1522  001B1A  EF93  F00D         	goto	u1740
  1523  001B1E  EF91  F00D         	goto	u1741
  1524  001B22                     u1741:
  1525  001B22  EF97  F00D         	goto	l2359
  1526  001B26                     u1740:
  1527  001B26                     
  1528                           ; BSR set to: 0
  1529  001B26  6DC4               	negf	___awmod@divisor& (0+255),b
  1530  001B28  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1531  001B2A  B0D8               	btfsc	status,0,c
  1532  001B2C  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1533  001B2E                     l2359:
  1534                           
  1535                           ; BSR set to: 0
  1536  001B2E  51C4               	movf	___awmod@divisor& (0+255),w,b
  1537  001B30  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1538  001B32  B4D8               	btfsc	status,2,c
  1539  001B34  EF9E  F00D         	goto	u1751
  1540  001B38  EFA0  F00D         	goto	u1750
  1541  001B3C                     u1751:
  1542  001B3C  EFC4  F00D         	goto	l2375
  1543  001B40                     u1750:
  1544  001B40                     
  1545                           ; BSR set to: 0
  1546  001B40  0E01               	movlw	1
  1547  001B42  6FC6               	movwf	___awmod@counter& (0+255),b
  1548  001B44  EFA8  F00D         	goto	l2365
  1549  001B48                     l2363:
  1550                           
  1551                           ; BSR set to: 0
  1552  001B48  90D8               	bcf	status,0,c
  1553  001B4A  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1554  001B4C  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1555  001B4E  2BC6               	incf	___awmod@counter& (0+255),f,b
  1556  001B50                     l2365:
  1557                           
  1558                           ; BSR set to: 0
  1559  001B50  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1560  001B52  EFAD  F00D         	goto	u1761
  1561  001B56  EFAF  F00D         	goto	u1760
  1562  001B5A                     u1761:
  1563  001B5A  EFA4  F00D         	goto	l2363
  1564  001B5E                     u1760:
  1565  001B5E                     l2367:
  1566                           
  1567                           ; BSR set to: 0
  1568  001B5E  51C4               	movf	___awmod@divisor& (0+255),w,b
  1569  001B60  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1570  001B62  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1571  001B64  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1572  001B66  A0D8               	btfss	status,0,c
  1573  001B68  EFB8  F00D         	goto	u1771
  1574  001B6C  EFBA  F00D         	goto	u1770
  1575  001B70                     u1771:
  1576  001B70  EFBE  F00D         	goto	l2371
  1577  001B74                     u1770:
  1578  001B74                     
  1579                           ; BSR set to: 0
  1580  001B74  51C4               	movf	___awmod@divisor& (0+255),w,b
  1581  001B76  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1582  001B78  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1583  001B7A  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1584  001B7C                     l2371:
  1585                           
  1586                           ; BSR set to: 0
  1587  001B7C  90D8               	bcf	status,0,c
  1588  001B7E  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1589  001B80  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1590  001B82                     
  1591                           ; BSR set to: 0
  1592  001B82  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1593  001B84  EFAF  F00D         	goto	l2367
  1594  001B88                     l2375:
  1595                           
  1596                           ; BSR set to: 0
  1597  001B88  51C7               	movf	___awmod@sign& (0+255),w,b
  1598  001B8A  B4D8               	btfsc	status,2,c
  1599  001B8C  EFCA  F00D         	goto	u1781
  1600  001B90  EFCC  F00D         	goto	u1780
  1601  001B94                     u1781:
  1602  001B94  EFD0  F00D         	goto	l2379
  1603  001B98                     u1780:
  1604  001B98                     
  1605                           ; BSR set to: 0
  1606  001B98  6DC2               	negf	___awmod@dividend& (0+255),b
  1607  001B9A  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1608  001B9C  B0D8               	btfsc	status,0,c
  1609  001B9E  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1610  001BA0                     l2379:
  1611                           
  1612                           ; BSR set to: 0
  1613  001BA0  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1614  001BA4  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1615  001BA8                     
  1616                           ; BSR set to: 0
  1617  001BA8  0012               	return		;funcret
  1618  001BAA                     __end_of___awmod:
  1619                           	opt callstack 0
  1620                           
  1621 ;; *************** function _metToucheCombien *****************
  1622 ;; Defined at:
  1623 ;;		line 244 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  j               1   22[BANK0 ] unsigned char 
  1628 ;;  k               1   20[BANK0 ] unsigned char 
  1629 ;;  i               1   21[BANK0 ] unsigned char 
  1630 ;;  minesTouche     1   19[BANK0 ] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1640 ;;      Params:         0       0       0       0       0       0       0
  1641 ;;      Locals:         0       4       0       0       0       0       0
  1642 ;;      Temps:          0       3       0       0       0       0       0
  1643 ;;      Totals:         0       7       0       0       0       0       0
  1644 ;;Total ram usage:        7 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    2
  1647 ;; This function calls:
  1648 ;;		_calculToucheCombien
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text6
  1655  00155E                     __ptext6:
  1656                           	opt callstack 0
  1657  00155E                     _metToucheCombien:
  1658                           	opt callstack 28
  1659  00155E                     
  1660                           ;main.c: 246: char minesTouche=0;
  1661  00155E  0E00               	movlw	0
  1662  001560  0100               	movlb	0	; force () banked
  1663  001562  6FC7               	movwf	metToucheCombien@minesTouche& (0+255),b
  1664                           
  1665                           ;main.c: 248: for(unsigned char i=0;i<4;i++)
  1666  001564  0E00               	movlw	0
  1667  001566  0100               	movlb	0	; force () banked
  1668  001568  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1669  00156A                     
  1670                           ; BSR set to: 0
  1671  00156A  0E03               	movlw	3
  1672  00156C  0100               	movlb	0	; force () banked
  1673  00156E  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1674  001570  EFBC  F00A         	goto	u1881
  1675  001574  EFBE  F00A         	goto	u1880
  1676  001578                     u1881:
  1677  001578  EFC0  F00A         	goto	l2495
  1678  00157C                     u1880:
  1679  00157C  EF6A  F00B         	goto	l2521
  1680  001580                     l2495:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;main.c: 249: {;main.c: 250: for(unsigned char j=0;j<20;j++)
  1684  001580  0E00               	movlw	0
  1685  001582  0100               	movlb	0	; force () banked
  1686  001584  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1687  001586                     
  1688                           ; BSR set to: 0
  1689  001586  0E13               	movlw	19
  1690  001588  0100               	movlb	0	; force () banked
  1691  00158A  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1692  00158C  EFCA  F00A         	goto	u1891
  1693  001590  EFCC  F00A         	goto	u1890
  1694  001594                     u1891:
  1695  001594  EFCE  F00A         	goto	l2501
  1696  001598                     u1890:
  1697  001598  EF5F  F00B         	goto	l2517
  1698  00159C                     l2501:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 251: {;main.c: 252: minesTouche=calculToucheCombien(i,j);
  1702  00159C  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1703  0015A0  0100               	movlb	0	; force () banked
  1704  0015A2  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1705  0015A4  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1706  0015A8  0100               	movlb	0	; force () banked
  1707  0015AA  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1708  0015AC  EC1E  F003         	call	_calculToucheCombien	;wreg free
  1709  0015B0  0100               	movlb	0	; force () banked
  1710  0015B2  6FC7               	movwf	metToucheCombien@minesTouche& (0+255),b
  1711  0015B4                     
  1712                           ; BSR set to: 0
  1713                           ;main.c: 253: if(minesTouche!='0'&&m_tabMines[i][j]!=2)
  1714  0015B4  0E30               	movlw	48
  1715  0015B6  0100               	movlb	0	; force () banked
  1716  0015B8  19C7               	xorwf	metToucheCombien@minesTouche& (0+255),w,b
  1717  0015BA  B4D8               	btfsc	status,2,c
  1718  0015BC  EFE2  F00A         	goto	u1901
  1719  0015C0  EFE4  F00A         	goto	u1900
  1720  0015C4                     u1901:
  1721  0015C4  EF1D  F00B         	goto	l2509
  1722  0015C8                     u1900:
  1723  0015C8                     
  1724                           ; BSR set to: 0
  1725  0015C8  0100               	movlb	0	; force () banked
  1726  0015CA  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1727  0015CC  0D15               	mullw	21
  1728  0015CE  0E60               	movlw	low _m_tabMines
  1729  0015D0  0100               	movlb	0	; force () banked
  1730  0015D2  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1731  0015D4  0E00               	movlw	high _m_tabMines
  1732  0015D6  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1733  0015D8  50F3               	movf	243,w,c
  1734  0015DA  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1735  0015DC  50F4               	movf	244,w,c
  1736  0015DE  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1737  0015E0  0100               	movlb	0	; force () banked
  1738  0015E2  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1739  0015E4  0100               	movlb	0	; force () banked
  1740  0015E6  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1741  0015E8  6ED9               	movwf	fsr2l,c
  1742  0015EA  0100               	movlb	0	; force () banked
  1743  0015EC  0E00               	movlw	0
  1744  0015EE  0100               	movlb	0	; force () banked
  1745  0015F0  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1746  0015F2  6EDA               	movwf	fsr2h,c
  1747  0015F4  0E02               	movlw	2
  1748  0015F6  18DE               	xorwf	postinc2,w,c
  1749  0015F8  B4D8               	btfsc	status,2,c
  1750  0015FA  EF01  F00B         	goto	u1911
  1751  0015FE  EF03  F00B         	goto	u1910
  1752  001602                     u1911:
  1753  001602  EF1D  F00B         	goto	l2509
  1754  001606                     u1910:
  1755  001606                     
  1756                           ; BSR set to: 0
  1757                           ;main.c: 254: m_tabMines[i][j]=minesTouche;
  1758  001606  0100               	movlb	0	; force () banked
  1759  001608  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1760  00160A  0D15               	mullw	21
  1761  00160C  0E60               	movlw	low _m_tabMines
  1762  00160E  0100               	movlb	0	; force () banked
  1763  001610  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1764  001612  0E00               	movlw	high _m_tabMines
  1765  001614  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1766  001616  50F3               	movf	243,w,c
  1767  001618  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1768  00161A  50F4               	movf	244,w,c
  1769  00161C  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1770  00161E  0100               	movlb	0	; force () banked
  1771  001620  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1772  001622  0100               	movlb	0	; force () banked
  1773  001624  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1774  001626  6ED9               	movwf	fsr2l,c
  1775  001628  0100               	movlb	0	; force () banked
  1776  00162A  0E00               	movlw	0
  1777  00162C  0100               	movlb	0	; force () banked
  1778  00162E  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1779  001630  6EDA               	movwf	fsr2h,c
  1780  001632  C0C7  FFDF         	movff	metToucheCombien@minesTouche,indf2
  1781  001636  EF54  F00B         	goto	l2513
  1782  00163A                     l2509:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;main.c: 255: else if(m_tabMines[i][j]!=2)
  1786  00163A  0100               	movlb	0	; force () banked
  1787  00163C  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1788  00163E  0D15               	mullw	21
  1789  001640  0E60               	movlw	low _m_tabMines
  1790  001642  0100               	movlb	0	; force () banked
  1791  001644  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1792  001646  0E00               	movlw	high _m_tabMines
  1793  001648  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1794  00164A  50F3               	movf	243,w,c
  1795  00164C  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1796  00164E  50F4               	movf	244,w,c
  1797  001650  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1798  001652  0100               	movlb	0	; force () banked
  1799  001654  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1800  001656  0100               	movlb	0	; force () banked
  1801  001658  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1802  00165A  6ED9               	movwf	fsr2l,c
  1803  00165C  0100               	movlb	0	; force () banked
  1804  00165E  0E00               	movlw	0
  1805  001660  0100               	movlb	0	; force () banked
  1806  001662  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1807  001664  6EDA               	movwf	fsr2h,c
  1808  001666  0E02               	movlw	2
  1809  001668  18DE               	xorwf	postinc2,w,c
  1810  00166A  B4D8               	btfsc	status,2,c
  1811  00166C  EF3A  F00B         	goto	u1921
  1812  001670  EF3C  F00B         	goto	u1920
  1813  001674                     u1921:
  1814  001674  EF54  F00B         	goto	l2513
  1815  001678                     u1920:
  1816  001678                     
  1817                           ; BSR set to: 0
  1818                           ;main.c: 256: m_tabMines[i][j]=' ';
  1819  001678  0100               	movlb	0	; force () banked
  1820  00167A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1821  00167C  0D15               	mullw	21
  1822  00167E  0E60               	movlw	low _m_tabMines
  1823  001680  0100               	movlb	0	; force () banked
  1824  001682  6FC4               	movwf	??_metToucheCombien& (0+255),b
  1825  001684  0E00               	movlw	high _m_tabMines
  1826  001686  6FC5               	movwf	(??_metToucheCombien+1)& (0+255),b
  1827  001688  50F3               	movf	243,w,c
  1828  00168A  27C4               	addwf	??_metToucheCombien& (0+255),f,b
  1829  00168C  50F4               	movf	244,w,c
  1830  00168E  23C5               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1831  001690  0100               	movlb	0	; force () banked
  1832  001692  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1833  001694  0100               	movlb	0	; force () banked
  1834  001696  25C4               	addwf	??_metToucheCombien& (0+255),w,b
  1835  001698  6ED9               	movwf	fsr2l,c
  1836  00169A  0100               	movlb	0	; force () banked
  1837  00169C  0E00               	movlw	0
  1838  00169E  0100               	movlb	0	; force () banked
  1839  0016A0  21C5               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1840  0016A2  6EDA               	movwf	fsr2h,c
  1841  0016A4  0E20               	movlw	32
  1842  0016A6  6EDF               	movwf	indf2,c
  1843  0016A8                     l2513:
  1844                           
  1845                           ; BSR set to: 0
  1846  0016A8  0100               	movlb	0	; force () banked
  1847  0016AA  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1848  0016AC                     
  1849                           ; BSR set to: 0
  1850  0016AC  0E13               	movlw	19
  1851  0016AE  0100               	movlb	0	; force () banked
  1852  0016B0  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1853  0016B2  EF5D  F00B         	goto	u1931
  1854  0016B6  EF5F  F00B         	goto	u1930
  1855  0016BA                     u1931:
  1856  0016BA  EFCE  F00A         	goto	l2501
  1857  0016BE                     u1930:
  1858  0016BE                     l2517:
  1859                           
  1860                           ; BSR set to: 0
  1861  0016BE  0100               	movlb	0	; force () banked
  1862  0016C0  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1863  0016C2                     
  1864                           ; BSR set to: 0
  1865  0016C2  0E03               	movlw	3
  1866  0016C4  0100               	movlb	0	; force () banked
  1867  0016C6  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1868  0016C8  EF68  F00B         	goto	u1941
  1869  0016CC  EF6A  F00B         	goto	u1940
  1870  0016D0                     u1941:
  1871  0016D0  EFC0  F00A         	goto	l2495
  1872  0016D4                     u1940:
  1873  0016D4                     l2521:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;main.c: 257: };main.c: 258: };main.c: 259: for(unsigned char k=0;k<4;k++)
  1877  0016D4  0E00               	movlw	0
  1878  0016D6  0100               	movlb	0	; force () banked
  1879  0016D8  6FC8               	movwf	metToucheCombien@k& (0+255),b
  1880  0016DA                     
  1881                           ; BSR set to: 0
  1882  0016DA  0E03               	movlw	3
  1883  0016DC  0100               	movlb	0	; force () banked
  1884  0016DE  65C8               	cpfsgt	metToucheCombien@k& (0+255),b
  1885  0016E0  EF74  F00B         	goto	u1951
  1886  0016E4  EF76  F00B         	goto	u1950
  1887  0016E8                     u1951:
  1888  0016E8  EF78  F00B         	goto	l2527
  1889  0016EC                     u1950:
  1890  0016EC  EF8E  F00B         	goto	l152
  1891  0016F0                     l2527:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 260: {;main.c: 261: m_tabMines[k][20]='\0';
  1895  0016F0  0100               	movlb	0	; force () banked
  1896  0016F2  51C8               	movf	metToucheCombien@k& (0+255),w,b
  1897  0016F4  0D15               	mullw	21
  1898  0016F6  0E74               	movlw	low (_m_tabMines+20)
  1899  0016F8  24F3               	addwf	243,w,c
  1900  0016FA  6ED9               	movwf	fsr2l,c
  1901  0016FC  0E00               	movlw	high (_m_tabMines+20)
  1902  0016FE  20F4               	addwfc	prodh,w,c
  1903  001700  6EDA               	movwf	fsr2h,c
  1904  001702  0E00               	movlw	0
  1905  001704  6EDF               	movwf	indf2,c
  1906  001706                     
  1907                           ; BSR set to: 0
  1908  001706  0100               	movlb	0	; force () banked
  1909  001708  2BC8               	incf	metToucheCombien@k& (0+255),f,b
  1910  00170A                     
  1911                           ; BSR set to: 0
  1912  00170A  0E03               	movlw	3
  1913  00170C  0100               	movlb	0	; force () banked
  1914  00170E  65C8               	cpfsgt	metToucheCombien@k& (0+255),b
  1915  001710  EF8C  F00B         	goto	u1961
  1916  001714  EF8E  F00B         	goto	u1960
  1917  001718                     u1961:
  1918  001718  EF78  F00B         	goto	l2527
  1919  00171C                     u1960:
  1920  00171C                     l152:
  1921                           
  1922                           ; BSR set to: 0
  1923  00171C  0012               	return		;funcret
  1924  00171E                     __end_of_metToucheCombien:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _calculToucheCombien *****************
  1928 ;; Defined at:
  1929 ;;		line 270 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  ligne           2    6[BANK0 ] int 
  1932 ;;  colonne         2    8[BANK0 ] int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  nombreTouche    1   15[BANK0 ] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      unsigned char 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1944 ;;      Params:         0       4       0       0       0       0       0
  1945 ;;      Locals:         0       1       0       0       0       0       0
  1946 ;;      Temps:          0       5       0       0       0       0       0
  1947 ;;      Totals:         0      10       0       0       0       0       0
  1948 ;;Total ram usage:       10 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		___wmul
  1953 ;; This function is called by:
  1954 ;;		_metToucheCombien
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text7
  1959  00063C                     __ptext7:
  1960                           	opt callstack 0
  1961  00063C                     _calculToucheCombien:
  1962                           	opt callstack 28
  1963  00063C                     
  1964                           ;main.c: 272: char nombreTouche='0';
  1965  00063C  0E30               	movlw	48
  1966  00063E  0100               	movlb	0	; force () banked
  1967  000640  6FC3               	movwf	calculToucheCombien@nombreTouche& (0+255),b
  1968  000642                     
  1969                           ; BSR set to: 0
  1970                           ;main.c: 274: if(m_tabMines[ligne][colonne]!=2)
  1971  000642  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1972  000646  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1973  00064A  0E00               	movlw	0
  1974  00064C  0100               	movlb	0	; force () banked
  1975  00064E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1976  000650  0E15               	movlw	21
  1977  000652  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1978  000654  EC54  F011         	call	___wmul	;wreg free
  1979  000658  0E60               	movlw	low _m_tabMines
  1980  00065A  0100               	movlb	0	; force () banked
  1981  00065C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1982  00065E  0E00               	movlw	high _m_tabMines
  1983  000660  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1984  000662  0100               	movlb	0	; force () banked
  1985  000664  51B4               	movf	?___wmul& (0+255),w,b
  1986  000666  0100               	movlb	0	; force () banked
  1987  000668  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1988  00066A  0100               	movlb	0	; force () banked
  1989  00066C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1990  00066E  0100               	movlb	0	; force () banked
  1991  000670  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1992  000672  0100               	movlb	0	; force () banked
  1993  000674  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1994  000676  0100               	movlb	0	; force () banked
  1995  000678  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1996  00067A  6ED9               	movwf	fsr2l,c
  1997  00067C  0100               	movlb	0	; force () banked
  1998  00067E  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1999  000680  0100               	movlb	0	; force () banked
  2000  000682  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2001  000684  6EDA               	movwf	fsr2h,c
  2002  000686  0E02               	movlw	2
  2003  000688  18DE               	xorwf	postinc2,w,c
  2004  00068A  B4D8               	btfsc	status,2,c
  2005  00068C  EF4A  F003         	goto	u1331
  2006  000690  EF4C  F003         	goto	u1330
  2007  000694                     u1331:
  2008  000694  EF62  F005         	goto	l2209
  2009  000698                     u1330:
  2010  000698                     
  2011                           ; BSR set to: 0
  2012                           ;main.c: 275: {;main.c: 276: if(ligne!=3)
  2013  000698  0E03               	movlw	3
  2014  00069A  0100               	movlb	0	; force () banked
  2015  00069C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2016  00069E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2017  0006A0  B4D8               	btfsc	status,2,c
  2018  0006A2  EF55  F003         	goto	u1341
  2019  0006A6  EF57  F003         	goto	u1340
  2020  0006AA                     u1341:
  2021  0006AA  EF88  F003         	goto	l2159
  2022  0006AE                     u1340:
  2023  0006AE                     
  2024                           ; BSR set to: 0
  2025                           ;main.c: 277: {;main.c: 278: if(m_tabMines[ligne+1][colonne]==2)
  2026  0006AE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2027  0006B2  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2028  0006B6  0E00               	movlw	0
  2029  0006B8  0100               	movlb	0	; force () banked
  2030  0006BA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2031  0006BC  0E15               	movlw	21
  2032  0006BE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2033  0006C0  EC54  F011         	call	___wmul	;wreg free
  2034  0006C4  0E60               	movlw	low _m_tabMines
  2035  0006C6  0100               	movlb	0	; force () banked
  2036  0006C8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2037  0006CA  0E00               	movlw	high _m_tabMines
  2038  0006CC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2039  0006CE  0E15               	movlw	21
  2040  0006D0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2041  0006D2  0E00               	movlw	0
  2042  0006D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2043  0006D6  0100               	movlb	0	; force () banked
  2044  0006D8  51B4               	movf	?___wmul& (0+255),w,b
  2045  0006DA  0100               	movlb	0	; force () banked
  2046  0006DC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2047  0006DE  0100               	movlb	0	; force () banked
  2048  0006E0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2049  0006E2  0100               	movlb	0	; force () banked
  2050  0006E4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2051  0006E6  0100               	movlb	0	; force () banked
  2052  0006E8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2053  0006EA  0100               	movlb	0	; force () banked
  2054  0006EC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2055  0006EE  6ED9               	movwf	fsr2l,c
  2056  0006F0  0100               	movlb	0	; force () banked
  2057  0006F2  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2058  0006F4  0100               	movlb	0	; force () banked
  2059  0006F6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2060  0006F8  6EDA               	movwf	fsr2h,c
  2061  0006FA  0E02               	movlw	2
  2062  0006FC  18DE               	xorwf	postinc2,w,c
  2063  0006FE  A4D8               	btfss	status,2,c
  2064  000700  EF84  F003         	goto	u1351
  2065  000704  EF86  F003         	goto	u1350
  2066  000708                     u1351:
  2067  000708  EF88  F003         	goto	l2159
  2068  00070C                     u1350:
  2069  00070C                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 279: nombreTouche++;
  2072  00070C  0100               	movlb	0	; force () banked
  2073  00070E  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2074  000710                     l2159:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;main.c: 280: };main.c: 281: if(ligne!=0)
  2078  000710  0100               	movlb	0	; force () banked
  2079  000712  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2080  000714  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2081  000716  B4D8               	btfsc	status,2,c
  2082  000718  EF90  F003         	goto	u1361
  2083  00071C  EF92  F003         	goto	u1360
  2084  000720                     u1361:
  2085  000720  EFC7  F003         	goto	l2165
  2086  000724                     u1360:
  2087  000724                     
  2088                           ; BSR set to: 0
  2089                           ;main.c: 282: {;main.c: 283: if(m_tabMines[ligne-1][colonne]==2)
  2090  000724  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2091  000728  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2092  00072C  0E00               	movlw	0
  2093  00072E  0100               	movlb	0	; force () banked
  2094  000730  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2095  000732  0E15               	movlw	21
  2096  000734  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2097  000736  EC54  F011         	call	___wmul	;wreg free
  2098  00073A  0EEB               	movlw	235
  2099  00073C  0100               	movlb	0	; force () banked
  2100  00073E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2101  000740  0EFF               	movlw	255
  2102  000742  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2103  000744  0E60               	movlw	low _m_tabMines
  2104  000746  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2105  000748  0E00               	movlw	high _m_tabMines
  2106  00074A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2107  00074C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2108  00074E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2109  000750  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2110  000752  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2111  000754  0100               	movlb	0	; force () banked
  2112  000756  51B4               	movf	?___wmul& (0+255),w,b
  2113  000758  0100               	movlb	0	; force () banked
  2114  00075A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2115  00075C  0100               	movlb	0	; force () banked
  2116  00075E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2117  000760  0100               	movlb	0	; force () banked
  2118  000762  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2119  000764  0100               	movlb	0	; force () banked
  2120  000766  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2121  000768  0100               	movlb	0	; force () banked
  2122  00076A  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2123  00076C  6ED9               	movwf	fsr2l,c
  2124  00076E  0100               	movlb	0	; force () banked
  2125  000770  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2126  000772  0100               	movlb	0	; force () banked
  2127  000774  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2128  000776  6EDA               	movwf	fsr2h,c
  2129  000778  0E02               	movlw	2
  2130  00077A  18DE               	xorwf	postinc2,w,c
  2131  00077C  A4D8               	btfss	status,2,c
  2132  00077E  EFC3  F003         	goto	u1371
  2133  000782  EFC5  F003         	goto	u1370
  2134  000786                     u1371:
  2135  000786  EFC7  F003         	goto	l2165
  2136  00078A                     u1370:
  2137  00078A                     
  2138                           ; BSR set to: 0
  2139                           ;main.c: 284: nombreTouche++;
  2140  00078A  0100               	movlb	0	; force () banked
  2141  00078C  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2142  00078E                     l2165:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;main.c: 285: };main.c: 286: if(ligne!=3&&colonne!=0)
  2146  00078E  0E03               	movlw	3
  2147  000790  0100               	movlb	0	; force () banked
  2148  000792  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2149  000794  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2150  000796  B4D8               	btfsc	status,2,c
  2151  000798  EFD0  F003         	goto	u1381
  2152  00079C  EFD2  F003         	goto	u1380
  2153  0007A0                     u1381:
  2154  0007A0  EF0D  F004         	goto	l2173
  2155  0007A4                     u1380:
  2156  0007A4                     
  2157                           ; BSR set to: 0
  2158  0007A4  0100               	movlb	0	; force () banked
  2159  0007A6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2160  0007A8  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2161  0007AA  B4D8               	btfsc	status,2,c
  2162  0007AC  EFDA  F003         	goto	u1391
  2163  0007B0  EFDC  F003         	goto	u1390
  2164  0007B4                     u1391:
  2165  0007B4  EF0D  F004         	goto	l2173
  2166  0007B8                     u1390:
  2167  0007B8                     
  2168                           ; BSR set to: 0
  2169                           ;main.c: 287: {;main.c: 288: if(m_tabMines[ligne+1][colonne-1]==2)
  2170  0007B8  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2171  0007BC  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2172  0007C0  0E00               	movlw	0
  2173  0007C2  0100               	movlb	0	; force () banked
  2174  0007C4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2175  0007C6  0E15               	movlw	21
  2176  0007C8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2177  0007CA  EC54  F011         	call	___wmul	;wreg free
  2178  0007CE  0E60               	movlw	low _m_tabMines
  2179  0007D0  0100               	movlb	0	; force () banked
  2180  0007D2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2181  0007D4  0E00               	movlw	high _m_tabMines
  2182  0007D6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2183  0007D8  0E14               	movlw	20
  2184  0007DA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2185  0007DC  0E00               	movlw	0
  2186  0007DE  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2187  0007E0  0100               	movlb	0	; force () banked
  2188  0007E2  51B4               	movf	?___wmul& (0+255),w,b
  2189  0007E4  0100               	movlb	0	; force () banked
  2190  0007E6  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2191  0007E8  0100               	movlb	0	; force () banked
  2192  0007EA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2193  0007EC  0100               	movlb	0	; force () banked
  2194  0007EE  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2195  0007F0  0100               	movlb	0	; force () banked
  2196  0007F2  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2197  0007F4  0100               	movlb	0	; force () banked
  2198  0007F6  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2199  0007F8  6ED9               	movwf	fsr2l,c
  2200  0007FA  0100               	movlb	0	; force () banked
  2201  0007FC  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2202  0007FE  0100               	movlb	0	; force () banked
  2203  000800  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2204  000802  6EDA               	movwf	fsr2h,c
  2205  000804  0E02               	movlw	2
  2206  000806  18DE               	xorwf	postinc2,w,c
  2207  000808  A4D8               	btfss	status,2,c
  2208  00080A  EF09  F004         	goto	u1401
  2209  00080E  EF0B  F004         	goto	u1400
  2210  000812                     u1401:
  2211  000812  EF0D  F004         	goto	l2173
  2212  000816                     u1400:
  2213  000816                     
  2214                           ; BSR set to: 0
  2215                           ;main.c: 289: nombreTouche++;
  2216  000816  0100               	movlb	0	; force () banked
  2217  000818  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2218  00081A                     l2173:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 290: };main.c: 291: if(ligne!=3&&colonne!=19)
  2222  00081A  0E03               	movlw	3
  2223  00081C  0100               	movlb	0	; force () banked
  2224  00081E  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2225  000820  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2226  000822  B4D8               	btfsc	status,2,c
  2227  000824  EF16  F004         	goto	u1411
  2228  000828  EF18  F004         	goto	u1410
  2229  00082C                     u1411:
  2230  00082C  EF54  F004         	goto	l2181
  2231  000830                     u1410:
  2232  000830                     
  2233                           ; BSR set to: 0
  2234  000830  0E13               	movlw	19
  2235  000832  0100               	movlb	0	; force () banked
  2236  000834  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2237  000836  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2238  000838  B4D8               	btfsc	status,2,c
  2239  00083A  EF21  F004         	goto	u1421
  2240  00083E  EF23  F004         	goto	u1420
  2241  000842                     u1421:
  2242  000842  EF54  F004         	goto	l2181
  2243  000846                     u1420:
  2244  000846                     
  2245                           ; BSR set to: 0
  2246                           ;main.c: 292: {;main.c: 293: if(m_tabMines[ligne+1][colonne+1]==2)
  2247  000846  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2248  00084A  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2249  00084E  0E00               	movlw	0
  2250  000850  0100               	movlb	0	; force () banked
  2251  000852  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2252  000854  0E15               	movlw	21
  2253  000856  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2254  000858  EC54  F011         	call	___wmul	;wreg free
  2255  00085C  0E60               	movlw	low _m_tabMines
  2256  00085E  0100               	movlb	0	; force () banked
  2257  000860  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2258  000862  0E00               	movlw	high _m_tabMines
  2259  000864  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2260  000866  0E16               	movlw	22
  2261  000868  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2262  00086A  0E00               	movlw	0
  2263  00086C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2264  00086E  0100               	movlb	0	; force () banked
  2265  000870  51B4               	movf	?___wmul& (0+255),w,b
  2266  000872  0100               	movlb	0	; force () banked
  2267  000874  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2268  000876  0100               	movlb	0	; force () banked
  2269  000878  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2270  00087A  0100               	movlb	0	; force () banked
  2271  00087C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2272  00087E  0100               	movlb	0	; force () banked
  2273  000880  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2274  000882  0100               	movlb	0	; force () banked
  2275  000884  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2276  000886  6ED9               	movwf	fsr2l,c
  2277  000888  0100               	movlb	0	; force () banked
  2278  00088A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2279  00088C  0100               	movlb	0	; force () banked
  2280  00088E  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2281  000890  6EDA               	movwf	fsr2h,c
  2282  000892  0E02               	movlw	2
  2283  000894  18DE               	xorwf	postinc2,w,c
  2284  000896  A4D8               	btfss	status,2,c
  2285  000898  EF50  F004         	goto	u1431
  2286  00089C  EF52  F004         	goto	u1430
  2287  0008A0                     u1431:
  2288  0008A0  EF54  F004         	goto	l2181
  2289  0008A4                     u1430:
  2290  0008A4                     
  2291                           ; BSR set to: 0
  2292                           ;main.c: 294: nombreTouche++;
  2293  0008A4  0100               	movlb	0	; force () banked
  2294  0008A6  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2295  0008A8                     l2181:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 295: };main.c: 296: if(ligne!=0&&colonne!=0)
  2299  0008A8  0100               	movlb	0	; force () banked
  2300  0008AA  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2301  0008AC  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2302  0008AE  B4D8               	btfsc	status,2,c
  2303  0008B0  EF5C  F004         	goto	u1441
  2304  0008B4  EF5E  F004         	goto	u1440
  2305  0008B8                     u1441:
  2306  0008B8  EF9D  F004         	goto	l2189
  2307  0008BC                     u1440:
  2308  0008BC                     
  2309                           ; BSR set to: 0
  2310  0008BC  0100               	movlb	0	; force () banked
  2311  0008BE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2312  0008C0  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2313  0008C2  B4D8               	btfsc	status,2,c
  2314  0008C4  EF66  F004         	goto	u1451
  2315  0008C8  EF68  F004         	goto	u1450
  2316  0008CC                     u1451:
  2317  0008CC  EF9D  F004         	goto	l2189
  2318  0008D0                     u1450:
  2319  0008D0                     
  2320                           ; BSR set to: 0
  2321                           ;main.c: 297: {;main.c: 298: if(m_tabMines[ligne-1][colonne-1]==2)
  2322  0008D0  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2323  0008D4  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2324  0008D8  0E00               	movlw	0
  2325  0008DA  0100               	movlb	0	; force () banked
  2326  0008DC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2327  0008DE  0E15               	movlw	21
  2328  0008E0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2329  0008E2  EC54  F011         	call	___wmul	;wreg free
  2330  0008E6  0EEA               	movlw	234
  2331  0008E8  0100               	movlb	0	; force () banked
  2332  0008EA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2333  0008EC  0EFF               	movlw	255
  2334  0008EE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2335  0008F0  0E60               	movlw	low _m_tabMines
  2336  0008F2  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2337  0008F4  0E00               	movlw	high _m_tabMines
  2338  0008F6  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2339  0008F8  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2340  0008FA  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2341  0008FC  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2342  0008FE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2343  000900  0100               	movlb	0	; force () banked
  2344  000902  51B4               	movf	?___wmul& (0+255),w,b
  2345  000904  0100               	movlb	0	; force () banked
  2346  000906  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2347  000908  0100               	movlb	0	; force () banked
  2348  00090A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2349  00090C  0100               	movlb	0	; force () banked
  2350  00090E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2351  000910  0100               	movlb	0	; force () banked
  2352  000912  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2353  000914  0100               	movlb	0	; force () banked
  2354  000916  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2355  000918  6ED9               	movwf	fsr2l,c
  2356  00091A  0100               	movlb	0	; force () banked
  2357  00091C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2358  00091E  0100               	movlb	0	; force () banked
  2359  000920  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2360  000922  6EDA               	movwf	fsr2h,c
  2361  000924  0E02               	movlw	2
  2362  000926  18DE               	xorwf	postinc2,w,c
  2363  000928  A4D8               	btfss	status,2,c
  2364  00092A  EF99  F004         	goto	u1461
  2365  00092E  EF9B  F004         	goto	u1460
  2366  000932                     u1461:
  2367  000932  EF9D  F004         	goto	l2189
  2368  000936                     u1460:
  2369  000936                     
  2370                           ; BSR set to: 0
  2371                           ;main.c: 299: nombreTouche++;
  2372  000936  0100               	movlb	0	; force () banked
  2373  000938  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2374  00093A                     l2189:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 300: };main.c: 301: if(ligne!=0&&colonne!=19)
  2378  00093A  0100               	movlb	0	; force () banked
  2379  00093C  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2380  00093E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2381  000940  B4D8               	btfsc	status,2,c
  2382  000942  EFA5  F004         	goto	u1471
  2383  000946  EFA7  F004         	goto	u1470
  2384  00094A                     u1471:
  2385  00094A  EFE7  F004         	goto	l2197
  2386  00094E                     u1470:
  2387  00094E                     
  2388                           ; BSR set to: 0
  2389  00094E  0E13               	movlw	19
  2390  000950  0100               	movlb	0	; force () banked
  2391  000952  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2392  000954  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2393  000956  B4D8               	btfsc	status,2,c
  2394  000958  EFB0  F004         	goto	u1481
  2395  00095C  EFB2  F004         	goto	u1480
  2396  000960                     u1481:
  2397  000960  EFE7  F004         	goto	l2197
  2398  000964                     u1480:
  2399  000964                     
  2400                           ; BSR set to: 0
  2401                           ;main.c: 302: {;main.c: 303: if(m_tabMines[ligne-1][colonne+1]==2)
  2402  000964  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2403  000968  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2404  00096C  0E00               	movlw	0
  2405  00096E  0100               	movlb	0	; force () banked
  2406  000970  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2407  000972  0E15               	movlw	21
  2408  000974  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2409  000976  EC54  F011         	call	___wmul	;wreg free
  2410  00097A  0EEC               	movlw	236
  2411  00097C  0100               	movlb	0	; force () banked
  2412  00097E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2413  000980  0EFF               	movlw	255
  2414  000982  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2415  000984  0E60               	movlw	low _m_tabMines
  2416  000986  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2417  000988  0E00               	movlw	high _m_tabMines
  2418  00098A  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2419  00098C  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2420  00098E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2421  000990  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2422  000992  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2423  000994  0100               	movlb	0	; force () banked
  2424  000996  51B4               	movf	?___wmul& (0+255),w,b
  2425  000998  0100               	movlb	0	; force () banked
  2426  00099A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2427  00099C  0100               	movlb	0	; force () banked
  2428  00099E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2429  0009A0  0100               	movlb	0	; force () banked
  2430  0009A2  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2431  0009A4  0100               	movlb	0	; force () banked
  2432  0009A6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2433  0009A8  0100               	movlb	0	; force () banked
  2434  0009AA  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2435  0009AC  6ED9               	movwf	fsr2l,c
  2436  0009AE  0100               	movlb	0	; force () banked
  2437  0009B0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2438  0009B2  0100               	movlb	0	; force () banked
  2439  0009B4  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2440  0009B6  6EDA               	movwf	fsr2h,c
  2441  0009B8  0E02               	movlw	2
  2442  0009BA  18DE               	xorwf	postinc2,w,c
  2443  0009BC  A4D8               	btfss	status,2,c
  2444  0009BE  EFE3  F004         	goto	u1491
  2445  0009C2  EFE5  F004         	goto	u1490
  2446  0009C6                     u1491:
  2447  0009C6  EFE7  F004         	goto	l2197
  2448  0009CA                     u1490:
  2449  0009CA                     
  2450                           ; BSR set to: 0
  2451                           ;main.c: 304: nombreTouche++;
  2452  0009CA  0100               	movlb	0	; force () banked
  2453  0009CC  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2454  0009CE                     l2197:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 305: };main.c: 306: if(colonne!=19)
  2458  0009CE  0E13               	movlw	19
  2459  0009D0  0100               	movlb	0	; force () banked
  2460  0009D2  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2461  0009D4  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2462  0009D6  B4D8               	btfsc	status,2,c
  2463  0009D8  EFF0  F004         	goto	u1501
  2464  0009DC  EFF2  F004         	goto	u1500
  2465  0009E0                     u1501:
  2466  0009E0  EF23  F005         	goto	l2203
  2467  0009E4                     u1500:
  2468  0009E4                     
  2469                           ; BSR set to: 0
  2470                           ;main.c: 307: {;main.c: 308: if(m_tabMines[ligne][colonne+1]==2)
  2471  0009E4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2472  0009E8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2473  0009EC  0E00               	movlw	0
  2474  0009EE  0100               	movlb	0	; force () banked
  2475  0009F0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2476  0009F2  0E15               	movlw	21
  2477  0009F4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2478  0009F6  EC54  F011         	call	___wmul	;wreg free
  2479  0009FA  0E60               	movlw	low _m_tabMines
  2480  0009FC  0100               	movlb	0	; force () banked
  2481  0009FE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2482  000A00  0E00               	movlw	high _m_tabMines
  2483  000A02  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2484  000A04  0E01               	movlw	1
  2485  000A06  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2486  000A08  0E00               	movlw	0
  2487  000A0A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2488  000A0C  0100               	movlb	0	; force () banked
  2489  000A0E  51B4               	movf	?___wmul& (0+255),w,b
  2490  000A10  0100               	movlb	0	; force () banked
  2491  000A12  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2492  000A14  0100               	movlb	0	; force () banked
  2493  000A16  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2494  000A18  0100               	movlb	0	; force () banked
  2495  000A1A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2496  000A1C  0100               	movlb	0	; force () banked
  2497  000A1E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2498  000A20  0100               	movlb	0	; force () banked
  2499  000A22  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2500  000A24  6ED9               	movwf	fsr2l,c
  2501  000A26  0100               	movlb	0	; force () banked
  2502  000A28  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2503  000A2A  0100               	movlb	0	; force () banked
  2504  000A2C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2505  000A2E  6EDA               	movwf	fsr2h,c
  2506  000A30  0E02               	movlw	2
  2507  000A32  18DE               	xorwf	postinc2,w,c
  2508  000A34  A4D8               	btfss	status,2,c
  2509  000A36  EF1F  F005         	goto	u1511
  2510  000A3A  EF21  F005         	goto	u1510
  2511  000A3E                     u1511:
  2512  000A3E  EF23  F005         	goto	l2203
  2513  000A42                     u1510:
  2514  000A42                     
  2515                           ; BSR set to: 0
  2516                           ;main.c: 309: nombreTouche++;
  2517  000A42  0100               	movlb	0	; force () banked
  2518  000A44  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2519  000A46                     l2203:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 310: };main.c: 311: if(colonne!=0)
  2523  000A46  0100               	movlb	0	; force () banked
  2524  000A48  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2525  000A4A  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2526  000A4C  B4D8               	btfsc	status,2,c
  2527  000A4E  EF2B  F005         	goto	u1521
  2528  000A52  EF2D  F005         	goto	u1520
  2529  000A56                     u1521:
  2530  000A56  EF62  F005         	goto	l2209
  2531  000A5A                     u1520:
  2532  000A5A                     
  2533                           ; BSR set to: 0
  2534                           ;main.c: 312: {;main.c: 313: if(m_tabMines[ligne][colonne-1]==2)
  2535  000A5A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2536  000A5E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2537  000A62  0E00               	movlw	0
  2538  000A64  0100               	movlb	0	; force () banked
  2539  000A66  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2540  000A68  0E15               	movlw	21
  2541  000A6A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2542  000A6C  EC54  F011         	call	___wmul	;wreg free
  2543  000A70  0EFF               	movlw	255
  2544  000A72  0100               	movlb	0	; force () banked
  2545  000A74  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2546  000A76  0EFF               	movlw	255
  2547  000A78  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2548  000A7A  0E60               	movlw	low _m_tabMines
  2549  000A7C  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2550  000A7E  0E00               	movlw	high _m_tabMines
  2551  000A80  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2552  000A82  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2553  000A84  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2554  000A86  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2555  000A88  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2556  000A8A  0100               	movlb	0	; force () banked
  2557  000A8C  51B4               	movf	?___wmul& (0+255),w,b
  2558  000A8E  0100               	movlb	0	; force () banked
  2559  000A90  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2560  000A92  0100               	movlb	0	; force () banked
  2561  000A94  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2562  000A96  0100               	movlb	0	; force () banked
  2563  000A98  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2564  000A9A  0100               	movlb	0	; force () banked
  2565  000A9C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2566  000A9E  0100               	movlb	0	; force () banked
  2567  000AA0  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2568  000AA2  6ED9               	movwf	fsr2l,c
  2569  000AA4  0100               	movlb	0	; force () banked
  2570  000AA6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2571  000AA8  0100               	movlb	0	; force () banked
  2572  000AAA  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2573  000AAC  6EDA               	movwf	fsr2h,c
  2574  000AAE  0E02               	movlw	2
  2575  000AB0  18DE               	xorwf	postinc2,w,c
  2576  000AB2  A4D8               	btfss	status,2,c
  2577  000AB4  EF5E  F005         	goto	u1531
  2578  000AB8  EF60  F005         	goto	u1530
  2579  000ABC                     u1531:
  2580  000ABC  EF62  F005         	goto	l2209
  2581  000AC0                     u1530:
  2582  000AC0                     
  2583                           ; BSR set to: 0
  2584                           ;main.c: 314: nombreTouche++;
  2585  000AC0  0100               	movlb	0	; force () banked
  2586  000AC2  2BC3               	incf	calculToucheCombien@nombreTouche& (0+255),f,b
  2587  000AC4                     l2209:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;main.c: 315: };main.c: 316: };main.c: 317: return nombreTouche;
  2591  000AC4  0100               	movlb	0	; force () banked
  2592  000AC6  51C3               	movf	calculToucheCombien@nombreTouche& (0+255),w,b
  2593  000AC8                     
  2594                           ; BSR set to: 0
  2595  000AC8  0012               	return		;funcret
  2596  000ACA                     __end_of_calculToucheCombien:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _menuAccueil *****************
  2600 ;; Defined at:
  2601 ;;		line 132 in file "main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  menuMsgs       40   16[BANK0 ] const unsigned char [20]
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         0       0       0       0       0       0       0
  2616 ;;      Locals:         0      40       0       0       0       0       0
  2617 ;;      Temps:          0       2       0       0       0       0       0
  2618 ;;      Totals:         0      42       0       0       0       0       0
  2619 ;;Total ram usage:       42 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    5
  2622 ;; This function calls:
  2623 ;;		_lcd_cacheCurseur
  2624 ;;		_lcd_curseurHome
  2625 ;;		_lcd_effaceAffichage
  2626 ;;		_lcd_gotoXY
  2627 ;;		_lcd_putMessage
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text8
  2634  001CE2                     __ptext8:
  2635                           	opt callstack 0
  2636  001CE2                     _menuAccueil:
  2637                           	opt callstack 25
  2638  001CE2                     
  2639                           ;main.c: 135: const char menuMsgs[2][20] = {"Laboratoire 6 ","Simon Jourdenais"};
  2640  001CE2  0E01               	movlw	low menuAccueil@F2903
  2641  001CE4  6EF6               	movwf	tblptrl,c
  2642  001CE6                     	if	1	;There is more than 1 active tblptr byte
  2643  001CE6  0E06               	movlw	high menuAccueil@F2903
  2644  001CE8  6EF7               	movwf	tblptrh,c
  2645  001CEA                     	endif
  2646  001CEA                     	if	1	;There are 3 active tblptr bytes
  2647  001CEA  0E00               	movlw	low (menuAccueil@F2903 shr (0+16))
  2648  001CEC  6EF8               	movwf	tblptru,c
  2649  001CEE                     	endif
  2650  001CEE  EE20  F0C4         	lfsr	2,menuAccueil@menuMsgs
  2651  001CF2  0E27               	movlw	39
  2652  001CF4                     u1790:
  2653  001CF4  0009               	tblrd		*+
  2654  001CF6  CFF5 FFDE          	movff	tablat,postinc2
  2655  001CFA  06E8               	decf	wreg,f,c
  2656  001CFC  E2FB               	bc	u1790
  2657  001CFE                     
  2658                           ;main.c: 136: lcd_effaceAffichage();
  2659  001CFE  EC8D  F011         	call	_lcd_effaceAffichage	;wreg free
  2660  001D02                     
  2661                           ;main.c: 137: lcd_putMessage(menuMsgs[0]);
  2662  001D02  0EC4               	movlw	low menuAccueil@menuMsgs
  2663  001D04  0100               	movlb	0	; force () banked
  2664  001D06  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  2665  001D08  0E00               	movlw	high menuAccueil@menuMsgs
  2666  001D0A  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  2667  001D0C  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  2668  001D0E  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  2669  001D10  A4D8               	btfss	status,2,c
  2670  001D12  0E20               	movlw	32
  2671  001D14  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  2672  001D16  EC22  F00D         	call	_lcd_putMessage	;wreg free
  2673  001D1A                     
  2674                           ;main.c: 138: lcd_gotoXY(1,3);
  2675  001D1A  0E03               	movlw	3
  2676  001D1C  0100               	movlb	0	; force () banked
  2677  001D1E  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2678  001D20  0E01               	movlw	1
  2679  001D22  ECB4  F00E         	call	_lcd_gotoXY
  2680  001D26                     
  2681                           ;main.c: 139: lcd_putMessage(menuMsgs[1]);
  2682  001D26  0ED8               	movlw	low (menuAccueil@menuMsgs+20)
  2683  001D28  0100               	movlb	0	; force () banked
  2684  001D2A  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  2685  001D2C  0E00               	movlw	high (menuAccueil@menuMsgs+20)
  2686  001D2E  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  2687  001D30  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  2688  001D32  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  2689  001D34  A4D8               	btfss	status,2,c
  2690  001D36  0E20               	movlw	32
  2691  001D38  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  2692  001D3A  EC22  F00D         	call	_lcd_putMessage	;wreg free
  2693  001D3E                     
  2694                           ;main.c: 140: lcd_curseurHome();
  2695  001D3E  EC9C  F011         	call	_lcd_curseurHome	;wreg free
  2696  001D42                     
  2697                           ;main.c: 141: lcd_cacheCurseur();
  2698  001D42  EC94  F011         	call	_lcd_cacheCurseur	;wreg free
  2699  001D46                     
  2700                           ;main.c: 142: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2701  001D46  0E02               	movlw	2
  2702  001D48  0100               	movlb	0	; force () banked
  2703  001D4A  6FC3               	movwf	(??_menuAccueil+1)& (0+255),b
  2704  001D4C  0E45               	movlw	69
  2705  001D4E  6FC2               	movwf	??_menuAccueil& (0+255),b
  2706  001D50  0EA9               	movlw	169
  2707  001D52                     u2387:
  2708  001D52  2EE8               	decfsz	wreg,f,c
  2709  001D54  D7FE               	bra	u2387
  2710  001D56  2FC2               	decfsz	??_menuAccueil& (0+255),f,b
  2711  001D58  D7FC               	bra	u2387
  2712  001D5A  2FC3               	decfsz	(??_menuAccueil+1)& (0+255),f,b
  2713  001D5C  D7FA               	bra	u2387
  2714  001D5E  F000 F000          	nop2	
  2715  001D62                     
  2716                           ;main.c: 143: lcd_effaceAffichage();
  2717  001D62  EC8D  F011         	call	_lcd_effaceAffichage	;wreg free
  2718  001D66  0012               	return		;funcret
  2719  001D68                     __end_of_menuAccueil:
  2720                           	opt callstack 0
  2721                           
  2722 ;; *************** function _lcd_cacheCurseur *****************
  2723 ;; Defined at:
  2724 ;;		line 402 in file "Lcd4Lignes.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2738 ;;      Params:         0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    3
  2745 ;; This function calls:
  2746 ;;		_lcd_wrCom
  2747 ;; This function is called by:
  2748 ;;		_menuAccueil
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text9
  2753  002328                     __ptext9:
  2754                           	opt callstack 0
  2755  002328                     _lcd_cacheCurseur:
  2756                           	opt callstack 26
  2757  002328                     
  2758                           ;Lcd4Lignes.c: 404: lcd_wrCom(0x0C);
  2759  002328  0E0C               	movlw	12
  2760  00232A  EC91  F00F         	call	_lcd_wrCom
  2761  00232E  0012               	return		;funcret
  2762  002330                     __end_of_lcd_cacheCurseur:
  2763                           	opt callstack 0
  2764                           
  2765 ;; *************** function _lcd_montreCurseur *****************
  2766 ;; Defined at:
  2767 ;;		line 413 in file "Lcd4Lignes.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    3
  2788 ;; This function calls:
  2789 ;;		_lcd_wrCom
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text10
  2796  002330                     __ptext10:
  2797                           	opt callstack 0
  2798  002330                     _lcd_montreCurseur:
  2799                           	opt callstack 27
  2800  002330                     
  2801                           ;Lcd4Lignes.c: 415: lcd_wrCom(0x0F);
  2802  002330  0E0F               	movlw	15
  2803  002332  EC91  F00F         	call	_lcd_wrCom
  2804  002336  0012               	return		;funcret
  2805  002338                     __end_of_lcd_montreCurseur:
  2806                           	opt callstack 0
  2807                           
  2808 ;; *************** function _lcd_init *****************
  2809 ;; Defined at:
  2810 ;;		line 259 in file "Lcd4Lignes.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2824 ;;      Params:         0       0       0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    5
  2831 ;; This function calls:
  2832 ;;		_lcd_initCGRam
  2833 ;;		_lcd_resetSequence
  2834 ;;		_lcd_wrCom
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text11
  2841  002280                     __ptext11:
  2842                           	opt callstack 0
  2843  002280                     _lcd_init:
  2844                           	opt callstack 25
  2845  002280                     
  2846                           ;Lcd4Lignes.c: 262: lcd_resetSequence();
  2847  002280  ECC7  F00F         	call	_lcd_resetSequence	;wreg free
  2848                           
  2849                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x28);
  2850  002284  0E28               	movlw	40
  2851  002286  EC91  F00F         	call	_lcd_wrCom
  2852                           
  2853                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x0F);
  2854  00228A  0E0F               	movlw	15
  2855  00228C  EC91  F00F         	call	_lcd_wrCom
  2856                           
  2857                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x01);
  2858  002290  0E01               	movlw	1
  2859  002292  EC91  F00F         	call	_lcd_wrCom
  2860                           
  2861                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x06);
  2862  002296  0E06               	movlw	6
  2863  002298  EC91  F00F         	call	_lcd_wrCom
  2864                           
  2865                           ;Lcd4Lignes.c: 267: lcd_wrCom(0x80);
  2866  00229C  0E80               	movlw	128
  2867  00229E  EC91  F00F         	call	_lcd_wrCom
  2868  0022A2                     
  2869                           ;Lcd4Lignes.c: 268: lcd_initCGRam();
  2870  0022A2  ECD5  F00D         	call	_lcd_initCGRam	;wreg free
  2871  0022A6  0012               	return		;funcret
  2872  0022A8                     __end_of_lcd_init:
  2873                           	opt callstack 0
  2874                           
  2875 ;; *************** function _lcd_resetSequence *****************
  2876 ;; Defined at:
  2877 ;;		line 222 in file "Lcd4Lignes.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2891 ;;      Params:         0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0
  2893 ;;      Temps:          0       1       0       0       0       0       0
  2894 ;;      Totals:         0       1       0       0       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    1
  2898 ;; This function calls:
  2899 ;;		_lcd_ecrireDonnees
  2900 ;;		_lcd_strobeEnableBit
  2901 ;; This function is called by:
  2902 ;;		_lcd_init
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text12
  2907  001F8E                     __ptext12:
  2908                           	opt callstack 0
  2909  001F8E                     _lcd_resetSequence:
  2910                           	opt callstack 28
  2911  001F8E                     
  2912                           ;Lcd4Lignes.c: 227: TRISD = 0b00000000;
  2913  001F8E  0E00               	movlw	0
  2914  001F90  6E95               	movwf	149,c	;volatile
  2915  001F92                     
  2916                           ;Lcd4Lignes.c: 229: _delay((unsigned long)((40)*(1000000/4000.0)));
  2917  001F92  0E0D               	movlw	13
  2918  001F94  0100               	movlb	0	; force () banked
  2919  001F96  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2920  001F98  0EFB               	movlw	251
  2921  001F9A                     u2397:
  2922  001F9A  2EE8               	decfsz	wreg,f,c
  2923  001F9C  D7FE               	bra	u2397
  2924  001F9E  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2925  001FA0  D7FC               	bra	u2397
  2926  001FA2  F000 F000          	nop2	
  2927  001FA6                     
  2928                           ;Lcd4Lignes.c: 230: PORTAbits.RA0 = 0;
  2929  001FA6  9080               	bcf	128,0,c	;volatile
  2930  001FA8                     
  2931                           ;Lcd4Lignes.c: 231: PORTAbits.RA1 = 0;
  2932  001FA8  9280               	bcf	128,1,c	;volatile
  2933  001FAA                     
  2934                           ;Lcd4Lignes.c: 233: lcd_ecrireDonnees(0x03);
  2935  001FAA  0E03               	movlw	3
  2936  001FAC  EC77  F011         	call	_lcd_ecrireDonnees
  2937  001FB0                     
  2938                           ;Lcd4Lignes.c: 234: lcd_strobeEnableBit();
  2939  001FB0  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  2940  001FB4                     
  2941                           ;Lcd4Lignes.c: 235: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2942  001FB4  0E03               	movlw	3
  2943  001FB6                     u2407:
  2944  001FB6  2EE8               	decfsz	wreg,f,c
  2945  001FB8  D7FE               	bra	u2407
  2946  001FBA  F000               	nop	
  2947  001FBC                     
  2948                           ;Lcd4Lignes.c: 238: lcd_ecrireDonnees(0x03);
  2949  001FBC  0E03               	movlw	3
  2950  001FBE  EC77  F011         	call	_lcd_ecrireDonnees
  2951  001FC2                     
  2952                           ;Lcd4Lignes.c: 239: lcd_strobeEnableBit();
  2953  001FC2  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  2954  001FC6                     
  2955                           ;Lcd4Lignes.c: 240: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2956  001FC6  0E03               	movlw	3
  2957  001FC8                     u2417:
  2958  001FC8  2EE8               	decfsz	wreg,f,c
  2959  001FCA  D7FE               	bra	u2417
  2960  001FCC  F000               	nop	
  2961  001FCE                     
  2962                           ;Lcd4Lignes.c: 242: lcd_ecrireDonnees(0x03);
  2963  001FCE  0E03               	movlw	3
  2964  001FD0  EC77  F011         	call	_lcd_ecrireDonnees
  2965  001FD4                     
  2966                           ;Lcd4Lignes.c: 243: lcd_strobeEnableBit();
  2967  001FD4  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  2968  001FD8                     
  2969                           ;Lcd4Lignes.c: 244: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2970  001FD8  0E03               	movlw	3
  2971  001FDA                     u2427:
  2972  001FDA  2EE8               	decfsz	wreg,f,c
  2973  001FDC  D7FE               	bra	u2427
  2974  001FDE  F000               	nop	
  2975  001FE0                     
  2976                           ;Lcd4Lignes.c: 246: lcd_ecrireDonnees(0x02);
  2977  001FE0  0E02               	movlw	2
  2978  001FE2  EC77  F011         	call	_lcd_ecrireDonnees
  2979  001FE6                     
  2980                           ;Lcd4Lignes.c: 247: lcd_strobeEnableBit();
  2981  001FE6  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  2982  001FEA                     
  2983                           ;Lcd4Lignes.c: 248: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2984  001FEA  0E03               	movlw	3
  2985  001FEC                     u2437:
  2986  001FEC  2EE8               	decfsz	wreg,f,c
  2987  001FEE  D7FE               	bra	u2437
  2988  001FF0  F000               	nop	
  2989  001FF2                     
  2990                           ;Lcd4Lignes.c: 250: TRISD = 0b00001111;
  2991  001FF2  0E0F               	movlw	15
  2992  001FF4  6E95               	movwf	149,c	;volatile
  2993  001FF6  0012               	return		;funcret
  2994  001FF8                     __end_of_lcd_resetSequence:
  2995                           	opt callstack 0
  2996                           
  2997 ;; *************** function _lcd_initCGRam *****************
  2998 ;; Defined at:
  2999 ;;		line 418 in file "Lcd4Lignes.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  j               1    6[BANK0 ] unsigned char 
  3004 ;;  i               1    5[BANK0 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3014 ;;      Params:         0       0       0       0       0       0       0
  3015 ;;      Locals:         0       2       0       0       0       0       0
  3016 ;;      Temps:          0       2       0       0       0       0       0
  3017 ;;      Totals:         0       4       0       0       0       0       0
  3018 ;;Total ram usage:        4 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    4
  3021 ;; This function calls:
  3022 ;;		_lcd_curseurHome
  3023 ;;		_lcd_wrCom
  3024 ;;		_lcd_wrData
  3025 ;; This function is called by:
  3026 ;;		_lcd_init
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text13
  3031  001BAA                     __ptext13:
  3032                           	opt callstack 0
  3033  001BAA                     _lcd_initCGRam:
  3034                           	opt callstack 25
  3035  001BAA                     
  3036                           ;Lcd4Lignes.c: 420: char i,j;;Lcd4Lignes.c: 422: lcd_wrCom(0x40);
  3037  001BAA  0E40               	movlw	64
  3038  001BAC  EC91  F00F         	call	_lcd_wrCom
  3039  001BB0                     
  3040                           ;Lcd4Lignes.c: 423: for(i=0;i<8;i++)
  3041  001BB0  0E00               	movlw	0
  3042  001BB2  0100               	movlb	0	; force () banked
  3043  001BB4  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3044  001BB6                     
  3045                           ; BSR set to: 0
  3046  001BB6  0E07               	movlw	7
  3047  001BB8  0100               	movlb	0	; force () banked
  3048  001BBA  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3049  001BBC  EFE2  F00D         	goto	u1691
  3050  001BC0  EFE4  F00D         	goto	u1690
  3051  001BC4                     u1691:
  3052  001BC4  EFE6  F00D         	goto	l2329
  3053  001BC8                     u1690:
  3054  001BC8  EF23  F00E         	goto	l2345
  3055  001BCC                     l2329:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;Lcd4Lignes.c: 424: {;Lcd4Lignes.c: 425: for(j=0;j<8;j++)
  3059  001BCC  0E00               	movlw	0
  3060  001BCE  0100               	movlb	0	; force () banked
  3061  001BD0  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3062  001BD2                     
  3063                           ; BSR set to: 0
  3064  001BD2  0E07               	movlw	7
  3065  001BD4  0100               	movlb	0	; force () banked
  3066  001BD6  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3067  001BD8  EFF0  F00D         	goto	u1701
  3068  001BDC  EFF2  F00D         	goto	u1700
  3069  001BE0                     u1701:
  3070  001BE0  EFF4  F00D         	goto	l2335
  3071  001BE4                     u1700:
  3072  001BE4  EF18  F00E         	goto	l2341
  3073  001BE8                     l2335:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;Lcd4Lignes.c: 426: lcd_wrData(matCGRAM[i][j]);
  3077  001BE8  0100               	movlb	0	; force () banked
  3078  001BEA  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3079  001BEC  0D08               	mullw	8
  3080  001BEE  0E54               	movlw	low _matCGRAM
  3081  001BF0  0100               	movlb	0	; force () banked
  3082  001BF2  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3083  001BF4  0E01               	movlw	high _matCGRAM
  3084  001BF6  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3085  001BF8  50F3               	movf	243,w,c
  3086  001BFA  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3087  001BFC  50F4               	movf	244,w,c
  3088  001BFE  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3089  001C00  0100               	movlb	0	; force () banked
  3090  001C02  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3091  001C04  0100               	movlb	0	; force () banked
  3092  001C06  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3093  001C08  6ED9               	movwf	fsr2l,c
  3094  001C0A  0100               	movlb	0	; force () banked
  3095  001C0C  0E00               	movlw	0
  3096  001C0E  0100               	movlb	0	; force () banked
  3097  001C10  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3098  001C12  6EDA               	movwf	fsr2h,c
  3099  001C14  50DF               	movf	indf2,w,c
  3100  001C16  EC10  F011         	call	_lcd_wrData
  3101  001C1A  0100               	movlb	0	; force () banked
  3102  001C1C  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3103  001C1E                     
  3104                           ; BSR set to: 0
  3105  001C1E  0E07               	movlw	7
  3106  001C20  0100               	movlb	0	; force () banked
  3107  001C22  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3108  001C24  EF16  F00E         	goto	u1711
  3109  001C28  EF18  F00E         	goto	u1710
  3110  001C2C                     u1711:
  3111  001C2C  EFF4  F00D         	goto	l2335
  3112  001C30                     u1710:
  3113  001C30                     l2341:
  3114                           
  3115                           ; BSR set to: 0
  3116  001C30  0100               	movlb	0	; force () banked
  3117  001C32  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3118  001C34                     
  3119                           ; BSR set to: 0
  3120  001C34  0E07               	movlw	7
  3121  001C36  0100               	movlb	0	; force () banked
  3122  001C38  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3123  001C3A  EF21  F00E         	goto	u1721
  3124  001C3E  EF23  F00E         	goto	u1720
  3125  001C42                     u1721:
  3126  001C42  EFE6  F00D         	goto	l2329
  3127  001C46                     u1720:
  3128  001C46                     l2345:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;Lcd4Lignes.c: 427: };Lcd4Lignes.c: 428: lcd_curseurHome();
  3132  001C46  EC9C  F011         	call	_lcd_curseurHome	;wreg free
  3133  001C4A  0012               	return		;funcret
  3134  001C4C                     __end_of_lcd_initCGRam:
  3135                           	opt callstack 0
  3136                           
  3137 ;; *************** function _lcd_curseurHome *****************
  3138 ;; Defined at:
  3139 ;;		line 289 in file "Lcd4Lignes.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3153 ;;      Params:         0       0       0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    3
  3160 ;; This function calls:
  3161 ;;		_lcd_wrCom
  3162 ;; This function is called by:
  3163 ;;		_menuAccueil
  3164 ;;		_lcd_initCGRam
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text14
  3169  002338                     __ptext14:
  3170                           	opt callstack 0
  3171  002338                     _lcd_curseurHome:
  3172                           	opt callstack 26
  3173  002338                     
  3174                           ;Lcd4Lignes.c: 291: lcd_wrCom(0x02);
  3175  002338  0E02               	movlw	2
  3176  00233A  EC91  F00F         	call	_lcd_wrCom
  3177  00233E  0012               	return		;funcret
  3178  002340                     __end_of_lcd_curseurHome:
  3179                           	opt callstack 0
  3180                           
  3181 ;; *************** function _initialisation *****************
  3182 ;; Defined at:
  3183 ;;		line 489 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         0       0       0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		_srand
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text15
  3212  0021EC                     __ptext15:
  3213                           	opt callstack 0
  3214  0021EC                     _initialisation:
  3215                           	opt callstack 29
  3216  0021EC                     
  3217                           ;main.c: 491: TRISD = 0;
  3218  0021EC  0E00               	movlw	0
  3219  0021EE  6E95               	movwf	149,c	;volatile
  3220                           
  3221                           ;main.c: 493: ANSELH = 0;
  3222  0021F0  0E00               	movlw	0
  3223  0021F2  6E7F               	movwf	127,c	;volatile
  3224  0021F4                     
  3225                           ;main.c: 494: TRISB = 0xFF;
  3226  0021F4  6893               	setf	147,c	;volatile
  3227                           
  3228                           ;main.c: 496: ANSEL = 0;
  3229  0021F6  0E00               	movlw	0
  3230  0021F8  6E7E               	movwf	126,c	;volatile
  3231                           
  3232                           ;main.c: 497: TRISA = 0;
  3233  0021FA  0E00               	movlw	0
  3234  0021FC  6E92               	movwf	146,c	;volatile
  3235  0021FE                     
  3236                           ;main.c: 501: T1CONbits.TMR1ON = 1;
  3237  0021FE  80CD               	bsf	205,0,c	;volatile
  3238  002200                     
  3239                           ;main.c: 502: srand(TMR1);
  3240  002200  CFCE F0B4          	movff	4046,srand@x	;volatile
  3241  002204  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  3242  002208  EC85  F011         	call	_srand	;wreg free
  3243  00220C                     
  3244                           ;main.c: 505: ANSELbits.ANS7 = 1;
  3245  00220C  8E7E               	bsf	126,7,c	;volatile
  3246  00220E                     
  3247                           ;main.c: 507: ADCON0bits.ADON = 1;
  3248  00220E  80C2               	bsf	194,0,c	;volatile
  3249  002210                     
  3250                           ;main.c: 508: ADCON1 = 0;
  3251  002210  0E00               	movlw	0
  3252  002212  6EC1               	movwf	193,c	;volatile
  3253  002214                     
  3254                           ;main.c: 510: ADCON2bits.ADFM = 0;
  3255  002214  9EC0               	bcf	192,7,c	;volatile
  3256  002216                     
  3257                           ;main.c: 511: ADCON2bits.ACQT = 0;
  3258  002216  0EC7               	movlw	-57
  3259  002218  16C0               	andwf	192,f,c	;volatile
  3260  00221A                     
  3261                           ;main.c: 512: ADCON2bits.ADCS = 0;
  3262  00221A  0EF8               	movlw	-8
  3263  00221C  16C0               	andwf	192,f,c	;volatile
  3264  00221E  0012               	return		;funcret
  3265  002220                     __end_of_initialisation:
  3266                           	opt callstack 0
  3267                           
  3268 ;; *************** function _srand *****************
  3269 ;; Defined at:
  3270 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  x               2    0[BANK0 ] unsigned int 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		status,2
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         0       2       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0
  3287 ;;      Totals:         0       2       0       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_initialisation
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text16
  3298  00230A                     __ptext16:
  3299                           	opt callstack 0
  3300  00230A                     _srand:
  3301                           	opt callstack 29
  3302  00230A  C0B4  F0F6         	movff	srand@x,_randx
  3303  00230E  C0B5  F0F7         	movff	srand@x+1,_randx+1
  3304  002312  0100               	movlb	0	; () banked
  3305  002314  6BF8               	clrf	(_randx+2)& (0+255),b
  3306  002316  6BF9               	clrf	(_randx+3)& (0+255),b
  3307  002318                     
  3308                           ; BSR set to: 0
  3309  002318  0012               	return		;funcret
  3310  00231A                     __end_of_srand:
  3311                           	opt callstack 0
  3312                           
  3313 ;; *************** function _init_serie *****************
  3314 ;; Defined at:
  3315 ;;		line 30 in file "serie.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3329 ;;      Params:         0       0       0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0
  3332 ;;      Totals:         0       0       0       0       0       0       0
  3333 ;;Total ram usage:        0 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text17
  3343  0022D0                     __ptext17:
  3344                           	opt callstack 0
  3345  0022D0                     _init_serie:
  3346                           	opt callstack 30
  3347  0022D0                     
  3348                           ;serie.c: 33: TRISCbits.TRISC7=1;
  3349  0022D0  8E94               	bsf	148,7,c	;volatile
  3350                           
  3351                           ;serie.c: 34: TRISCbits.TRISC6=1;
  3352  0022D2  8C94               	bsf	148,6,c	;volatile
  3353  0022D4                     
  3354                           ;serie.c: 38: SPBRGH=0x00;
  3355  0022D4  0E00               	movlw	0
  3356  0022D6  6EB0               	movwf	176,c	;volatile
  3357                           
  3358                           ;serie.c: 39: SPBRG=25;
  3359  0022D8  0E19               	movlw	25
  3360  0022DA  6EAF               	movwf	175,c	;volatile
  3361  0022DC                     
  3362                           ;serie.c: 40: BAUDCONbits.BRG16=1;
  3363  0022DC  86B8               	bsf	184,3,c	;volatile
  3364  0022DE                     
  3365                           ;serie.c: 41: TXSTAbits.BRGH=1;
  3366  0022DE  84AC               	bsf	172,2,c	;volatile
  3367  0022E0                     
  3368                           ;serie.c: 44: TXSTAbits.SYNC=0;
  3369  0022E0  98AC               	bcf	172,4,c	;volatile
  3370  0022E2                     
  3371                           ;serie.c: 45: TXSTAbits.TXEN=1;
  3372  0022E2  8AAC               	bsf	172,5,c	;volatile
  3373  0022E4                     
  3374                           ;serie.c: 46: RCSTAbits.CREN = 1;
  3375  0022E4  88AB               	bsf	171,4,c	;volatile
  3376  0022E6                     
  3377                           ;serie.c: 47: RCSTAbits.SPEN=1;
  3378  0022E6  8EAB               	bsf	171,7,c	;volatile
  3379                           
  3380                           ;serie.c: 48: ANSEL = 0;
  3381  0022E8  0E00               	movlw	0
  3382  0022EA  6E7E               	movwf	126,c	;volatile
  3383  0022EC  0012               	return		;funcret
  3384  0022EE                     __end_of_init_serie:
  3385                           	opt callstack 0
  3386                           
  3387 ;; *************** function _initTabVue *****************
  3388 ;; Defined at:
  3389 ;;		line 153 in file "main.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  j               1    3[BANK0 ] unsigned char 
  3394 ;;  k               1    4[BANK0 ] unsigned char 
  3395 ;;  i               1    2[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3405 ;;      Params:         0       0       0       0       0       0       0
  3406 ;;      Locals:         0       3       0       0       0       0       0
  3407 ;;      Temps:          0       2       0       0       0       0       0
  3408 ;;      Totals:         0       5       0       0       0       0       0
  3409 ;;Total ram usage:        5 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text18
  3419  0018A4                     __ptext18:
  3420                           	opt callstack 0
  3421  0018A4                     _initTabVue:
  3422                           	opt callstack 30
  3423  0018A4                     
  3424                           ;main.c: 155: for(unsigned char i=0;i<4;i++)
  3425  0018A4  0E00               	movlw	0
  3426  0018A6  0100               	movlb	0	; force () banked
  3427  0018A8  6FB6               	movwf	initTabVue@i& (0+255),b
  3428  0018AA                     
  3429                           ; BSR set to: 0
  3430  0018AA  0E03               	movlw	3
  3431  0018AC  0100               	movlb	0	; force () banked
  3432  0018AE  65B6               	cpfsgt	initTabVue@i& (0+255),b
  3433  0018B0  EF5C  F00C         	goto	u1801
  3434  0018B4  EF5E  F00C         	goto	u1800
  3435  0018B8                     u1801:
  3436  0018B8  EF60  F00C         	goto	l2447
  3437  0018BC                     u1800:
  3438  0018BC  EF9C  F00C         	goto	l2463
  3439  0018C0                     l2447:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;main.c: 156: {;main.c: 157: for(unsigned char j=0;j<20;j++)
  3443  0018C0  0E00               	movlw	0
  3444  0018C2  0100               	movlb	0	; force () banked
  3445  0018C4  6FB7               	movwf	initTabVue@j& (0+255),b
  3446  0018C6                     
  3447                           ; BSR set to: 0
  3448  0018C6  0E13               	movlw	19
  3449  0018C8  0100               	movlb	0	; force () banked
  3450  0018CA  65B7               	cpfsgt	initTabVue@j& (0+255),b
  3451  0018CC  EF6A  F00C         	goto	u1811
  3452  0018D0  EF6C  F00C         	goto	u1810
  3453  0018D4                     u1811:
  3454  0018D4  EF6E  F00C         	goto	l2453
  3455  0018D8                     u1810:
  3456  0018D8  EF91  F00C         	goto	l2459
  3457  0018DC                     l2453:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;main.c: 158: {;main.c: 159: m_tabVue[i][j]=1;
  3461  0018DC  0100               	movlb	0	; force () banked
  3462  0018DE  51B6               	movf	initTabVue@i& (0+255),w,b
  3463  0018E0  0D15               	mullw	21
  3464  0018E2  0E00               	movlw	low _m_tabVue
  3465  0018E4  0100               	movlb	0	; force () banked
  3466  0018E6  6FB4               	movwf	??_initTabVue& (0+255),b
  3467  0018E8  0E01               	movlw	high _m_tabVue
  3468  0018EA  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  3469  0018EC  50F3               	movf	243,w,c
  3470  0018EE  27B4               	addwf	??_initTabVue& (0+255),f,b
  3471  0018F0  50F4               	movf	244,w,c
  3472  0018F2  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3473  0018F4  0100               	movlb	0	; force () banked
  3474  0018F6  51B7               	movf	initTabVue@j& (0+255),w,b
  3475  0018F8  0100               	movlb	0	; force () banked
  3476  0018FA  25B4               	addwf	??_initTabVue& (0+255),w,b
  3477  0018FC  6ED9               	movwf	fsr2l,c
  3478  0018FE  0100               	movlb	0	; force () banked
  3479  001900  0E00               	movlw	0
  3480  001902  0100               	movlb	0	; force () banked
  3481  001904  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3482  001906  6EDA               	movwf	fsr2h,c
  3483  001908  0E01               	movlw	1
  3484  00190A  6EDF               	movwf	indf2,c
  3485  00190C                     
  3486                           ; BSR set to: 0
  3487  00190C  0100               	movlb	0	; force () banked
  3488  00190E  2BB7               	incf	initTabVue@j& (0+255),f,b
  3489  001910                     
  3490                           ; BSR set to: 0
  3491  001910  0E13               	movlw	19
  3492  001912  0100               	movlb	0	; force () banked
  3493  001914  65B7               	cpfsgt	initTabVue@j& (0+255),b
  3494  001916  EF8F  F00C         	goto	u1821
  3495  00191A  EF91  F00C         	goto	u1820
  3496  00191E                     u1821:
  3497  00191E  EF6E  F00C         	goto	l2453
  3498  001922                     u1820:
  3499  001922                     l2459:
  3500                           
  3501                           ; BSR set to: 0
  3502  001922  0100               	movlb	0	; force () banked
  3503  001924  2BB6               	incf	initTabVue@i& (0+255),f,b
  3504  001926                     
  3505                           ; BSR set to: 0
  3506  001926  0E03               	movlw	3
  3507  001928  0100               	movlb	0	; force () banked
  3508  00192A  65B6               	cpfsgt	initTabVue@i& (0+255),b
  3509  00192C  EF9A  F00C         	goto	u1831
  3510  001930  EF9C  F00C         	goto	u1830
  3511  001934                     u1831:
  3512  001934  EF60  F00C         	goto	l2447
  3513  001938                     u1830:
  3514  001938                     l2463:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;main.c: 160: };main.c: 161: };main.c: 162: for(unsigned char k=0;k<4;k++)
  3518  001938  0E00               	movlw	0
  3519  00193A  0100               	movlb	0	; force () banked
  3520  00193C  6FB8               	movwf	initTabVue@k& (0+255),b
  3521  00193E                     
  3522                           ; BSR set to: 0
  3523  00193E  0E03               	movlw	3
  3524  001940  0100               	movlb	0	; force () banked
  3525  001942  65B8               	cpfsgt	initTabVue@k& (0+255),b
  3526  001944  EFA6  F00C         	goto	u1841
  3527  001948  EFA8  F00C         	goto	u1840
  3528  00194C                     u1841:
  3529  00194C  EFAA  F00C         	goto	l2469
  3530  001950                     u1840:
  3531  001950  EFC0  F00C         	goto	l116
  3532  001954                     l2469:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;main.c: 163: {;main.c: 164: m_tabVue[k][20]='\0';
  3536  001954  0100               	movlb	0	; force () banked
  3537  001956  51B8               	movf	initTabVue@k& (0+255),w,b
  3538  001958  0D15               	mullw	21
  3539  00195A  0E14               	movlw	low (_m_tabVue+20)
  3540  00195C  24F3               	addwf	243,w,c
  3541  00195E  6ED9               	movwf	fsr2l,c
  3542  001960  0E01               	movlw	high (_m_tabVue+20)
  3543  001962  20F4               	addwfc	prodh,w,c
  3544  001964  6EDA               	movwf	fsr2h,c
  3545  001966  0E00               	movlw	0
  3546  001968  6EDF               	movwf	indf2,c
  3547  00196A                     
  3548                           ; BSR set to: 0
  3549  00196A  0100               	movlb	0	; force () banked
  3550  00196C  2BB8               	incf	initTabVue@k& (0+255),f,b
  3551  00196E                     
  3552                           ; BSR set to: 0
  3553  00196E  0E03               	movlw	3
  3554  001970  0100               	movlb	0	; force () banked
  3555  001972  65B8               	cpfsgt	initTabVue@k& (0+255),b
  3556  001974  EFBE  F00C         	goto	u1851
  3557  001978  EFC0  F00C         	goto	u1850
  3558  00197C                     u1851:
  3559  00197C  EFAA  F00C         	goto	l2469
  3560  001980                     u1850:
  3561  001980                     l116:
  3562                           
  3563                           ; BSR set to: 0
  3564  001980  0012               	return		;funcret
  3565  001982                     __end_of_initTabVue:
  3566                           	opt callstack 0
  3567                           
  3568 ;; *************** function _gagne *****************
  3569 ;; Defined at:
  3570 ;;		line 426 in file "main.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  pMines          2   16[BANK0 ] PTR int 
  3573 ;;		 -> main@nbMines(2), 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  j               1   25[BANK0 ] unsigned char 
  3576 ;;  i               1   24[BANK0 ] unsigned char 
  3577 ;;  resteTuiles     1   23[BANK0 ] unsigned char 
  3578 ;;  compteurBomb    1   22[BANK0 ] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      unsigned char 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3588 ;;      Params:         0       2       0       0       0       0       0
  3589 ;;      Locals:         0       4       0       0       0       0       0
  3590 ;;      Temps:          0       4       0       0       0       0       0
  3591 ;;      Totals:         0      10       0       0       0       0       0
  3592 ;;Total ram usage:       10 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    6
  3595 ;; This function calls:
  3596 ;;		_afficheGagne
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text19
  3603  000E44                     __ptext19:
  3604                           	opt callstack 0
  3605  000E44                     _gagne:
  3606                           	opt callstack 24
  3607  000E44                     
  3608                           ;main.c: 428: unsigned char compteurBombe=0;
  3609  000E44  0E00               	movlw	0
  3610  000E46  0100               	movlb	0	; force () banked
  3611  000E48  6FCA               	movwf	gagne@compteurBombe& (0+255),b
  3612                           
  3613                           ;main.c: 429: unsigned char resteTuiles=0;
  3614  000E4A  0E00               	movlw	0
  3615  000E4C  0100               	movlb	0	; force () banked
  3616  000E4E  6FCB               	movwf	gagne@resteTuiles& (0+255),b
  3617                           
  3618                           ;main.c: 430: unsigned char i=0;
  3619  000E50  0E00               	movlw	0
  3620  000E52  0100               	movlb	0	; force () banked
  3621  000E54  6FCC               	movwf	gagne@i& (0+255),b
  3622                           
  3623                           ;main.c: 431: unsigned char j=0;
  3624  000E56  0E00               	movlw	0
  3625  000E58  0100               	movlb	0	; force () banked
  3626  000E5A  6FCD               	movwf	gagne@j& (0+255),b
  3627                           
  3628                           ;main.c: 432: while((i<4)||(j<20))
  3629  000E5C  EF20  F008         	goto	l2615
  3630  000E60                     l2581:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;main.c: 433: {;main.c: 434: for(i=0;i<4;i++)
  3634  000E60  0E00               	movlw	0
  3635  000E62  0100               	movlb	0	; force () banked
  3636  000E64  6FCC               	movwf	gagne@i& (0+255),b
  3637  000E66                     
  3638                           ; BSR set to: 0
  3639  000E66  0E03               	movlw	3
  3640  000E68  0100               	movlb	0	; force () banked
  3641  000E6A  65CC               	cpfsgt	gagne@i& (0+255),b
  3642  000E6C  EF3A  F007         	goto	u2071
  3643  000E70  EF3C  F007         	goto	u2070
  3644  000E74                     u2071:
  3645  000E74  EF3E  F007         	goto	l2587
  3646  000E78                     u2070:
  3647  000E78  EF20  F008         	goto	l2615
  3648  000E7C                     l2587:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;main.c: 435: {;main.c: 436: for(j=0;j<20;j++)
  3652  000E7C  0E00               	movlw	0
  3653  000E7E  0100               	movlb	0	; force () banked
  3654  000E80  6FCD               	movwf	gagne@j& (0+255),b
  3655  000E82                     
  3656                           ; BSR set to: 0
  3657  000E82  0E13               	movlw	19
  3658  000E84  0100               	movlb	0	; force () banked
  3659  000E86  65CD               	cpfsgt	gagne@j& (0+255),b
  3660  000E88  EF48  F007         	goto	u2081
  3661  000E8C  EF4A  F007         	goto	u2080
  3662  000E90                     u2081:
  3663  000E90  EF4C  F007         	goto	l2593
  3664  000E94                     u2080:
  3665  000E94  EF15  F008         	goto	l2611
  3666  000E98                     l2593:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;main.c: 437: {;main.c: 438: if((m_tabVue[i][j]==1||m_tabVue[i][j]==3)&&m_tabMines[i][j]
      +                          ==2)
  3670  000E98  0100               	movlb	0	; force () banked
  3671  000E9A  51CC               	movf	gagne@i& (0+255),w,b
  3672  000E9C  0D15               	mullw	21
  3673  000E9E  0E00               	movlw	low _m_tabVue
  3674  000EA0  0100               	movlb	0	; force () banked
  3675  000EA2  6FC6               	movwf	??_gagne& (0+255),b
  3676  000EA4  0E01               	movlw	high _m_tabVue
  3677  000EA6  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3678  000EA8  50F3               	movf	243,w,c
  3679  000EAA  27C6               	addwf	??_gagne& (0+255),f,b
  3680  000EAC  50F4               	movf	244,w,c
  3681  000EAE  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3682  000EB0  0100               	movlb	0	; force () banked
  3683  000EB2  51CD               	movf	gagne@j& (0+255),w,b
  3684  000EB4  0100               	movlb	0	; force () banked
  3685  000EB6  25C6               	addwf	??_gagne& (0+255),w,b
  3686  000EB8  6ED9               	movwf	fsr2l,c
  3687  000EBA  0100               	movlb	0	; force () banked
  3688  000EBC  0E00               	movlw	0
  3689  000EBE  0100               	movlb	0	; force () banked
  3690  000EC0  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3691  000EC2  6EDA               	movwf	fsr2h,c
  3692  000EC4  04DE               	decf	postinc2,w,c
  3693  000EC6  B4D8               	btfsc	status,2,c
  3694  000EC8  EF68  F007         	goto	u2091
  3695  000ECC  EF6A  F007         	goto	u2090
  3696  000ED0                     u2091:
  3697  000ED0  EF89  F007         	goto	l2597
  3698  000ED4                     u2090:
  3699  000ED4                     
  3700                           ; BSR set to: 0
  3701  000ED4  0100               	movlb	0	; force () banked
  3702  000ED6  51CC               	movf	gagne@i& (0+255),w,b
  3703  000ED8  0D15               	mullw	21
  3704  000EDA  0E00               	movlw	low _m_tabVue
  3705  000EDC  0100               	movlb	0	; force () banked
  3706  000EDE  6FC6               	movwf	??_gagne& (0+255),b
  3707  000EE0  0E01               	movlw	high _m_tabVue
  3708  000EE2  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3709  000EE4  50F3               	movf	243,w,c
  3710  000EE6  27C6               	addwf	??_gagne& (0+255),f,b
  3711  000EE8  50F4               	movf	244,w,c
  3712  000EEA  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3713  000EEC  0100               	movlb	0	; force () banked
  3714  000EEE  51CD               	movf	gagne@j& (0+255),w,b
  3715  000EF0  0100               	movlb	0	; force () banked
  3716  000EF2  25C6               	addwf	??_gagne& (0+255),w,b
  3717  000EF4  6ED9               	movwf	fsr2l,c
  3718  000EF6  0100               	movlb	0	; force () banked
  3719  000EF8  0E00               	movlw	0
  3720  000EFA  0100               	movlb	0	; force () banked
  3721  000EFC  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3722  000EFE  6EDA               	movwf	fsr2h,c
  3723  000F00  0E03               	movlw	3
  3724  000F02  18DE               	xorwf	postinc2,w,c
  3725  000F04  A4D8               	btfss	status,2,c
  3726  000F06  EF87  F007         	goto	u2101
  3727  000F0A  EF89  F007         	goto	u2100
  3728  000F0E                     u2101:
  3729  000F0E  EFAC  F007         	goto	l2601
  3730  000F12                     u2100:
  3731  000F12                     l2597:
  3732                           
  3733                           ; BSR set to: 0
  3734  000F12  0100               	movlb	0	; force () banked
  3735  000F14  51CC               	movf	gagne@i& (0+255),w,b
  3736  000F16  0D15               	mullw	21
  3737  000F18  0E60               	movlw	low _m_tabMines
  3738  000F1A  0100               	movlb	0	; force () banked
  3739  000F1C  6FC6               	movwf	??_gagne& (0+255),b
  3740  000F1E  0E00               	movlw	high _m_tabMines
  3741  000F20  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3742  000F22  50F3               	movf	243,w,c
  3743  000F24  27C6               	addwf	??_gagne& (0+255),f,b
  3744  000F26  50F4               	movf	244,w,c
  3745  000F28  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3746  000F2A  0100               	movlb	0	; force () banked
  3747  000F2C  51CD               	movf	gagne@j& (0+255),w,b
  3748  000F2E  0100               	movlb	0	; force () banked
  3749  000F30  25C6               	addwf	??_gagne& (0+255),w,b
  3750  000F32  6ED9               	movwf	fsr2l,c
  3751  000F34  0100               	movlb	0	; force () banked
  3752  000F36  0E00               	movlw	0
  3753  000F38  0100               	movlb	0	; force () banked
  3754  000F3A  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3755  000F3C  6EDA               	movwf	fsr2h,c
  3756  000F3E  0E02               	movlw	2
  3757  000F40  18DE               	xorwf	postinc2,w,c
  3758  000F42  A4D8               	btfss	status,2,c
  3759  000F44  EFA6  F007         	goto	u2111
  3760  000F48  EFA8  F007         	goto	u2110
  3761  000F4C                     u2111:
  3762  000F4C  EFAC  F007         	goto	l2601
  3763  000F50                     u2110:
  3764  000F50                     
  3765                           ; BSR set to: 0
  3766                           ;main.c: 439: {;main.c: 440: compteurBombe++;
  3767  000F50  0100               	movlb	0	; force () banked
  3768  000F52  2BCA               	incf	gagne@compteurBombe& (0+255),f,b
  3769                           
  3770                           ;main.c: 441: }
  3771  000F54  EF0A  F008         	goto	l217
  3772  000F58                     l2601:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 442: else if((m_tabVue[i][j]==1||m_tabVue[i][j]==3)&&m_tabMines[i][j]!=2)
  3776  000F58  0100               	movlb	0	; force () banked
  3777  000F5A  51CC               	movf	gagne@i& (0+255),w,b
  3778  000F5C  0D15               	mullw	21
  3779  000F5E  0E00               	movlw	low _m_tabVue
  3780  000F60  0100               	movlb	0	; force () banked
  3781  000F62  6FC6               	movwf	??_gagne& (0+255),b
  3782  000F64  0E01               	movlw	high _m_tabVue
  3783  000F66  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3784  000F68  50F3               	movf	243,w,c
  3785  000F6A  27C6               	addwf	??_gagne& (0+255),f,b
  3786  000F6C  50F4               	movf	244,w,c
  3787  000F6E  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3788  000F70  0100               	movlb	0	; force () banked
  3789  000F72  51CD               	movf	gagne@j& (0+255),w,b
  3790  000F74  0100               	movlb	0	; force () banked
  3791  000F76  25C6               	addwf	??_gagne& (0+255),w,b
  3792  000F78  6ED9               	movwf	fsr2l,c
  3793  000F7A  0100               	movlb	0	; force () banked
  3794  000F7C  0E00               	movlw	0
  3795  000F7E  0100               	movlb	0	; force () banked
  3796  000F80  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3797  000F82  6EDA               	movwf	fsr2h,c
  3798  000F84  04DE               	decf	postinc2,w,c
  3799  000F86  B4D8               	btfsc	status,2,c
  3800  000F88  EFC8  F007         	goto	u2121
  3801  000F8C  EFCA  F007         	goto	u2120
  3802  000F90                     u2121:
  3803  000F90  EFE9  F007         	goto	l2605
  3804  000F94                     u2120:
  3805  000F94                     
  3806                           ; BSR set to: 0
  3807  000F94  0100               	movlb	0	; force () banked
  3808  000F96  51CC               	movf	gagne@i& (0+255),w,b
  3809  000F98  0D15               	mullw	21
  3810  000F9A  0E00               	movlw	low _m_tabVue
  3811  000F9C  0100               	movlb	0	; force () banked
  3812  000F9E  6FC6               	movwf	??_gagne& (0+255),b
  3813  000FA0  0E01               	movlw	high _m_tabVue
  3814  000FA2  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3815  000FA4  50F3               	movf	243,w,c
  3816  000FA6  27C6               	addwf	??_gagne& (0+255),f,b
  3817  000FA8  50F4               	movf	244,w,c
  3818  000FAA  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3819  000FAC  0100               	movlb	0	; force () banked
  3820  000FAE  51CD               	movf	gagne@j& (0+255),w,b
  3821  000FB0  0100               	movlb	0	; force () banked
  3822  000FB2  25C6               	addwf	??_gagne& (0+255),w,b
  3823  000FB4  6ED9               	movwf	fsr2l,c
  3824  000FB6  0100               	movlb	0	; force () banked
  3825  000FB8  0E00               	movlw	0
  3826  000FBA  0100               	movlb	0	; force () banked
  3827  000FBC  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3828  000FBE  6EDA               	movwf	fsr2h,c
  3829  000FC0  0E03               	movlw	3
  3830  000FC2  18DE               	xorwf	postinc2,w,c
  3831  000FC4  A4D8               	btfss	status,2,c
  3832  000FC6  EFE7  F007         	goto	u2131
  3833  000FCA  EFE9  F007         	goto	u2130
  3834  000FCE                     u2131:
  3835  000FCE  EF0A  F008         	goto	l217
  3836  000FD2                     u2130:
  3837  000FD2                     l2605:
  3838                           
  3839                           ; BSR set to: 0
  3840  000FD2  0100               	movlb	0	; force () banked
  3841  000FD4  51CC               	movf	gagne@i& (0+255),w,b
  3842  000FD6  0D15               	mullw	21
  3843  000FD8  0E60               	movlw	low _m_tabMines
  3844  000FDA  0100               	movlb	0	; force () banked
  3845  000FDC  6FC6               	movwf	??_gagne& (0+255),b
  3846  000FDE  0E00               	movlw	high _m_tabMines
  3847  000FE0  6FC7               	movwf	(??_gagne+1)& (0+255),b
  3848  000FE2  50F3               	movf	243,w,c
  3849  000FE4  27C6               	addwf	??_gagne& (0+255),f,b
  3850  000FE6  50F4               	movf	244,w,c
  3851  000FE8  23C7               	addwfc	(??_gagne+1)& (0+255),f,b
  3852  000FEA  0100               	movlb	0	; force () banked
  3853  000FEC  51CD               	movf	gagne@j& (0+255),w,b
  3854  000FEE  0100               	movlb	0	; force () banked
  3855  000FF0  25C6               	addwf	??_gagne& (0+255),w,b
  3856  000FF2  6ED9               	movwf	fsr2l,c
  3857  000FF4  0100               	movlb	0	; force () banked
  3858  000FF6  0E00               	movlw	0
  3859  000FF8  0100               	movlb	0	; force () banked
  3860  000FFA  21C7               	addwfc	(??_gagne+1)& (0+255),w,b
  3861  000FFC  6EDA               	movwf	fsr2h,c
  3862  000FFE  0E02               	movlw	2
  3863  001000  18DE               	xorwf	postinc2,w,c
  3864  001002  B4D8               	btfsc	status,2,c
  3865  001004  EF06  F008         	goto	u2141
  3866  001008  EF08  F008         	goto	u2140
  3867  00100C                     u2141:
  3868  00100C  EF0A  F008         	goto	l217
  3869  001010                     u2140:
  3870  001010                     
  3871                           ; BSR set to: 0
  3872                           ;main.c: 443: resteTuiles++;
  3873  001010  0100               	movlb	0	; force () banked
  3874  001012  2BCB               	incf	gagne@resteTuiles& (0+255),f,b
  3875  001014                     l217:
  3876                           
  3877                           ; BSR set to: 0
  3878  001014  0100               	movlb	0	; force () banked
  3879  001016  2BCD               	incf	gagne@j& (0+255),f,b
  3880  001018                     
  3881                           ; BSR set to: 0
  3882  001018  0E13               	movlw	19
  3883  00101A  0100               	movlb	0	; force () banked
  3884  00101C  65CD               	cpfsgt	gagne@j& (0+255),b
  3885  00101E  EF13  F008         	goto	u2151
  3886  001022  EF15  F008         	goto	u2150
  3887  001026                     u2151:
  3888  001026  EF4C  F007         	goto	l2593
  3889  00102A                     u2150:
  3890  00102A                     l2611:
  3891                           
  3892                           ; BSR set to: 0
  3893  00102A  0100               	movlb	0	; force () banked
  3894  00102C  2BCC               	incf	gagne@i& (0+255),f,b
  3895  00102E                     
  3896                           ; BSR set to: 0
  3897  00102E  0E03               	movlw	3
  3898  001030  0100               	movlb	0	; force () banked
  3899  001032  65CC               	cpfsgt	gagne@i& (0+255),b
  3900  001034  EF1E  F008         	goto	u2161
  3901  001038  EF20  F008         	goto	u2160
  3902  00103C                     u2161:
  3903  00103C  EF3E  F007         	goto	l2587
  3904  001040                     u2160:
  3905  001040                     l2615:
  3906                           
  3907                           ; BSR set to: 0
  3908  001040  0E03               	movlw	3
  3909  001042  0100               	movlb	0	; force () banked
  3910  001044  65CC               	cpfsgt	gagne@i& (0+255),b
  3911  001046  EF27  F008         	goto	u2171
  3912  00104A  EF29  F008         	goto	u2170
  3913  00104E                     u2171:
  3914  00104E  EF30  F007         	goto	l2581
  3915  001052                     u2170:
  3916  001052                     
  3917                           ; BSR set to: 0
  3918  001052  0E13               	movlw	19
  3919  001054  0100               	movlb	0	; force () banked
  3920  001056  65CD               	cpfsgt	gagne@j& (0+255),b
  3921  001058  EF30  F008         	goto	u2181
  3922  00105C  EF32  F008         	goto	u2180
  3923  001060                     u2181:
  3924  001060  EF30  F007         	goto	l2581
  3925  001064                     u2180:
  3926  001064                     
  3927                           ; BSR set to: 0
  3928                           ;main.c: 444: };main.c: 445: };main.c: 446: };main.c: 447: if(compteurBombe==(*pMines)&&
      +                          (!resteTuiles))
  3929  001064  C0C4  FFD9         	movff	gagne@pMines,fsr2l
  3930  001068  C0C5  FFDA         	movff	gagne@pMines+1,fsr2h
  3931  00106C  0100               	movlb	0	; force () banked
  3932  00106E  51CA               	movf	gagne@compteurBombe& (0+255),w,b
  3933  001070  0100               	movlb	0	; force () banked
  3934  001072  6FC8               	movwf	(??_gagne+2)& (0+255),b
  3935  001074  6BC9               	clrf	(??_gagne+3)& (0+255),b
  3936  001076  50DE               	movf	postinc2,w,c
  3937  001078  19C8               	xorwf	(??_gagne+2)& (0+255),w,b
  3938  00107A  E107               	bnz	u2191
  3939  00107C  50DE               	movf	postinc2,w,c
  3940  00107E  19C9               	xorwf	(??_gagne+3)& (0+255),w,b
  3941  001080  A4D8               	btfss	status,2,c
  3942  001082  EF45  F008         	goto	u2191
  3943  001086  EF47  F008         	goto	u2190
  3944  00108A                     u2191:
  3945  00108A  EF5C  F008         	goto	l2633
  3946  00108E                     u2190:
  3947  00108E                     
  3948                           ; BSR set to: 0
  3949  00108E  0100               	movlb	0	; force () banked
  3950  001090  51CB               	movf	gagne@resteTuiles& (0+255),w,b
  3951  001092  A4D8               	btfss	status,2,c
  3952  001094  EF4E  F008         	goto	u2201
  3953  001098  EF50  F008         	goto	u2200
  3954  00109C                     u2201:
  3955  00109C  EF5C  F008         	goto	l2633
  3956  0010A0                     u2200:
  3957  0010A0                     
  3958                           ; BSR set to: 0
  3959                           ;main.c: 448: {;main.c: 449: afficheGagne();
  3960  0010A0  ECFC  F00F         	call	_afficheGagne	;wreg free
  3961  0010A4                     
  3962                           ;main.c: 450: (*pMines)++;
  3963  0010A4  C0C4  FFD9         	movff	gagne@pMines,fsr2l
  3964  0010A8  C0C5  FFDA         	movff	gagne@pMines+1,fsr2h
  3965  0010AC  2ADE               	incf	postinc2,f,c
  3966  0010AE  0E00               	movlw	0
  3967  0010B0  22DD               	addwfc	postdec2,f,c
  3968  0010B2                     
  3969                           ;main.c: 451: return 1;
  3970  0010B2  0E01               	movlw	1
  3971  0010B4  EF5D  F008         	goto	l223
  3972  0010B8                     l2633:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;main.c: 453: else;main.c: 454: return 0;
  3976  0010B8  0E00               	movlw	0
  3977  0010BA                     l223:
  3978  0010BA  0012               	return		;funcret
  3979  0010BC                     __end_of_gagne:
  3980                           	opt callstack 0
  3981                           
  3982 ;; *************** function _afficheGagne *****************
  3983 ;; Defined at:
  3984 ;;		line 457 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3998 ;;      Params:         0       0       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0
  4000 ;;      Temps:          0       2       0       0       0       0       0
  4001 ;;      Totals:         0       2       0       0       0       0       0
  4002 ;;Total ram usage:        2 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    5
  4005 ;; This function calls:
  4006 ;;		_lcd_effaceAffichage
  4007 ;;		_lcd_gotoXY
  4008 ;;		_lcd_putMessage
  4009 ;; This function is called by:
  4010 ;;		_gagne
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text20
  4015  001FF8                     __ptext20:
  4016                           	opt callstack 0
  4017  001FF8                     _afficheGagne:
  4018                           	opt callstack 24
  4019  001FF8                     
  4020                           ;main.c: 459: lcd_effaceAffichage();
  4021  001FF8  EC8D  F011         	call	_lcd_effaceAffichage	;wreg free
  4022                           
  4023                           ;main.c: 460: lcd_gotoXY(5,2);
  4024  001FFC  0E02               	movlw	2
  4025  001FFE  0100               	movlb	0	; force () banked
  4026  002000  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4027  002002  0E05               	movlw	5
  4028  002004  ECB4  F00E         	call	_lcd_gotoXY
  4029  002008                     
  4030                           ;main.c: 461: lcd_putMessage("YOU WIN!");
  4031  002008  0E29               	movlw	low STR_1
  4032  00200A  0100               	movlb	0	; force () banked
  4033  00200C  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  4034  00200E  0E06               	movlw	high STR_1
  4035  002010  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4036  002012  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  4037  002014  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4038  002016  A4D8               	btfss	status,2,c
  4039  002018  0E00               	movlw	low (__mediumconst shr (0+16))
  4040  00201A  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4041  00201C  EC22  F00D         	call	_lcd_putMessage	;wreg free
  4042  002020                     
  4043                           ;main.c: 462: lcd_gotoXY(6,3);
  4044  002020  0E03               	movlw	3
  4045  002022  0100               	movlb	0	; force () banked
  4046  002024  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4047  002026  0E06               	movlw	6
  4048  002028  ECB4  F00E         	call	_lcd_gotoXY
  4049                           
  4050                           ;main.c: 463: lcd_putMessage("+1 Mine");
  4051  00202C  0E32               	movlw	low STR_2
  4052  00202E  0100               	movlb	0	; force () banked
  4053  002030  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  4054  002032  0E06               	movlw	high STR_2
  4055  002034  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4056  002036  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  4057  002038  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  4058  00203A  A4D8               	btfss	status,2,c
  4059  00203C  0E00               	movlw	low (__mediumconst shr (0+16))
  4060  00203E  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  4061  002040  EC22  F00D         	call	_lcd_putMessage	;wreg free
  4062  002044                     
  4063                           ;main.c: 464: _delay((unsigned long)((2500)*(1000000/4000.0)));
  4064  002044  0E04               	movlw	4
  4065  002046  0100               	movlb	0	; force () banked
  4066  002048  6FC3               	movwf	(??_afficheGagne+1)& (0+255),b
  4067  00204A  0E2C               	movlw	44
  4068  00204C  6FC2               	movwf	??_afficheGagne& (0+255),b
  4069  00204E  0EAB               	movlw	171
  4070  002050                     u2447:
  4071  002050  2EE8               	decfsz	wreg,f,c
  4072  002052  D7FE               	bra	u2447
  4073  002054  2FC2               	decfsz	??_afficheGagne& (0+255),f,b
  4074  002056  D7FC               	bra	u2447
  4075  002058  2FC3               	decfsz	(??_afficheGagne+1)& (0+255),f,b
  4076  00205A  D7FA               	bra	u2447
  4077  00205C  F000 F000          	nop2	
  4078  002060  0012               	return		;funcret
  4079  002062                     __end_of_afficheGagne:
  4080                           	opt callstack 0
  4081                           
  4082 ;; *************** function _lcd_effaceAffichage *****************
  4083 ;; Defined at:
  4084 ;;		line 277 in file "Lcd4Lignes.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4098 ;;      Params:         0       0       0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		_lcd_wrCom
  4107 ;; This function is called by:
  4108 ;;		_menuAccueil
  4109 ;;		_afficheGagne
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text21
  4114  00231A                     __ptext21:
  4115                           	opt callstack 0
  4116  00231A                     _lcd_effaceAffichage:
  4117                           	opt callstack 26
  4118  00231A                     
  4119                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x01);
  4120  00231A  0E01               	movlw	1
  4121  00231C  EC91  F00F         	call	_lcd_wrCom
  4122                           
  4123                           ;Lcd4Lignes.c: 280: lcd_wrCom(0x80);
  4124  002320  0E80               	movlw	128
  4125  002322  EC91  F00F         	call	_lcd_wrCom
  4126  002326  0012               	return		;funcret
  4127  002328                     __end_of_lcd_effaceAffichage:
  4128                           	opt callstack 0
  4129                           
  4130 ;; *************** function _deplace *****************
  4131 ;; Defined at:
  4132 ;;		line 327 in file "main.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  x               2    5[BANK0 ] PTR unsigned char 
  4135 ;;		 -> main@posX(1), 
  4136 ;;  y               2    7[BANK0 ] PTR unsigned char 
  4137 ;;		 -> main@posY(1), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4149 ;;      Params:         0       4       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0
  4151 ;;      Temps:          0       1       0       0       0       0       0
  4152 ;;      Totals:         0       5       0       0       0       0       0
  4153 ;;Total ram usage:        5 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    4
  4156 ;; This function calls:
  4157 ;;		_getAnalog
  4158 ;;		_lcd_gotoXY
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text22
  4165  00171E                     __ptext22:
  4166                           	opt callstack 0
  4167  00171E                     _deplace:
  4168                           	opt callstack 26
  4169  00171E                     
  4170                           ;main.c: 329: if(getAnalog(7)>180)
  4171  00171E  0E07               	movlw	7
  4172  001720  EC2A  F011         	call	_getAnalog
  4173  001724  0100               	movlb	0	; force () banked
  4174  001726  6FBD               	movwf	??_deplace& (0+255),b
  4175  001728  0EB4               	movlw	180
  4176  00172A  65BD               	cpfsgt	??_deplace& (0+255),b
  4177  00172C  EF9A  F00B         	goto	u1991
  4178  001730  EF9C  F00B         	goto	u1990
  4179  001734                     u1991:
  4180  001734  EFBD  F00B         	goto	l2557
  4181  001738                     u1990:
  4182  001738                     
  4183                           ; BSR set to: 0
  4184                           ;main.c: 330: {;main.c: 331: (*x)=(*x)-1;
  4185  001738  C0B9  FFD9         	movff	deplace@x,fsr2l
  4186  00173C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4187  001740  50DF               	movf	indf2,w,c
  4188  001742  0100               	movlb	0	; force () banked
  4189  001744  6FBD               	movwf	??_deplace& (0+255),b
  4190  001746  05BD               	decf	??_deplace& (0+255),w,b
  4191  001748  C0B9  FFD9         	movff	deplace@x,fsr2l
  4192  00174C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4193  001750  6EDF               	movwf	indf2,c
  4194  001752                     
  4195                           ; BSR set to: 0
  4196                           ;main.c: 332: if((*x)<1)
  4197  001752  C0B9  FFD9         	movff	deplace@x,fsr2l
  4198  001756  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4199  00175A  50DF               	movf	indf2,w,c
  4200  00175C  A4D8               	btfss	status,2,c
  4201  00175E  EFB3  F00B         	goto	u2001
  4202  001762  EFB5  F00B         	goto	u2000
  4203  001766                     u2001:
  4204  001766  EFE9  F00B         	goto	l2563
  4205  00176A                     u2000:
  4206  00176A                     
  4207                           ; BSR set to: 0
  4208                           ;main.c: 333: (*x)=20;
  4209  00176A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4210  00176E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4211  001772  0E14               	movlw	20
  4212  001774  6EDF               	movwf	indf2,c
  4213  001776  EFE9  F00B         	goto	l2563
  4214  00177A                     l2557:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 335: else if(getAnalog(7)<80)
  4218  00177A  0E07               	movlw	7
  4219  00177C  EC2A  F011         	call	_getAnalog
  4220  001780  0100               	movlb	0	; force () banked
  4221  001782  6FBD               	movwf	??_deplace& (0+255),b
  4222  001784  0E50               	movlw	80
  4223  001786  61BD               	cpfslt	??_deplace& (0+255),b
  4224  001788  EFC8  F00B         	goto	u2011
  4225  00178C  EFCA  F00B         	goto	u2010
  4226  001790                     u2011:
  4227  001790  EFE9  F00B         	goto	l2563
  4228  001794                     u2010:
  4229  001794                     
  4230                           ; BSR set to: 0
  4231                           ;main.c: 336: {;main.c: 337: (*x)=(*x)+1;
  4232  001794  C0B9  FFD9         	movff	deplace@x,fsr2l
  4233  001798  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4234  00179C  50DF               	movf	indf2,w,c
  4235  00179E  0100               	movlb	0	; force () banked
  4236  0017A0  6FBD               	movwf	??_deplace& (0+255),b
  4237  0017A2  29BD               	incf	??_deplace& (0+255),w,b
  4238  0017A4  C0B9  FFD9         	movff	deplace@x,fsr2l
  4239  0017A8  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4240  0017AC  6EDF               	movwf	indf2,c
  4241                           
  4242                           ;main.c: 338: if((*x)>20)
  4243  0017AE  C0B9  FFD9         	movff	deplace@x,fsr2l
  4244  0017B2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4245  0017B6  0E14               	movlw	20
  4246  0017B8  64DF               	cpfsgt	indf2,c
  4247  0017BA  EFE1  F00B         	goto	u2021
  4248  0017BE  EFE3  F00B         	goto	u2020
  4249  0017C2                     u2021:
  4250  0017C2  EFE9  F00B         	goto	l2563
  4251  0017C6                     u2020:
  4252  0017C6                     
  4253                           ; BSR set to: 0
  4254                           ;main.c: 339: (*x)=1;
  4255  0017C6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4256  0017CA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4257  0017CE  0E01               	movlw	1
  4258  0017D0  6EDF               	movwf	indf2,c
  4259  0017D2                     l2563:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;main.c: 340: };main.c: 341: if(getAnalog(6)<80)
  4263  0017D2  0E06               	movlw	6
  4264  0017D4  EC2A  F011         	call	_getAnalog
  4265  0017D8  0100               	movlb	0	; force () banked
  4266  0017DA  6FBD               	movwf	??_deplace& (0+255),b
  4267  0017DC  0E50               	movlw	80
  4268  0017DE  61BD               	cpfslt	??_deplace& (0+255),b
  4269  0017E0  EFF4  F00B         	goto	u2031
  4270  0017E4  EFF6  F00B         	goto	u2030
  4271  0017E8                     u2031:
  4272  0017E8  EF17  F00C         	goto	l2571
  4273  0017EC                     u2030:
  4274  0017EC                     
  4275                           ; BSR set to: 0
  4276                           ;main.c: 342: {;main.c: 343: (*y)=(*y)-1;
  4277  0017EC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4278  0017F0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4279  0017F4  50DF               	movf	indf2,w,c
  4280  0017F6  0100               	movlb	0	; force () banked
  4281  0017F8  6FBD               	movwf	??_deplace& (0+255),b
  4282  0017FA  05BD               	decf	??_deplace& (0+255),w,b
  4283  0017FC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4284  001800  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4285  001804  6EDF               	movwf	indf2,c
  4286  001806                     
  4287                           ; BSR set to: 0
  4288                           ;main.c: 344: if((*y)<1)
  4289  001806  C0BB  FFD9         	movff	deplace@y,fsr2l
  4290  00180A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4291  00180E  50DF               	movf	indf2,w,c
  4292  001810  A4D8               	btfss	status,2,c
  4293  001812  EF0D  F00C         	goto	u2041
  4294  001816  EF0F  F00C         	goto	u2040
  4295  00181A                     u2041:
  4296  00181A  EF43  F00C         	goto	l2577
  4297  00181E                     u2040:
  4298  00181E                     
  4299                           ; BSR set to: 0
  4300                           ;main.c: 345: (*y)=4;
  4301  00181E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4302  001822  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4303  001826  0E04               	movlw	4
  4304  001828  6EDF               	movwf	indf2,c
  4305  00182A  EF43  F00C         	goto	l2577
  4306  00182E                     l2571:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 347: else if(getAnalog(6)>180)
  4310  00182E  0E06               	movlw	6
  4311  001830  EC2A  F011         	call	_getAnalog
  4312  001834  0100               	movlb	0	; force () banked
  4313  001836  6FBD               	movwf	??_deplace& (0+255),b
  4314  001838  0EB4               	movlw	180
  4315  00183A  65BD               	cpfsgt	??_deplace& (0+255),b
  4316  00183C  EF22  F00C         	goto	u2051
  4317  001840  EF24  F00C         	goto	u2050
  4318  001844                     u2051:
  4319  001844  EF43  F00C         	goto	l2577
  4320  001848                     u2050:
  4321  001848                     
  4322                           ; BSR set to: 0
  4323                           ;main.c: 348: {;main.c: 349: (*y)=(*y)+1;
  4324  001848  C0BB  FFD9         	movff	deplace@y,fsr2l
  4325  00184C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4326  001850  50DF               	movf	indf2,w,c
  4327  001852  0100               	movlb	0	; force () banked
  4328  001854  6FBD               	movwf	??_deplace& (0+255),b
  4329  001856  29BD               	incf	??_deplace& (0+255),w,b
  4330  001858  C0BB  FFD9         	movff	deplace@y,fsr2l
  4331  00185C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4332  001860  6EDF               	movwf	indf2,c
  4333                           
  4334                           ;main.c: 350: if((*y)>4)
  4335  001862  C0BB  FFD9         	movff	deplace@y,fsr2l
  4336  001866  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4337  00186A  0E04               	movlw	4
  4338  00186C  64DF               	cpfsgt	indf2,c
  4339  00186E  EF3B  F00C         	goto	u2061
  4340  001872  EF3D  F00C         	goto	u2060
  4341  001876                     u2061:
  4342  001876  EF43  F00C         	goto	l2577
  4343  00187A                     u2060:
  4344  00187A                     
  4345                           ; BSR set to: 0
  4346                           ;main.c: 351: (*y)=1;
  4347  00187A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4348  00187E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4349  001882  0E01               	movlw	1
  4350  001884  6EDF               	movwf	indf2,c
  4351  001886                     l2577:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;main.c: 352: };main.c: 353: lcd_gotoXY((*x),(*y));
  4355  001886  C0BB  FFD9         	movff	deplace@y,fsr2l
  4356  00188A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4357  00188E  50DF               	movf	indf2,w,c
  4358  001890  0100               	movlb	0	; force () banked
  4359  001892  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4360  001894  C0B9  FFD9         	movff	deplace@x,fsr2l
  4361  001898  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4362  00189C  50DF               	movf	indf2,w,c
  4363  00189E  ECB4  F00E         	call	_lcd_gotoXY
  4364  0018A2  0012               	return		;funcret
  4365  0018A4                     __end_of_deplace:
  4366                           	opt callstack 0
  4367                           
  4368 ;; *************** function _getAnalog *****************
  4369 ;; Defined at:
  4370 ;;		line 472 in file "main.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  canal           1    wreg     unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  canal           1    1[BANK0 ] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4384 ;;      Params:         0       0       0       0       0       0       0
  4385 ;;      Locals:         0       1       0       0       0       0       0
  4386 ;;      Temps:          0       1       0       0       0       0       0
  4387 ;;      Totals:         0       2       0       0       0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_deplace
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text23
  4398  002254                     __ptext23:
  4399                           	opt callstack 0
  4400  002254                     _getAnalog:
  4401                           	opt callstack 29
  4402                           
  4403                           ;incstack = 0
  4404                           ;getAnalog@canal stored from wreg
  4405  002254  0100               	movlb	0	; force () banked
  4406  002256  6FB5               	movwf	getAnalog@canal& (0+255),b
  4407  002258                     
  4408                           ;main.c: 474: ADCON0bits.CHS = canal;
  4409  002258  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4410  00225C  0100               	movlb	0	; force () banked
  4411  00225E  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4412  002260  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4413  002262  50C2               	movf	194,w,c	;volatile
  4414  002264  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4415  002266  0BC3               	andlw	-61
  4416  002268  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4417  00226A  6EC2               	movwf	194,c	;volatile
  4418  00226C                     
  4419                           ;main.c: 476: ADCON0bits.GO_DONE = 1;
  4420  00226C  82C2               	bsf	194,1,c	;volatile
  4421  00226E                     l230:
  4422  00226E  B2C2               	btfsc	194,1,c	;volatile
  4423  002270  EF3C  F011         	goto	u1541
  4424  002274  EF3E  F011         	goto	u1540
  4425  002278                     u1541:
  4426  002278  EF37  F011         	goto	l230
  4427  00227C                     u1540:
  4428  00227C                     
  4429                           ;main.c: 479: return ADRESH;
  4430  00227C  50C4               	movf	196,w,c	;volatile
  4431  00227E  0012               	return		;funcret
  4432  002280                     __end_of_getAnalog:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _demine *****************
  4436 ;; Defined at:
  4437 ;;		line 364 in file "main.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  x               1    wreg     unsigned char 
  4440 ;;  y               1   20[BANK0 ] unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  x               1   29[BANK0 ] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4452 ;;      Params:         0       1       0       0       0       0       0
  4453 ;;      Locals:         0       1       0       0       0       0       0
  4454 ;;      Temps:          0       8       0       0       0       0       0
  4455 ;;      Totals:         0      10       0       0       0       0       0
  4456 ;;Total ram usage:       10 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    5
  4459 ;; This function calls:
  4460 ;;		_enleveTuilesAutour
  4461 ;;		_lcd_ecritChar
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text24
  4468  0010BC                     __ptext24:
  4469                           	opt callstack 0
  4470  0010BC                     _demine:
  4471                           	opt callstack 25
  4472                           
  4473                           ;incstack = 0
  4474                           ;demine@x stored from wreg
  4475  0010BC  0100               	movlb	0	; force () banked
  4476  0010BE  6FD1               	movwf	demine@x& (0+255),b
  4477  0010C0                     
  4478                           ;main.c: 366: if(m_tabVue[y-1][x-1]!=3)
  4479  0010C0  0100               	movlb	0	; force () banked
  4480  0010C2  51C8               	movf	demine@y& (0+255),w,b
  4481  0010C4  0D15               	mullw	21
  4482  0010C6  0EEA               	movlw	234
  4483  0010C8  0100               	movlb	0	; force () banked
  4484  0010CA  6FC9               	movwf	??_demine& (0+255),b
  4485  0010CC  0EFF               	movlw	255
  4486  0010CE  6FCA               	movwf	(??_demine+1)& (0+255),b
  4487  0010D0  0E00               	movlw	low _m_tabVue
  4488  0010D2  6FCB               	movwf	(??_demine+2)& (0+255),b
  4489  0010D4  0E01               	movlw	high _m_tabVue
  4490  0010D6  6FCC               	movwf	(??_demine+3)& (0+255),b
  4491  0010D8  51C9               	movf	??_demine& (0+255),w,b
  4492  0010DA  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4493  0010DC  51CA               	movf	(??_demine+1)& (0+255),w,b
  4494  0010DE  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4495  0010E0  50F3               	movf	243,w,c
  4496  0010E2  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4497  0010E4  50F4               	movf	244,w,c
  4498  0010E6  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4499  0010E8  0100               	movlb	0	; force () banked
  4500  0010EA  51D1               	movf	demine@x& (0+255),w,b
  4501  0010EC  0100               	movlb	0	; force () banked
  4502  0010EE  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4503  0010F0  6ED9               	movwf	fsr2l,c
  4504  0010F2  0100               	movlb	0	; force () banked
  4505  0010F4  0E00               	movlw	0
  4506  0010F6  0100               	movlb	0	; force () banked
  4507  0010F8  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4508  0010FA  6EDA               	movwf	fsr2h,c
  4509  0010FC  0E03               	movlw	3
  4510  0010FE  18DE               	xorwf	postinc2,w,c
  4511  001100  B4D8               	btfsc	status,2,c
  4512  001102  EF85  F008         	goto	u2211
  4513  001106  EF87  F008         	goto	u2210
  4514  00110A                     u2211:
  4515  00110A  EF8D  F009         	goto	l2659
  4516  00110E                     u2210:
  4517  00110E                     
  4518                           ; BSR set to: 0
  4519                           ;main.c: 367: {;main.c: 368: if(m_tabMines[y-1][x-1]==2&&m_tabVue[y-1][x-1]!=3)
  4520  00110E  0100               	movlb	0	; force () banked
  4521  001110  51C8               	movf	demine@y& (0+255),w,b
  4522  001112  0D15               	mullw	21
  4523  001114  0EEA               	movlw	234
  4524  001116  0100               	movlb	0	; force () banked
  4525  001118  6FC9               	movwf	??_demine& (0+255),b
  4526  00111A  0EFF               	movlw	255
  4527  00111C  6FCA               	movwf	(??_demine+1)& (0+255),b
  4528  00111E  0E60               	movlw	low _m_tabMines
  4529  001120  6FCB               	movwf	(??_demine+2)& (0+255),b
  4530  001122  0E00               	movlw	high _m_tabMines
  4531  001124  6FCC               	movwf	(??_demine+3)& (0+255),b
  4532  001126  51C9               	movf	??_demine& (0+255),w,b
  4533  001128  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4534  00112A  51CA               	movf	(??_demine+1)& (0+255),w,b
  4535  00112C  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4536  00112E  50F3               	movf	243,w,c
  4537  001130  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4538  001132  50F4               	movf	244,w,c
  4539  001134  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4540  001136  0100               	movlb	0	; force () banked
  4541  001138  51D1               	movf	demine@x& (0+255),w,b
  4542  00113A  0100               	movlb	0	; force () banked
  4543  00113C  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4544  00113E  6ED9               	movwf	fsr2l,c
  4545  001140  0100               	movlb	0	; force () banked
  4546  001142  0E00               	movlw	0
  4547  001144  0100               	movlb	0	; force () banked
  4548  001146  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4549  001148  6EDA               	movwf	fsr2h,c
  4550  00114A  0E02               	movlw	2
  4551  00114C  18DE               	xorwf	postinc2,w,c
  4552  00114E  A4D8               	btfss	status,2,c
  4553  001150  EFAC  F008         	goto	u2221
  4554  001154  EFAE  F008         	goto	u2220
  4555  001158                     u2221:
  4556  001158  EFD8  F008         	goto	l2649
  4557  00115C                     u2220:
  4558  00115C                     
  4559                           ; BSR set to: 0
  4560  00115C  0100               	movlb	0	; force () banked
  4561  00115E  51C8               	movf	demine@y& (0+255),w,b
  4562  001160  0D15               	mullw	21
  4563  001162  0EEA               	movlw	234
  4564  001164  0100               	movlb	0	; force () banked
  4565  001166  6FC9               	movwf	??_demine& (0+255),b
  4566  001168  0EFF               	movlw	255
  4567  00116A  6FCA               	movwf	(??_demine+1)& (0+255),b
  4568  00116C  0E00               	movlw	low _m_tabVue
  4569  00116E  6FCB               	movwf	(??_demine+2)& (0+255),b
  4570  001170  0E01               	movlw	high _m_tabVue
  4571  001172  6FCC               	movwf	(??_demine+3)& (0+255),b
  4572  001174  51C9               	movf	??_demine& (0+255),w,b
  4573  001176  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4574  001178  51CA               	movf	(??_demine+1)& (0+255),w,b
  4575  00117A  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4576  00117C  50F3               	movf	243,w,c
  4577  00117E  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4578  001180  50F4               	movf	244,w,c
  4579  001182  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4580  001184  0100               	movlb	0	; force () banked
  4581  001186  51D1               	movf	demine@x& (0+255),w,b
  4582  001188  0100               	movlb	0	; force () banked
  4583  00118A  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4584  00118C  6ED9               	movwf	fsr2l,c
  4585  00118E  0100               	movlb	0	; force () banked
  4586  001190  0E00               	movlw	0
  4587  001192  0100               	movlb	0	; force () banked
  4588  001194  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4589  001196  6EDA               	movwf	fsr2h,c
  4590  001198  0E03               	movlw	3
  4591  00119A  18DE               	xorwf	postinc2,w,c
  4592  00119C  B4D8               	btfsc	status,2,c
  4593  00119E  EFD3  F008         	goto	u2231
  4594  0011A2  EFD5  F008         	goto	u2230
  4595  0011A6                     u2231:
  4596  0011A6  EFD8  F008         	goto	l2649
  4597  0011AA                     u2230:
  4598  0011AA                     
  4599                           ; BSR set to: 0
  4600                           ;main.c: 369: return 0;
  4601  0011AA  0E00               	movlw	0
  4602  0011AC  EF8E  F009         	goto	l190
  4603  0011B0                     l2649:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 370: else if(m_tabMines[y-1][x-1]!=2 && m_tabMines[y-1][x-1]!=' ')
  4607  0011B0  0100               	movlb	0	; force () banked
  4608  0011B2  51C8               	movf	demine@y& (0+255),w,b
  4609  0011B4  0D15               	mullw	21
  4610  0011B6  0EEA               	movlw	234
  4611  0011B8  0100               	movlb	0	; force () banked
  4612  0011BA  6FC9               	movwf	??_demine& (0+255),b
  4613  0011BC  0EFF               	movlw	255
  4614  0011BE  6FCA               	movwf	(??_demine+1)& (0+255),b
  4615  0011C0  0E60               	movlw	low _m_tabMines
  4616  0011C2  6FCB               	movwf	(??_demine+2)& (0+255),b
  4617  0011C4  0E00               	movlw	high _m_tabMines
  4618  0011C6  6FCC               	movwf	(??_demine+3)& (0+255),b
  4619  0011C8  51C9               	movf	??_demine& (0+255),w,b
  4620  0011CA  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4621  0011CC  51CA               	movf	(??_demine+1)& (0+255),w,b
  4622  0011CE  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4623  0011D0  50F3               	movf	243,w,c
  4624  0011D2  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4625  0011D4  50F4               	movf	244,w,c
  4626  0011D6  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4627  0011D8  0100               	movlb	0	; force () banked
  4628  0011DA  51D1               	movf	demine@x& (0+255),w,b
  4629  0011DC  0100               	movlb	0	; force () banked
  4630  0011DE  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4631  0011E0  6ED9               	movwf	fsr2l,c
  4632  0011E2  0100               	movlb	0	; force () banked
  4633  0011E4  0E00               	movlw	0
  4634  0011E6  0100               	movlb	0	; force () banked
  4635  0011E8  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4636  0011EA  6EDA               	movwf	fsr2h,c
  4637  0011EC  0E02               	movlw	2
  4638  0011EE  18DE               	xorwf	postinc2,w,c
  4639  0011F0  B4D8               	btfsc	status,2,c
  4640  0011F2  EFFD  F008         	goto	u2241
  4641  0011F6  EFFF  F008         	goto	u2240
  4642  0011FA                     u2241:
  4643  0011FA  EF87  F009         	goto	l2657
  4644  0011FE                     u2240:
  4645  0011FE                     
  4646                           ; BSR set to: 0
  4647  0011FE  0100               	movlb	0	; force () banked
  4648  001200  51C8               	movf	demine@y& (0+255),w,b
  4649  001202  0D15               	mullw	21
  4650  001204  0EEA               	movlw	234
  4651  001206  0100               	movlb	0	; force () banked
  4652  001208  6FC9               	movwf	??_demine& (0+255),b
  4653  00120A  0EFF               	movlw	255
  4654  00120C  6FCA               	movwf	(??_demine+1)& (0+255),b
  4655  00120E  0E60               	movlw	low _m_tabMines
  4656  001210  6FCB               	movwf	(??_demine+2)& (0+255),b
  4657  001212  0E00               	movlw	high _m_tabMines
  4658  001214  6FCC               	movwf	(??_demine+3)& (0+255),b
  4659  001216  51C9               	movf	??_demine& (0+255),w,b
  4660  001218  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4661  00121A  51CA               	movf	(??_demine+1)& (0+255),w,b
  4662  00121C  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4663  00121E  50F3               	movf	243,w,c
  4664  001220  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4665  001222  50F4               	movf	244,w,c
  4666  001224  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4667  001226  0100               	movlb	0	; force () banked
  4668  001228  51D1               	movf	demine@x& (0+255),w,b
  4669  00122A  0100               	movlb	0	; force () banked
  4670  00122C  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4671  00122E  6ED9               	movwf	fsr2l,c
  4672  001230  0100               	movlb	0	; force () banked
  4673  001232  0E00               	movlw	0
  4674  001234  0100               	movlb	0	; force () banked
  4675  001236  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4676  001238  6EDA               	movwf	fsr2h,c
  4677  00123A  0E20               	movlw	32
  4678  00123C  18DE               	xorwf	postinc2,w,c
  4679  00123E  B4D8               	btfsc	status,2,c
  4680  001240  EF24  F009         	goto	u2251
  4681  001244  EF26  F009         	goto	u2250
  4682  001248                     u2251:
  4683  001248  EF87  F009         	goto	l2657
  4684  00124C                     u2250:
  4685  00124C                     
  4686                           ; BSR set to: 0
  4687                           ;main.c: 371: {;main.c: 372: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1];
  4688  00124C  0100               	movlb	0	; force () banked
  4689  00124E  51C8               	movf	demine@y& (0+255),w,b
  4690  001250  0D15               	mullw	21
  4691  001252  0EEA               	movlw	234
  4692  001254  0100               	movlb	0	; force () banked
  4693  001256  6FC9               	movwf	??_demine& (0+255),b
  4694  001258  0EFF               	movlw	255
  4695  00125A  6FCA               	movwf	(??_demine+1)& (0+255),b
  4696  00125C  0E60               	movlw	low _m_tabMines
  4697  00125E  6FCB               	movwf	(??_demine+2)& (0+255),b
  4698  001260  0E00               	movlw	high _m_tabMines
  4699  001262  6FCC               	movwf	(??_demine+3)& (0+255),b
  4700  001264  51C9               	movf	??_demine& (0+255),w,b
  4701  001266  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4702  001268  51CA               	movf	(??_demine+1)& (0+255),w,b
  4703  00126A  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4704  00126C  50F3               	movf	243,w,c
  4705  00126E  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4706  001270  50F4               	movf	244,w,c
  4707  001272  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4708  001274  0100               	movlb	0	; force () banked
  4709  001276  51D1               	movf	demine@x& (0+255),w,b
  4710  001278  0100               	movlb	0	; force () banked
  4711  00127A  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4712  00127C  6ED9               	movwf	fsr2l,c
  4713  00127E  0100               	movlb	0	; force () banked
  4714  001280  0E00               	movlw	0
  4715  001282  0100               	movlb	0	; force () banked
  4716  001284  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4717  001286  6EDA               	movwf	fsr2h,c
  4718  001288  0100               	movlb	0	; force () banked
  4719  00128A  51C8               	movf	demine@y& (0+255),w,b
  4720  00128C  0D15               	mullw	21
  4721  00128E  0EEA               	movlw	234
  4722  001290  0100               	movlb	0	; force () banked
  4723  001292  6FCD               	movwf	(??_demine+4)& (0+255),b
  4724  001294  0EFF               	movlw	255
  4725  001296  6FCE               	movwf	(??_demine+5)& (0+255),b
  4726  001298  0E00               	movlw	low _m_tabVue
  4727  00129A  6FCF               	movwf	(??_demine+6)& (0+255),b
  4728  00129C  0E01               	movlw	high _m_tabVue
  4729  00129E  6FD0               	movwf	(??_demine+7)& (0+255),b
  4730  0012A0  51CD               	movf	(??_demine+4)& (0+255),w,b
  4731  0012A2  27CF               	addwf	(??_demine+6)& (0+255),f,b
  4732  0012A4  51CE               	movf	(??_demine+5)& (0+255),w,b
  4733  0012A6  23D0               	addwfc	(??_demine+7)& (0+255),f,b
  4734  0012A8  50F3               	movf	243,w,c
  4735  0012AA  27CF               	addwf	(??_demine+6)& (0+255),f,b
  4736  0012AC  50F4               	movf	244,w,c
  4737  0012AE  23D0               	addwfc	(??_demine+7)& (0+255),f,b
  4738  0012B0  0100               	movlb	0	; force () banked
  4739  0012B2  51D1               	movf	demine@x& (0+255),w,b
  4740  0012B4  0100               	movlb	0	; force () banked
  4741  0012B6  25CF               	addwf	(??_demine+6)& (0+255),w,b
  4742  0012B8  6EE1               	movwf	fsr1l,c
  4743  0012BA  0100               	movlb	0	; force () banked
  4744  0012BC  0E00               	movlw	0
  4745  0012BE  0100               	movlb	0	; force () banked
  4746  0012C0  21D0               	addwfc	(??_demine+7)& (0+255),w,b
  4747  0012C2  6EE2               	movwf	fsr1h,c
  4748  0012C4  CFDF FFE7          	movff	indf2,indf1
  4749  0012C8                     
  4750                           ; BSR set to: 0
  4751                           ;main.c: 373: lcd_ecritChar(m_tabVue[y-1][x-1]);
  4752  0012C8  0100               	movlb	0	; force () banked
  4753  0012CA  51C8               	movf	demine@y& (0+255),w,b
  4754  0012CC  0D15               	mullw	21
  4755  0012CE  0EEA               	movlw	234
  4756  0012D0  0100               	movlb	0	; force () banked
  4757  0012D2  6FC9               	movwf	??_demine& (0+255),b
  4758  0012D4  0EFF               	movlw	255
  4759  0012D6  6FCA               	movwf	(??_demine+1)& (0+255),b
  4760  0012D8  0E00               	movlw	low _m_tabVue
  4761  0012DA  6FCB               	movwf	(??_demine+2)& (0+255),b
  4762  0012DC  0E01               	movlw	high _m_tabVue
  4763  0012DE  6FCC               	movwf	(??_demine+3)& (0+255),b
  4764  0012E0  51C9               	movf	??_demine& (0+255),w,b
  4765  0012E2  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4766  0012E4  51CA               	movf	(??_demine+1)& (0+255),w,b
  4767  0012E6  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4768  0012E8  50F3               	movf	243,w,c
  4769  0012EA  27CB               	addwf	(??_demine+2)& (0+255),f,b
  4770  0012EC  50F4               	movf	244,w,c
  4771  0012EE  23CC               	addwfc	(??_demine+3)& (0+255),f,b
  4772  0012F0  0100               	movlb	0	; force () banked
  4773  0012F2  51D1               	movf	demine@x& (0+255),w,b
  4774  0012F4  0100               	movlb	0	; force () banked
  4775  0012F6  25CB               	addwf	(??_demine+2)& (0+255),w,b
  4776  0012F8  6ED9               	movwf	fsr2l,c
  4777  0012FA  0100               	movlb	0	; force () banked
  4778  0012FC  0E00               	movlw	0
  4779  0012FE  0100               	movlb	0	; force () banked
  4780  001300  21CC               	addwfc	(??_demine+3)& (0+255),w,b
  4781  001302  6EDA               	movwf	fsr2h,c
  4782  001304  50DF               	movf	indf2,w,c
  4783  001306  EC8B  F010         	call	_lcd_ecritChar
  4784                           
  4785                           ;main.c: 374: }
  4786  00130A  EF8D  F009         	goto	l2659
  4787  00130E                     l2657:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;main.c: 375: else;main.c: 376: enleveTuilesAutour(x,y);
  4791  00130E  C0C8  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4792  001312  0100               	movlb	0	; force () banked
  4793  001314  51D1               	movf	demine@x& (0+255),w,b
  4794  001316  EC65  F005         	call	_enleveTuilesAutour
  4795  00131A                     l2659:
  4796                           
  4797                           ;main.c: 377: };main.c: 378: return 1;
  4798  00131A  0E01               	movlw	1
  4799  00131C                     l190:
  4800  00131C  0012               	return		;funcret
  4801  00131E                     __end_of_demine:
  4802                           	opt callstack 0
  4803                           
  4804 ;; *************** function _enleveTuilesAutour *****************
  4805 ;; Defined at:
  4806 ;;		line 387 in file "main.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  x               1    wreg     unsigned char 
  4809 ;;  y               1    6[BANK0 ] unsigned char 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  x               1   15[BANK0 ] unsigned char 
  4812 ;;  i               1   19[BANK0 ] char 
  4813 ;;  j               1   18[BANK0 ] char 
  4814 ;;  yTabLigne       1   17[BANK0 ] unsigned char 
  4815 ;;  xTabCol         1   16[BANK0 ] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4825 ;;      Params:         0       1       0       0       0       0       0
  4826 ;;      Locals:         0       5       0       0       0       0       0
  4827 ;;      Temps:          0       8       0       0       0       0       0
  4828 ;;      Totals:         0      14       0       0       0       0       0
  4829 ;;Total ram usage:       14 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    4
  4832 ;; This function calls:
  4833 ;;		___wmul
  4834 ;;		_lcd_ecritChar
  4835 ;;		_lcd_gotoXY
  4836 ;; This function is called by:
  4837 ;;		_demine
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text25
  4842  000ACA                     __ptext25:
  4843                           	opt callstack 0
  4844  000ACA                     _enleveTuilesAutour:
  4845                           	opt callstack 25
  4846                           
  4847                           ;incstack = 0
  4848                           ;enleveTuilesAutour@x stored from wreg
  4849  000ACA  0100               	movlb	0	; force () banked
  4850  000ACC  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  4851  000ACE                     
  4852                           ;main.c: 389: unsigned char xTabCol=x-1;
  4853  000ACE  0100               	movlb	0	; force () banked
  4854  000AD0  05C3               	decf	enleveTuilesAutour@x& (0+255),w,b
  4855  000AD2  0100               	movlb	0	; force () banked
  4856  000AD4  6FC4               	movwf	enleveTuilesAutour@xTabCol& (0+255),b
  4857                           
  4858                           ;main.c: 390: unsigned char yTabLigne=y-1;
  4859  000AD6  0100               	movlb	0	; force () banked
  4860  000AD8  05BA               	decf	enleveTuilesAutour@y& (0+255),w,b
  4861  000ADA  0100               	movlb	0	; force () banked
  4862  000ADC  6FC5               	movwf	enleveTuilesAutour@yTabLigne& (0+255),b
  4863  000ADE                     
  4864                           ; BSR set to: 0
  4865                           ;main.c: 393: for(signed char j=-1;j<=1;j++)
  4866  000ADE  0100               	movlb	0	; force () banked
  4867  000AE0  69C6               	setf	enleveTuilesAutour@j& (0+255),b
  4868  000AE2  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4869  000AE4  0A80               	xorlw	128
  4870  000AE6  0F7E               	addlw	-130
  4871  000AE8  A0D8               	btfss	status,0,c
  4872  000AEA  EF79  F005         	goto	u1551
  4873  000AEE  EF7B  F005         	goto	u1550
  4874  000AF2                     u1551:
  4875  000AF2  EF7D  F005         	goto	l2229
  4876  000AF6                     u1550:
  4877  000AF6  EF21  F007         	goto	l205
  4878  000AFA                     l2229:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;main.c: 394: {;main.c: 395: if(yTabLigne==0&&j==-1)
  4882  000AFA  0100               	movlb	0	; force () banked
  4883  000AFC  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4884  000AFE  A4D8               	btfss	status,2,c
  4885  000B00  EF84  F005         	goto	u1561
  4886  000B04  EF86  F005         	goto	u1560
  4887  000B08                     u1561:
  4888  000B08  EF92  F005         	goto	l2235
  4889  000B0C                     u1560:
  4890  000B0C                     
  4891                           ; BSR set to: 0
  4892  000B0C  0100               	movlb	0	; force () banked
  4893  000B0E  29C6               	incf	enleveTuilesAutour@j& (0+255),w,b
  4894  000B10  A4D8               	btfss	status,2,c
  4895  000B12  EF8D  F005         	goto	u1571
  4896  000B16  EF8F  F005         	goto	u1570
  4897  000B1A                     u1571:
  4898  000B1A  EF92  F005         	goto	l2235
  4899  000B1E                     u1570:
  4900  000B1E                     
  4901                           ; BSR set to: 0
  4902                           ;main.c: 396: j=0;
  4903  000B1E  0E00               	movlw	0
  4904  000B20  0100               	movlb	0	; force () banked
  4905  000B22  6FC6               	movwf	enleveTuilesAutour@j& (0+255),b
  4906  000B24                     l2235:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;main.c: 397: for(signed char i=-1;i<=1;i++)
  4910  000B24  0100               	movlb	0	; force () banked
  4911  000B26  69C7               	setf	enleveTuilesAutour@i& (0+255),b
  4912  000B28                     
  4913                           ; BSR set to: 0
  4914  000B28  0100               	movlb	0	; force () banked
  4915  000B2A  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  4916  000B2C  0A80               	xorlw	128
  4917  000B2E  0F7E               	addlw	-130
  4918  000B30  A0D8               	btfss	status,0,c
  4919  000B32  EF9D  F005         	goto	u1581
  4920  000B36  EF9F  F005         	goto	u1580
  4921  000B3A                     u1581:
  4922  000B3A  EFA1  F005         	goto	l2241
  4923  000B3E                     u1580:
  4924  000B3E  EFFE  F006         	goto	l2267
  4925  000B42                     l2241:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;main.c: 398: {;main.c: 399: if(xTabCol==0&&i==-1)
  4929  000B42  0100               	movlb	0	; force () banked
  4930  000B44  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4931  000B46  A4D8               	btfss	status,2,c
  4932  000B48  EFA8  F005         	goto	u1591
  4933  000B4C  EFAA  F005         	goto	u1590
  4934  000B50                     u1591:
  4935  000B50  EFB6  F005         	goto	l2247
  4936  000B54                     u1590:
  4937  000B54                     
  4938                           ; BSR set to: 0
  4939  000B54  0100               	movlb	0	; force () banked
  4940  000B56  29C7               	incf	enleveTuilesAutour@i& (0+255),w,b
  4941  000B58  A4D8               	btfss	status,2,c
  4942  000B5A  EFB1  F005         	goto	u1601
  4943  000B5E  EFB3  F005         	goto	u1600
  4944  000B62                     u1601:
  4945  000B62  EFB6  F005         	goto	l2247
  4946  000B66                     u1600:
  4947  000B66                     
  4948                           ; BSR set to: 0
  4949                           ;main.c: 400: i=0;
  4950  000B66  0E00               	movlw	0
  4951  000B68  0100               	movlb	0	; force () banked
  4952  000B6A  6FC7               	movwf	enleveTuilesAutour@i& (0+255),b
  4953  000B6C                     l2247:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;main.c: 402: if(m_tabMines[yTabLigne+j][xTabCol+i]!=2&&m_tabVue[yTabLigne+j][xTabCol+i]
      +                          ==1)
  4957  000B6C  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  4958  000B70  0100               	movlb	0	; force () banked
  4959  000B72  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4960  000B74  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4961  000B76  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4962  000B78  0100               	movlb	0	; force () banked
  4963  000B7A  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  4964  000B7C  0100               	movlb	0	; force () banked
  4965  000B7E  6FB4               	movwf	___wmul@multiplier& (0+255),b
  4966  000B80  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  4967  000B82  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  4968  000B84  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4969  000B86  0E00               	movlw	0
  4970  000B88  0100               	movlb	0	; force () banked
  4971  000B8A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4972  000B8C  0E15               	movlw	21
  4973  000B8E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4974  000B90  EC54  F011         	call	___wmul	;wreg free
  4975  000B94  0100               	movlb	0	; force () banked
  4976  000B96  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  4977  000B98  0D15               	mullw	21
  4978  000B9A  0E60               	movlw	low _m_tabMines
  4979  000B9C  0100               	movlb	0	; force () banked
  4980  000B9E  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4981  000BA0  0E00               	movlw	high _m_tabMines
  4982  000BA2  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4983  000BA4  50F3               	movf	243,w,c
  4984  000BA6  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4985  000BA8  50F4               	movf	244,w,c
  4986  000BAA  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4987  000BAC  0100               	movlb	0	; force () banked
  4988  000BAE  51B4               	movf	?___wmul& (0+255),w,b
  4989  000BB0  0100               	movlb	0	; force () banked
  4990  000BB2  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4991  000BB4  0100               	movlb	0	; force () banked
  4992  000BB6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4993  000BB8  0100               	movlb	0	; force () banked
  4994  000BBA  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4995  000BBC  0100               	movlb	0	; force () banked
  4996  000BBE  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  4997  000BC0  0100               	movlb	0	; force () banked
  4998  000BC2  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4999  000BC4  0E00               	movlw	0
  5000  000BC6  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5001  000BC8  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  5002  000BCA  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5003  000BCC  6ED9               	movwf	fsr2l,c
  5004  000BCE  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5005  000BD0  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5006  000BD2  6EDA               	movwf	fsr2h,c
  5007  000BD4  0E02               	movlw	2
  5008  000BD6  18DE               	xorwf	postinc2,w,c
  5009  000BD8  B4D8               	btfsc	status,2,c
  5010  000BDA  EFF1  F005         	goto	u1611
  5011  000BDE  EFF3  F005         	goto	u1610
  5012  000BE2                     u1611:
  5013  000BE2  EFDB  F006         	goto	l2257
  5014  000BE6                     u1610:
  5015  000BE6                     
  5016                           ; BSR set to: 0
  5017  000BE6  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  5018  000BEA  0100               	movlb	0	; force () banked
  5019  000BEC  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  5020  000BEE  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  5021  000BF0  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  5022  000BF2  0100               	movlb	0	; force () banked
  5023  000BF4  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5024  000BF6  0100               	movlb	0	; force () banked
  5025  000BF8  6FB4               	movwf	___wmul@multiplier& (0+255),b
  5026  000BFA  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  5027  000BFC  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  5028  000BFE  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  5029  000C00  0E00               	movlw	0
  5030  000C02  0100               	movlb	0	; force () banked
  5031  000C04  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5032  000C06  0E15               	movlw	21
  5033  000C08  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5034  000C0A  EC54  F011         	call	___wmul	;wreg free
  5035  000C0E  0100               	movlb	0	; force () banked
  5036  000C10  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5037  000C12  0D15               	mullw	21
  5038  000C14  0E00               	movlw	low _m_tabVue
  5039  000C16  0100               	movlb	0	; force () banked
  5040  000C18  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5041  000C1A  0E01               	movlw	high _m_tabVue
  5042  000C1C  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5043  000C1E  50F3               	movf	243,w,c
  5044  000C20  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5045  000C22  50F4               	movf	244,w,c
  5046  000C24  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5047  000C26  0100               	movlb	0	; force () banked
  5048  000C28  51B4               	movf	?___wmul& (0+255),w,b
  5049  000C2A  0100               	movlb	0	; force () banked
  5050  000C2C  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5051  000C2E  0100               	movlb	0	; force () banked
  5052  000C30  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5053  000C32  0100               	movlb	0	; force () banked
  5054  000C34  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5055  000C36  0100               	movlb	0	; force () banked
  5056  000C38  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  5057  000C3A  0100               	movlb	0	; force () banked
  5058  000C3C  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5059  000C3E  0E00               	movlw	0
  5060  000C40  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5061  000C42  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  5062  000C44  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5063  000C46  6ED9               	movwf	fsr2l,c
  5064  000C48  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5065  000C4A  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5066  000C4C  6EDA               	movwf	fsr2h,c
  5067  000C4E  04DE               	decf	postinc2,w,c
  5068  000C50  A4D8               	btfss	status,2,c
  5069  000C52  EF2D  F006         	goto	u1621
  5070  000C56  EF2F  F006         	goto	u1620
  5071  000C5A                     u1621:
  5072  000C5A  EFDB  F006         	goto	l2257
  5073  000C5E                     u1620:
  5074  000C5E                     
  5075                           ; BSR set to: 0
  5076                           ;main.c: 403: {;main.c: 404: lcd_gotoXY(x+i,y+j);
  5077  000C5E  0100               	movlb	0	; force () banked
  5078  000C60  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5079  000C62  0100               	movlb	0	; force () banked
  5080  000C64  25BA               	addwf	enleveTuilesAutour@y& (0+255),w,b
  5081  000C66  0100               	movlb	0	; force () banked
  5082  000C68  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5083  000C6A  0100               	movlb	0	; force () banked
  5084  000C6C  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  5085  000C6E  0100               	movlb	0	; force () banked
  5086  000C70  25C3               	addwf	enleveTuilesAutour@x& (0+255),w,b
  5087  000C72  ECB4  F00E         	call	_lcd_gotoXY
  5088  000C76                     
  5089                           ;main.c: 405: m_tabVue[yTabLigne+j][xTabCol+i]=m_tabMines[yTabLigne+j][xTabCol+i];
  5090  000C76  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  5091  000C7A  0100               	movlb	0	; force () banked
  5092  000C7C  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  5093  000C7E  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  5094  000C80  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  5095  000C82  0100               	movlb	0	; force () banked
  5096  000C84  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5097  000C86  0100               	movlb	0	; force () banked
  5098  000C88  6FB4               	movwf	___wmul@multiplier& (0+255),b
  5099  000C8A  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  5100  000C8C  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  5101  000C8E  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  5102  000C90  0E00               	movlw	0
  5103  000C92  0100               	movlb	0	; force () banked
  5104  000C94  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5105  000C96  0E15               	movlw	21
  5106  000C98  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5107  000C9A  EC54  F011         	call	___wmul	;wreg free
  5108  000C9E  0100               	movlb	0	; force () banked
  5109  000CA0  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5110  000CA2  0D15               	mullw	21
  5111  000CA4  0E60               	movlw	low _m_tabMines
  5112  000CA6  0100               	movlb	0	; force () banked
  5113  000CA8  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5114  000CAA  0E00               	movlw	high _m_tabMines
  5115  000CAC  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5116  000CAE  50F3               	movf	243,w,c
  5117  000CB0  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5118  000CB2  50F4               	movf	244,w,c
  5119  000CB4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5120  000CB6  0100               	movlb	0	; force () banked
  5121  000CB8  51B4               	movf	?___wmul& (0+255),w,b
  5122  000CBA  0100               	movlb	0	; force () banked
  5123  000CBC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5124  000CBE  0100               	movlb	0	; force () banked
  5125  000CC0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5126  000CC2  0100               	movlb	0	; force () banked
  5127  000CC4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5128  000CC6  0100               	movlb	0	; force () banked
  5129  000CC8  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  5130  000CCA  0100               	movlb	0	; force () banked
  5131  000CCC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5132  000CCE  0E00               	movlw	0
  5133  000CD0  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5134  000CD2  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  5135  000CD4  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5136  000CD6  6ED9               	movwf	fsr2l,c
  5137  000CD8  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5138  000CDA  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5139  000CDC  6EDA               	movwf	fsr2h,c
  5140  000CDE  C0C7  F0BF         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour+4
  5141  000CE2  6BC0               	clrf	(??_enleveTuilesAutour+5)& (0+255),b
  5142  000CE4  BFBF               	btfsc	(??_enleveTuilesAutour+4)& (0+255),7,b
  5143  000CE6  07C0               	decf	(??_enleveTuilesAutour+5)& (0+255),f,b
  5144  000CE8  0100               	movlb	0	; force () banked
  5145  000CEA  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5146  000CEC  0100               	movlb	0	; force () banked
  5147  000CEE  6FB4               	movwf	___wmul@multiplier& (0+255),b
  5148  000CF0  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  5149  000CF2  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  5150  000CF4  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  5151  000CF6  0E00               	movlw	0
  5152  000CF8  0100               	movlb	0	; force () banked
  5153  000CFA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5154  000CFC  0E15               	movlw	21
  5155  000CFE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5156  000D00  EC54  F011         	call	___wmul	;wreg free
  5157  000D04  0100               	movlb	0	; force () banked
  5158  000D06  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5159  000D08  0D15               	mullw	21
  5160  000D0A  0E00               	movlw	low _m_tabVue
  5161  000D0C  0100               	movlb	0	; force () banked
  5162  000D0E  6FC1               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  5163  000D10  0E01               	movlw	high _m_tabVue
  5164  000D12  6FC2               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  5165  000D14  50F3               	movf	243,w,c
  5166  000D16  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  5167  000D18  50F4               	movf	244,w,c
  5168  000D1A  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  5169  000D1C  0100               	movlb	0	; force () banked
  5170  000D1E  51B4               	movf	?___wmul& (0+255),w,b
  5171  000D20  0100               	movlb	0	; force () banked
  5172  000D22  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  5173  000D24  0100               	movlb	0	; force () banked
  5174  000D26  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5175  000D28  0100               	movlb	0	; force () banked
  5176  000D2A  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  5177  000D2C  0100               	movlb	0	; force () banked
  5178  000D2E  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  5179  000D30  0100               	movlb	0	; force () banked
  5180  000D32  27C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  5181  000D34  0E00               	movlw	0
  5182  000D36  23C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  5183  000D38  51BF               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  5184  000D3A  25C1               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  5185  000D3C  6EE1               	movwf	fsr1l,c
  5186  000D3E  51C0               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  5187  000D40  21C2               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  5188  000D42  6EE2               	movwf	fsr1h,c
  5189  000D44  CFDF FFE7          	movff	indf2,indf1
  5190  000D48                     
  5191                           ; BSR set to: 0
  5192                           ;main.c: 406: lcd_ecritChar(m_tabVue[yTabLigne+j][xTabCol+i]);
  5193  000D48  C0C7  F0BB         	movff	enleveTuilesAutour@i,??_enleveTuilesAutour
  5194  000D4C  0100               	movlb	0	; force () banked
  5195  000D4E  6BBC               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  5196  000D50  BFBB               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  5197  000D52  07BC               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  5198  000D54  0100               	movlb	0	; force () banked
  5199  000D56  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5200  000D58  0100               	movlb	0	; force () banked
  5201  000D5A  6FB4               	movwf	___wmul@multiplier& (0+255),b
  5202  000D5C  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  5203  000D5E  BFB4               	btfsc	___wmul@multiplier& (0+255),7,b
  5204  000D60  07B5               	decf	(___wmul@multiplier+1)& (0+255),f,b
  5205  000D62  0E00               	movlw	0
  5206  000D64  0100               	movlb	0	; force () banked
  5207  000D66  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5208  000D68  0E15               	movlw	21
  5209  000D6A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5210  000D6C  EC54  F011         	call	___wmul	;wreg free
  5211  000D70  0100               	movlb	0	; force () banked
  5212  000D72  51C5               	movf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5213  000D74  0D15               	mullw	21
  5214  000D76  0E00               	movlw	low _m_tabVue
  5215  000D78  0100               	movlb	0	; force () banked
  5216  000D7A  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5217  000D7C  0E01               	movlw	high _m_tabVue
  5218  000D7E  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5219  000D80  50F3               	movf	243,w,c
  5220  000D82  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5221  000D84  50F4               	movf	244,w,c
  5222  000D86  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5223  000D88  0100               	movlb	0	; force () banked
  5224  000D8A  51B4               	movf	?___wmul& (0+255),w,b
  5225  000D8C  0100               	movlb	0	; force () banked
  5226  000D8E  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5227  000D90  0100               	movlb	0	; force () banked
  5228  000D92  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5229  000D94  0100               	movlb	0	; force () banked
  5230  000D96  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5231  000D98  0100               	movlb	0	; force () banked
  5232  000D9A  51C4               	movf	enleveTuilesAutour@xTabCol& (0+255),w,b
  5233  000D9C  0100               	movlb	0	; force () banked
  5234  000D9E  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5235  000DA0  0E00               	movlw	0
  5236  000DA2  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5237  000DA4  51BB               	movf	??_enleveTuilesAutour& (0+255),w,b
  5238  000DA6  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5239  000DA8  6ED9               	movwf	fsr2l,c
  5240  000DAA  51BC               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5241  000DAC  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5242  000DAE  6EDA               	movwf	fsr2h,c
  5243  000DB0  50DF               	movf	indf2,w,c
  5244  000DB2  EC8B  F010         	call	_lcd_ecritChar
  5245  000DB6                     l2257:
  5246                           
  5247                           ;main.c: 407: };main.c: 408: if(xTabCol==19&&i==0)
  5248  000DB6  0E13               	movlw	19
  5249  000DB8  0100               	movlb	0	; force () banked
  5250  000DBA  19C4               	xorwf	enleveTuilesAutour@xTabCol& (0+255),w,b
  5251  000DBC  A4D8               	btfss	status,2,c
  5252  000DBE  EFE3  F006         	goto	u1631
  5253  000DC2  EFE5  F006         	goto	u1630
  5254  000DC6                     u1631:
  5255  000DC6  EFF1  F006         	goto	l2263
  5256  000DCA                     u1630:
  5257  000DCA                     
  5258                           ; BSR set to: 0
  5259  000DCA  0100               	movlb	0	; force () banked
  5260  000DCC  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  5261  000DCE  A4D8               	btfss	status,2,c
  5262  000DD0  EFEC  F006         	goto	u1641
  5263  000DD4  EFEE  F006         	goto	u1640
  5264  000DD8                     u1641:
  5265  000DD8  EFF1  F006         	goto	l2263
  5266  000DDC                     u1640:
  5267  000DDC                     
  5268                           ; BSR set to: 0
  5269                           ;main.c: 409: i=1;
  5270  000DDC  0E01               	movlw	1
  5271  000DDE  0100               	movlb	0	; force () banked
  5272  000DE0  6FC7               	movwf	enleveTuilesAutour@i& (0+255),b
  5273  000DE2                     l2263:
  5274                           
  5275                           ; BSR set to: 0
  5276  000DE2  0100               	movlb	0	; force () banked
  5277  000DE4  2BC7               	incf	enleveTuilesAutour@i& (0+255),f,b
  5278  000DE6                     
  5279                           ; BSR set to: 0
  5280  000DE6  0100               	movlb	0	; force () banked
  5281  000DE8  51C7               	movf	enleveTuilesAutour@i& (0+255),w,b
  5282  000DEA  0A80               	xorlw	128
  5283  000DEC  0F7E               	addlw	-130
  5284  000DEE  A0D8               	btfss	status,0,c
  5285  000DF0  EFFC  F006         	goto	u1651
  5286  000DF4  EFFE  F006         	goto	u1650
  5287  000DF8                     u1651:
  5288  000DF8  EFA1  F005         	goto	l2241
  5289  000DFC                     u1650:
  5290  000DFC                     l2267:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;main.c: 411: };main.c: 412: if(yTabLigne==3&&j==0)
  5294  000DFC  0E03               	movlw	3
  5295  000DFE  0100               	movlb	0	; force () banked
  5296  000E00  19C5               	xorwf	enleveTuilesAutour@yTabLigne& (0+255),w,b
  5297  000E02  A4D8               	btfss	status,2,c
  5298  000E04  EF06  F007         	goto	u1661
  5299  000E08  EF08  F007         	goto	u1660
  5300  000E0C                     u1661:
  5301  000E0C  EF14  F007         	goto	l2273
  5302  000E10                     u1660:
  5303  000E10                     
  5304                           ; BSR set to: 0
  5305  000E10  0100               	movlb	0	; force () banked
  5306  000E12  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5307  000E14  A4D8               	btfss	status,2,c
  5308  000E16  EF0F  F007         	goto	u1671
  5309  000E1A  EF11  F007         	goto	u1670
  5310  000E1E                     u1671:
  5311  000E1E  EF14  F007         	goto	l2273
  5312  000E22                     u1670:
  5313  000E22                     
  5314                           ; BSR set to: 0
  5315                           ;main.c: 413: j=1;
  5316  000E22  0E01               	movlw	1
  5317  000E24  0100               	movlb	0	; force () banked
  5318  000E26  6FC6               	movwf	enleveTuilesAutour@j& (0+255),b
  5319  000E28                     l2273:
  5320                           
  5321                           ; BSR set to: 0
  5322  000E28  0100               	movlb	0	; force () banked
  5323  000E2A  2BC6               	incf	enleveTuilesAutour@j& (0+255),f,b
  5324  000E2C                     
  5325                           ; BSR set to: 0
  5326  000E2C  0100               	movlb	0	; force () banked
  5327  000E2E  51C6               	movf	enleveTuilesAutour@j& (0+255),w,b
  5328  000E30  0A80               	xorlw	128
  5329  000E32  0F7E               	addlw	-130
  5330  000E34  A0D8               	btfss	status,0,c
  5331  000E36  EF1F  F007         	goto	u1681
  5332  000E3A  EF21  F007         	goto	u1680
  5333  000E3E                     u1681:
  5334  000E3E  EF7D  F005         	goto	l2229
  5335  000E42                     u1680:
  5336  000E42                     l205:
  5337                           
  5338                           ; BSR set to: 0
  5339  000E42  0012               	return		;funcret
  5340  000E44                     __end_of_enleveTuilesAutour:
  5341                           	opt callstack 0
  5342                           
  5343 ;; *************** function ___wmul *****************
  5344 ;; Defined at:
  5345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5348 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  product         2    4[BANK0 ] unsigned int 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  2    0[BANK0 ] unsigned int 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, prodl, prodh
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5360 ;;      Params:         0       4       0       0       0       0       0
  5361 ;;      Locals:         0       2       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0
  5363 ;;      Totals:         0       6       0       0       0       0       0
  5364 ;;Total ram usage:        6 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_calculToucheCombien
  5370 ;;		_enleveTuilesAutour
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text26
  5375  0022A8                     __ptext26:
  5376                           	opt callstack 0
  5377  0022A8                     ___wmul:
  5378                           	opt callstack 28
  5379  0022A8  0100               	movlb	0	; () banked
  5380  0022AA  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5381  0022AC  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5382  0022AE  CFF3 F0B8          	movff	prodl,___wmul@product
  5383  0022B2  CFF4 F0B9          	movff	prodh,___wmul@product+1
  5384  0022B6  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5385  0022B8  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5386  0022BA  50F3               	movf	243,w,c
  5387  0022BC  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5388  0022BE  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5389  0022C0  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5390  0022C2  50F3               	movf	243,w,c
  5391  0022C4  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5392  0022C6                     
  5393                           ; BSR set to: 0
  5394  0022C6  C0B8  F0B4         	movff	___wmul@product,?___wmul
  5395  0022CA  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  5396  0022CE                     
  5397                           ; BSR set to: 0
  5398  0022CE  0012               	return		;funcret
  5399  0022D0                     __end_of___wmul:
  5400                           	opt callstack 0
  5401                           
  5402 ;; *************** function _afficheTabVue *****************
  5403 ;; Defined at:
  5404 ;;		line 172 in file "main.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  i               1   16[BANK0 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5418 ;;      Params:         0       0       0       0       0       0       0
  5419 ;;      Locals:         0       1       0       0       0       0       0
  5420 ;;      Temps:          0       2       0       0       0       0       0
  5421 ;;      Totals:         0       3       0       0       0       0       0
  5422 ;;Total ram usage:        3 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    5
  5425 ;; This function calls:
  5426 ;;		_lcd_gotoXY
  5427 ;;		_lcd_putMessage
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text27
  5434  001DDA                     __ptext27:
  5435                           	opt callstack 0
  5436  001DDA                     _afficheTabVue:
  5437                           	opt callstack 25
  5438  001DDA                     
  5439                           ;main.c: 174: for(unsigned char i =0; i<4;++i)
  5440  001DDA  0E00               	movlw	0
  5441  001DDC  0100               	movlb	0	; force () banked
  5442  001DDE  6FC4               	movwf	afficheTabVue@i& (0+255),b
  5443  001DE0                     
  5444                           ; BSR set to: 0
  5445  001DE0  0E03               	movlw	3
  5446  001DE2  0100               	movlb	0	; force () banked
  5447  001DE4  65C4               	cpfsgt	afficheTabVue@i& (0+255),b
  5448  001DE6  EFF7  F00E         	goto	u1971
  5449  001DEA  EFF9  F00E         	goto	u1970
  5450  001DEE                     u1971:
  5451  001DEE  EFFB  F00E         	goto	l2539
  5452  001DF2                     u1970:
  5453  001DF2  EF23  F00F         	goto	l121
  5454  001DF6                     l2539:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;main.c: 175: {;main.c: 176: lcd_gotoXY(1,i+1);
  5458  001DF6  0100               	movlb	0	; force () banked
  5459  001DF8  29C4               	incf	afficheTabVue@i& (0+255),w,b
  5460  001DFA  0100               	movlb	0	; force () banked
  5461  001DFC  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5462  001DFE  0E01               	movlw	1
  5463  001E00  ECB4  F00E         	call	_lcd_gotoXY
  5464  001E04                     
  5465                           ;main.c: 177: lcd_putMessage(m_tabVue[i]);
  5466  001E04  0100               	movlb	0	; force () banked
  5467  001E06  51C4               	movf	afficheTabVue@i& (0+255),w,b
  5468  001E08  0D15               	mullw	21
  5469  001E0A  0E00               	movlw	low _m_tabVue
  5470  001E0C  24F3               	addwf	243,w,c
  5471  001E0E  0100               	movlb	0	; force () banked
  5472  001E10  6FC2               	movwf	??_afficheTabVue& (0+255),b
  5473  001E12  0E01               	movlw	high _m_tabVue
  5474  001E14  20F4               	addwfc	prodh,w,c
  5475  001E16  6FC3               	movwf	(??_afficheTabVue+1)& (0+255),b
  5476  001E18  C0C2  F0B9         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5477  001E1C  C0C3  F0BA         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5478  001E20  0100               	movlb	0	; force () banked
  5479  001E22  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  5480  001E24  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5481  001E26  A4D8               	btfss	status,2,c
  5482  001E28  0E20               	movlw	32
  5483  001E2A  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5484  001E2C  EC22  F00D         	call	_lcd_putMessage	;wreg free
  5485  001E30  0100               	movlb	0	; force () banked
  5486  001E32  2BC4               	incf	afficheTabVue@i& (0+255),f,b
  5487  001E34                     
  5488                           ; BSR set to: 0
  5489  001E34  0E03               	movlw	3
  5490  001E36  0100               	movlb	0	; force () banked
  5491  001E38  65C4               	cpfsgt	afficheTabVue@i& (0+255),b
  5492  001E3A  EF21  F00F         	goto	u1981
  5493  001E3E  EF23  F00F         	goto	u1980
  5494  001E42                     u1981:
  5495  001E42  EFFB  F00E         	goto	l2539
  5496  001E46                     u1980:
  5497  001E46                     l121:
  5498                           
  5499                           ; BSR set to: 0
  5500  001E46  0012               	return		;funcret
  5501  001E48                     __end_of_afficheTabVue:
  5502                           	opt callstack 0
  5503                           
  5504 ;; *************** function _afficheTabMines *****************
  5505 ;; Defined at:
  5506 ;;		line 186 in file "main.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  i               1   16[BANK0 ] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5520 ;;      Params:         0       0       0       0       0       0       0
  5521 ;;      Locals:         0       1       0       0       0       0       0
  5522 ;;      Temps:          0       2       0       0       0       0       0
  5523 ;;      Totals:         0       3       0       0       0       0       0
  5524 ;;Total ram usage:        3 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    5
  5527 ;; This function calls:
  5528 ;;		_lcd_gotoXY
  5529 ;;		_lcd_putMessage
  5530 ;; This function is called by:
  5531 ;;		_main
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text28
  5536  001E48                     __ptext28:
  5537                           	opt callstack 0
  5538  001E48                     _afficheTabMines:
  5539                           	opt callstack 25
  5540  001E48                     
  5541                           ;main.c: 188: for(unsigned char i =0; i<4;++i)
  5542  001E48  0E00               	movlw	0
  5543  001E4A  0100               	movlb	0	; force () banked
  5544  001E4C  6FC4               	movwf	afficheTabMines@i& (0+255),b
  5545  001E4E                     
  5546                           ; BSR set to: 0
  5547  001E4E  0E03               	movlw	3
  5548  001E50  0100               	movlb	0	; force () banked
  5549  001E52  65C4               	cpfsgt	afficheTabMines@i& (0+255),b
  5550  001E54  EF2E  F00F         	goto	u2261
  5551  001E58  EF30  F00F         	goto	u2260
  5552  001E5C                     u2261:
  5553  001E5C  EF32  F00F         	goto	l2669
  5554  001E60                     u2260:
  5555  001E60  EF5A  F00F         	goto	l126
  5556  001E64                     l2669:
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;main.c: 189: {;main.c: 190: lcd_gotoXY(1,i+1);
  5560  001E64  0100               	movlb	0	; force () banked
  5561  001E66  29C4               	incf	afficheTabMines@i& (0+255),w,b
  5562  001E68  0100               	movlb	0	; force () banked
  5563  001E6A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5564  001E6C  0E01               	movlw	1
  5565  001E6E  ECB4  F00E         	call	_lcd_gotoXY
  5566  001E72                     
  5567                           ;main.c: 191: lcd_putMessage(m_tabMines[i]);
  5568  001E72  0100               	movlb	0	; force () banked
  5569  001E74  51C4               	movf	afficheTabMines@i& (0+255),w,b
  5570  001E76  0D15               	mullw	21
  5571  001E78  0E60               	movlw	low _m_tabMines
  5572  001E7A  24F3               	addwf	243,w,c
  5573  001E7C  0100               	movlb	0	; force () banked
  5574  001E7E  6FC2               	movwf	??_afficheTabMines& (0+255),b
  5575  001E80  0E00               	movlw	high _m_tabMines
  5576  001E82  20F4               	addwfc	prodh,w,c
  5577  001E84  6FC3               	movwf	(??_afficheTabMines+1)& (0+255),b
  5578  001E86  C0C2  F0B9         	movff	??_afficheTabMines,lcd_putMessage@chaine
  5579  001E8A  C0C3  F0BA         	movff	??_afficheTabMines+1,lcd_putMessage@chaine+1
  5580  001E8E  0100               	movlb	0	; force () banked
  5581  001E90  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
  5582  001E92  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5583  001E94  A4D8               	btfss	status,2,c
  5584  001E96  0E20               	movlw	32
  5585  001E98  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5586  001E9A  EC22  F00D         	call	_lcd_putMessage	;wreg free
  5587  001E9E  0100               	movlb	0	; force () banked
  5588  001EA0  2BC4               	incf	afficheTabMines@i& (0+255),f,b
  5589  001EA2                     
  5590                           ; BSR set to: 0
  5591  001EA2  0E03               	movlw	3
  5592  001EA4  0100               	movlb	0	; force () banked
  5593  001EA6  65C4               	cpfsgt	afficheTabMines@i& (0+255),b
  5594  001EA8  EF58  F00F         	goto	u2271
  5595  001EAC  EF5A  F00F         	goto	u2270
  5596  001EB0                     u2271:
  5597  001EB0  EF32  F00F         	goto	l2669
  5598  001EB4                     u2270:
  5599  001EB4                     l126:
  5600                           
  5601                           ; BSR set to: 0
  5602  001EB4  0012               	return		;funcret
  5603  001EB6                     __end_of_afficheTabMines:
  5604                           	opt callstack 0
  5605                           
  5606 ;; *************** function _lcd_putMessage *****************
  5607 ;; Defined at:
  5608 ;;		line 388 in file "Lcd4Lignes.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  5611 ;;		 -> STR_2(8), STR_1(9), m_tabMines(84), menuAccueil@menuMsgs(40), 
  5612 ;;		 -> m_tabVue(84), 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  j               1   13[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5624 ;;      Params:         0       3       0       0       0       0       0
  5625 ;;      Locals:         0       1       0       0       0       0       0
  5626 ;;      Temps:          0       5       0       0       0       0       0
  5627 ;;      Totals:         0       9       0       0       0       0       0
  5628 ;;Total ram usage:        9 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    4
  5631 ;; This function calls:
  5632 ;;		_lcd_ecritChar
  5633 ;; This function is called by:
  5634 ;;		_menuAccueil
  5635 ;;		_afficheTabVue
  5636 ;;		_afficheTabMines
  5637 ;;		_afficheGagne
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text29
  5642  001A44                     __ptext29:
  5643                           	opt callstack 0
  5644  001A44                     _lcd_putMessage:
  5645                           	opt callstack 25
  5646  001A44                     
  5647                           ;Lcd4Lignes.c: 390: unsigned char j;;Lcd4Lignes.c: 392: for(j = 0; chaine[j] != 0; j++)
  5648  001A44  0E00               	movlw	0
  5649  001A46  0100               	movlb	0	; force () banked
  5650  001A48  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  5651  001A4A  EF4F  F00D         	goto	l2083
  5652  001A4E                     l2079:
  5653                           
  5654                           ;Lcd4Lignes.c: 393: lcd_ecritChar(chaine[j]);
  5655  001A4E  0100               	movlb	0	; force () banked
  5656  001A50  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  5657  001A52  0100               	movlb	0	; force () banked
  5658  001A54  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  5659  001A56  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5660  001A58  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  5661  001A5A  0100               	movlb	0	; force () banked
  5662  001A5C  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5663  001A5E  0100               	movlb	0	; force () banked
  5664  001A60  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5665  001A62  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5666  001A64  0100               	movlb	0	; force () banked
  5667  001A66  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5668  001A68  0100               	movlb	0	; force () banked
  5669  001A6A  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5670  001A6C  0E00               	movlw	0
  5671  001A6E  0100               	movlb	0	; force () banked
  5672  001A70  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5673  001A72  0100               	movlb	0	; force () banked
  5674  001A74  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5675  001A76  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5676  001A7A  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5677  001A7E  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5678  001A82  BAF8               	btfsc	tblptru,5,c
  5679  001A84  D003               	bra	u1247
  5680  001A86  0008               	tblrd		*
  5681  001A88  50F5               	movf	tablat,w,c
  5682  001A8A  D005               	bra	u1240
  5683  001A8C                     u1247:
  5684  001A8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5685  001A90  CFF7 FFEA          	movff	tblptrh,fsr0h
  5686  001A94  50EF               	movf	indf0,w,c
  5687  001A96                     u1240:
  5688  001A96  EC8B  F010         	call	_lcd_ecritChar
  5689  001A9A  0100               	movlb	0	; force () banked
  5690  001A9C  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  5691  001A9E                     l2083:
  5692                           
  5693                           ; BSR set to: 0
  5694  001A9E  0100               	movlb	0	; force () banked
  5695  001AA0  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  5696  001AA2  0100               	movlb	0	; force () banked
  5697  001AA4  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  5698  001AA6  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5699  001AA8  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  5700  001AAA  0100               	movlb	0	; force () banked
  5701  001AAC  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5702  001AAE  0100               	movlb	0	; force () banked
  5703  001AB0  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5704  001AB2  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5705  001AB4  0100               	movlb	0	; force () banked
  5706  001AB6  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5707  001AB8  0100               	movlb	0	; force () banked
  5708  001ABA  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5709  001ABC  0E00               	movlw	0
  5710  001ABE  0100               	movlb	0	; force () banked
  5711  001AC0  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5712  001AC2  0100               	movlb	0	; force () banked
  5713  001AC4  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5714  001AC6  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5715  001ACA  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5716  001ACE  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5717  001AD2  BAF8               	btfsc	tblptru,5,c
  5718  001AD4  D003               	bra	u1257
  5719  001AD6  0008               	tblrd		*
  5720  001AD8  50F5               	movf	tablat,w,c
  5721  001ADA  D005               	bra	u1250
  5722  001ADC                     u1257:
  5723  001ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5724  001AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5725  001AE4  50EF               	movf	indf0,w,c
  5726  001AE6                     u1250:
  5727  001AE6  0900               	iorlw	0
  5728  001AE8  A4D8               	btfss	status,2,c
  5729  001AEA  EF79  F00D         	goto	u1261
  5730  001AEE  EF7B  F00D         	goto	u1260
  5731  001AF2                     u1261:
  5732  001AF2  EF27  F00D         	goto	l2079
  5733  001AF6                     u1260:
  5734  001AF6  0012               	return		;funcret
  5735  001AF8                     __end_of_lcd_putMessage:
  5736                           	opt callstack 0
  5737                           
  5738 ;; *************** function _lcd_ecritChar *****************
  5739 ;; Defined at:
  5740 ;;		line 360 in file "Lcd4Lignes.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  car             1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  car             1    3[BANK0 ] unsigned char 
  5745 ;;  posRam          1    4[BANK0 ] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5755 ;;      Params:         0       0       0       0       0       0       0
  5756 ;;      Locals:         0       2       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0
  5758 ;;      Totals:         0       2       0       0       0       0       0
  5759 ;;Total ram usage:        2 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    3
  5762 ;; This function calls:
  5763 ;;		_lcd_wrCom
  5764 ;;		_lcd_wrData
  5765 ;; This function is called by:
  5766 ;;		_main
  5767 ;;		_demine
  5768 ;;		_enleveTuilesAutour
  5769 ;;		_lcd_putMessage
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text30
  5774  002116                     __ptext30:
  5775                           	opt callstack 0
  5776  002116                     _lcd_ecritChar:
  5777                           	opt callstack 25
  5778                           
  5779                           ;incstack = 0
  5780                           ;lcd_ecritChar@car stored from wreg
  5781  002116  0100               	movlb	0	; force () banked
  5782  002118  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5783  00211A                     
  5784                           ;Lcd4Lignes.c: 362: unsigned char posRam;;Lcd4Lignes.c: 364: posRam = lcd_wrData(car);
  5785  00211A  0100               	movlb	0	; force () banked
  5786  00211C  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5787  00211E  EC10  F011         	call	_lcd_wrData
  5788  002122  0100               	movlb	0	; force () banked
  5789  002124  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5790                           
  5791                           ;Lcd4Lignes.c: 365: switch(posRam)
  5792  002126  EFA4  F010         	goto	l2073
  5793  00212A                     l2065:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;Lcd4Lignes.c: 368: lcd_wrCom(0xC0|0x80);
  5797  00212A  0EC0               	movlw	192
  5798  00212C  EC91  F00F         	call	_lcd_wrCom
  5799                           
  5800                           ;Lcd4Lignes.c: 369: break;
  5801  002130  EFB4  F010         	goto	l357
  5802  002134                     l2067:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;Lcd4Lignes.c: 371: lcd_wrCom(0x94|0x80);
  5806  002134  0E94               	movlw	148
  5807  002136  EC91  F00F         	call	_lcd_wrCom
  5808                           
  5809                           ;Lcd4Lignes.c: 372: break;
  5810  00213A  EFB4  F010         	goto	l357
  5811  00213E                     l2069:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;Lcd4Lignes.c: 374: lcd_wrCom(0xD4|0x80);
  5815  00213E  0ED4               	movlw	212
  5816  002140  EC91  F00F         	call	_lcd_wrCom
  5817                           
  5818                           ;Lcd4Lignes.c: 375: break;
  5819  002144  EFB4  F010         	goto	l357
  5820  002148                     l2073:
  5821                           
  5822                           ; BSR set to: 0
  5823  002148  0100               	movlb	0	; force () banked
  5824  00214A  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5825                           
  5826                           ; Switch size 1, requested type "simple"
  5827                           ; Number of cases is 3, Range of values is 148 to 212
  5828                           ; switch strategies available:
  5829                           ; Name         Instructions Cycles
  5830                           ; simple_byte           10     6 (average)
  5831                           ;	Chosen strategy is simple_byte
  5832  00214C  0A94               	xorlw	148	; case 148
  5833  00214E  B4D8               	btfsc	status,2,c
  5834  002150  EF95  F010         	goto	l2065
  5835  002154  0A54               	xorlw	84	; case 192
  5836  002156  B4D8               	btfsc	status,2,c
  5837  002158  EF9F  F010         	goto	l2069
  5838  00215C  0A14               	xorlw	20	; case 212
  5839  00215E  B4D8               	btfsc	status,2,c
  5840  002160  EF9A  F010         	goto	l2067
  5841  002164  EFB4  F010         	goto	l357
  5842  002168                     l357:
  5843  002168  0012               	return		;funcret
  5844  00216A                     __end_of_lcd_ecritChar:
  5845                           	opt callstack 0
  5846                           
  5847 ;; *************** function _lcd_wrData *****************
  5848 ;; Defined at:
  5849 ;;		line 189 in file "Lcd4Lignes.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  caractere       1    wreg     unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  caractere       1    2[BANK0 ] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      unsigned char 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5863 ;;      Params:         0       0       0       0       0       0       0
  5864 ;;      Locals:         0       1       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0
  5866 ;;      Totals:         0       1       0       0       0       0       0
  5867 ;;Total ram usage:        1 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    2
  5870 ;; This function calls:
  5871 ;;		_lcd_busy
  5872 ;;		_lcd_ecrireDonnees
  5873 ;;		_lcd_strobeEnableBit
  5874 ;; This function is called by:
  5875 ;;		_lcd_ecritChar
  5876 ;;		_lcd_initCGRam
  5877 ;;		_lcd_effaceChar
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text31
  5882  002220                     __ptext31:
  5883                           	opt callstack 0
  5884  002220                     _lcd_wrData:
  5885                           	opt callstack 25
  5886                           
  5887                           ;incstack = 0
  5888                           ;lcd_wrData@caractere stored from wreg
  5889  002220  0100               	movlb	0	; force () banked
  5890  002222  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5891  002224                     
  5892                           ;Lcd4Lignes.c: 191: lcd_busy();
  5893  002224  ECB5  F010         	call	_lcd_busy	;wreg free
  5894  002228                     
  5895                           ;Lcd4Lignes.c: 192: TRISD = 0b00000000;
  5896  002228  0E00               	movlw	0
  5897  00222A  6E95               	movwf	149,c	;volatile
  5898  00222C                     
  5899                           ;Lcd4Lignes.c: 195: PORTAbits.RA0 = 1;
  5900  00222C  8080               	bsf	128,0,c	;volatile
  5901  00222E                     
  5902                           ;Lcd4Lignes.c: 196: PORTAbits.RA1 = 0;
  5903  00222E  9280               	bcf	128,1,c	;volatile
  5904  002230                     
  5905                           ;Lcd4Lignes.c: 198: lcd_ecrireDonnees(caractere >> 4);
  5906  002230  0100               	movlb	0	; force () banked
  5907  002232  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5908  002234  0B0F               	andlw	15
  5909  002236  EC77  F011         	call	_lcd_ecrireDonnees
  5910  00223A                     
  5911                           ;Lcd4Lignes.c: 199: lcd_strobeEnableBit();
  5912  00223A  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  5913  00223E                     
  5914                           ;Lcd4Lignes.c: 202: lcd_ecrireDonnees(caractere);
  5915  00223E  0100               	movlb	0	; force () banked
  5916  002240  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5917  002242  EC77  F011         	call	_lcd_ecrireDonnees
  5918  002246                     
  5919                           ;Lcd4Lignes.c: 203: lcd_strobeEnableBit();
  5920  002246  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  5921  00224A                     
  5922                           ;Lcd4Lignes.c: 206: TRISD = 0b00001111;
  5923  00224A  0E0F               	movlw	15
  5924  00224C  6E95               	movwf	149,c	;volatile
  5925  00224E                     
  5926                           ;Lcd4Lignes.c: 207: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5927                           ;Lcd4Lignes.c: 208: return(lcd_busy());
  5928  00224E  ECB5  F010         	call	_lcd_busy	;wreg free
  5929  002252  0012               	return		;funcret
  5930  002254                     __end_of_lcd_wrData:
  5931                           	opt callstack 0
  5932                           
  5933 ;; *************** function _lcd_gotoXY *****************
  5934 ;; Defined at:
  5935 ;;		line 315 in file "Lcd4Lignes.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  x               1    wreg     unsigned char 
  5938 ;;  y               1    3[BANK0 ] unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  x               1    4[BANK0 ] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5950 ;;      Params:         0       1       0       0       0       0       0
  5951 ;;      Locals:         0       1       0       0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0
  5953 ;;      Totals:         0       2       0       0       0       0       0
  5954 ;;Total ram usage:        2 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    3
  5957 ;; This function calls:
  5958 ;;		_lcd_wrCom
  5959 ;; This function is called by:
  5960 ;;		_menuAccueil
  5961 ;;		_afficheTabVue
  5962 ;;		_afficheTabMines
  5963 ;;		_deplace
  5964 ;;		_enleveTuilesAutour
  5965 ;;		_afficheGagne
  5966 ;;		_lcd_effaceLigne
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text32
  5971  001D68                     __ptext32:
  5972                           	opt callstack 0
  5973  001D68                     _lcd_gotoXY:
  5974                           	opt callstack 26
  5975                           
  5976                           ;incstack = 0
  5977                           ;lcd_gotoXY@x stored from wreg
  5978  001D68  0100               	movlb	0	; force () banked
  5979  001D6A  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5980  001D6C                     
  5981                           ;Lcd4Lignes.c: 317: switch(y)
  5982  001D6C  EFD8  F00E         	goto	l2097
  5983  001D70                     l2087:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;Lcd4Lignes.c: 320: lcd_wrCom((x-1+0x80)|0x80);
  5987  001D70  0100               	movlb	0	; force () banked
  5988  001D72  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5989  001D74  0F7F               	addlw	127
  5990  001D76  0980               	iorlw	128
  5991  001D78  EC91  F00F         	call	_lcd_wrCom
  5992                           
  5993                           ;Lcd4Lignes.c: 321: break;
  5994  001D7C  EFEC  F00E         	goto	l346
  5995  001D80                     l2089:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;Lcd4Lignes.c: 323: lcd_wrCom((x-1+0xC0)|0x80);
  5999  001D80  0100               	movlb	0	; force () banked
  6000  001D82  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6001  001D84  0FBF               	addlw	191
  6002  001D86  0980               	iorlw	128
  6003  001D88  EC91  F00F         	call	_lcd_wrCom
  6004                           
  6005                           ;Lcd4Lignes.c: 324: break;
  6006  001D8C  EFEC  F00E         	goto	l346
  6007  001D90                     l2091:
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;Lcd4Lignes.c: 326: lcd_wrCom((x-1+0x94)|0x80);
  6011  001D90  0100               	movlb	0	; force () banked
  6012  001D92  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6013  001D94  0F93               	addlw	147
  6014  001D96  0980               	iorlw	128
  6015  001D98  EC91  F00F         	call	_lcd_wrCom
  6016                           
  6017                           ;Lcd4Lignes.c: 327: break;
  6018  001D9C  EFEC  F00E         	goto	l346
  6019  001DA0                     l2093:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;Lcd4Lignes.c: 329: lcd_wrCom((x-1+0xD4)|0x80);
  6023  001DA0  0100               	movlb	0	; force () banked
  6024  001DA2  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6025  001DA4  0FD3               	addlw	211
  6026  001DA6  0980               	iorlw	128
  6027  001DA8  EC91  F00F         	call	_lcd_wrCom
  6028                           
  6029                           ;Lcd4Lignes.c: 330: break;
  6030  001DAC  EFEC  F00E         	goto	l346
  6031  001DB0                     l2097:
  6032  001DB0  0100               	movlb	0	; force () banked
  6033  001DB2  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  6034                           
  6035                           ; Switch size 1, requested type "simple"
  6036                           ; Number of cases is 4, Range of values is 1 to 4
  6037                           ; switch strategies available:
  6038                           ; Name         Instructions Cycles
  6039                           ; simple_byte           13     7 (average)
  6040                           ;	Chosen strategy is simple_byte
  6041  001DB4  0A01               	xorlw	1	; case 1
  6042  001DB6  B4D8               	btfsc	status,2,c
  6043  001DB8  EFB8  F00E         	goto	l2087
  6044  001DBC  0A03               	xorlw	3	; case 2
  6045  001DBE  B4D8               	btfsc	status,2,c
  6046  001DC0  EFC0  F00E         	goto	l2089
  6047  001DC4  0A01               	xorlw	1	; case 3
  6048  001DC6  B4D8               	btfsc	status,2,c
  6049  001DC8  EFC8  F00E         	goto	l2091
  6050  001DCC  0A07               	xorlw	7	; case 4
  6051  001DCE  B4D8               	btfsc	status,2,c
  6052  001DD0  EFD0  F00E         	goto	l2093
  6053  001DD4  EFEC  F00E         	goto	l346
  6054  001DD8                     l346:
  6055  001DD8  0012               	return		;funcret
  6056  001DDA                     __end_of_lcd_gotoXY:
  6057                           	opt callstack 0
  6058                           
  6059 ;; *************** function _lcd_wrCom *****************
  6060 ;; Defined at:
  6061 ;;		line 157 in file "Lcd4Lignes.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  commande        1    wreg     unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  commande        1    2[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      unsigned char 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6075 ;;      Params:         0       0       0       0       0       0       0
  6076 ;;      Locals:         0       1       0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0
  6078 ;;      Totals:         0       1       0       0       0       0       0
  6079 ;;Total ram usage:        1 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    2
  6082 ;; This function calls:
  6083 ;;		_lcd_busy
  6084 ;;		_lcd_ecrireDonnees
  6085 ;;		_lcd_strobeEnableBit
  6086 ;; This function is called by:
  6087 ;;		_lcd_init
  6088 ;;		_lcd_effaceAffichage
  6089 ;;		_lcd_curseurHome
  6090 ;;		_lcd_gotoXY
  6091 ;;		_lcd_ecritChar
  6092 ;;		_lcd_cacheCurseur
  6093 ;;		_lcd_montreCurseur
  6094 ;;		_lcd_initCGRam
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text33
  6099  001F22                     __ptext33:
  6100                           	opt callstack 0
  6101  001F22                     _lcd_wrCom:
  6102                           	opt callstack 25
  6103                           
  6104                           ;incstack = 0
  6105                           ;lcd_wrCom@commande stored from wreg
  6106  001F22  0100               	movlb	0	; force () banked
  6107  001F24  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  6108  001F26                     
  6109                           ;Lcd4Lignes.c: 159: lcd_busy();
  6110  001F26  ECB5  F010         	call	_lcd_busy	;wreg free
  6111  001F2A                     
  6112                           ;Lcd4Lignes.c: 161: TRISD = 0b00000000;
  6113  001F2A  0E00               	movlw	0
  6114  001F2C  6E95               	movwf	149,c	;volatile
  6115  001F2E                     
  6116                           ;Lcd4Lignes.c: 164: PORTAbits.RA0 = 0;
  6117  001F2E  9080               	bcf	128,0,c	;volatile
  6118  001F30                     
  6119                           ;Lcd4Lignes.c: 165: PORTAbits.RA1 = 0;
  6120  001F30  9280               	bcf	128,1,c	;volatile
  6121  001F32                     
  6122                           ;Lcd4Lignes.c: 167: lcd_ecrireDonnees(commande >> 4);
  6123  001F32  0100               	movlb	0	; force () banked
  6124  001F34  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  6125  001F36  0B0F               	andlw	15
  6126  001F38  EC77  F011         	call	_lcd_ecrireDonnees
  6127  001F3C                     
  6128                           ;Lcd4Lignes.c: 168: lcd_strobeEnableBit();
  6129  001F3C  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  6130  001F40                     
  6131                           ;Lcd4Lignes.c: 171: lcd_ecrireDonnees(commande);
  6132  001F40  0100               	movlb	0	; force () banked
  6133  001F42  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  6134  001F44  EC77  F011         	call	_lcd_ecrireDonnees
  6135  001F48                     
  6136                           ;Lcd4Lignes.c: 172: lcd_strobeEnableBit();
  6137  001F48  ECA0  F011         	call	_lcd_strobeEnableBit	;wreg free
  6138  001F4C                     
  6139                           ;Lcd4Lignes.c: 173: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6140  001F4C  0E03               	movlw	3
  6141  001F4E                     u2457:
  6142  001F4E  2EE8               	decfsz	wreg,f,c
  6143  001F50  D7FE               	bra	u2457
  6144  001F52  F000               	nop	
  6145  001F54                     
  6146                           ;Lcd4Lignes.c: 175: if ((commande == 0x01) || commande == 0x02)
  6147  001F54  0100               	movlb	0	; force () banked
  6148  001F56  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  6149  001F58  B4D8               	btfsc	status,2,c
  6150  001F5A  EFB1  F00F         	goto	u1221
  6151  001F5E  EFB3  F00F         	goto	u1220
  6152  001F62                     u1221:
  6153  001F62  EFBD  F00F         	goto	l2025
  6154  001F66                     u1220:
  6155  001F66                     
  6156                           ; BSR set to: 0
  6157  001F66  0E02               	movlw	2
  6158  001F68  0100               	movlb	0	; force () banked
  6159  001F6A  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  6160  001F6C  A4D8               	btfss	status,2,c
  6161  001F6E  EFBB  F00F         	goto	u1231
  6162  001F72  EFBD  F00F         	goto	u1230
  6163  001F76                     u1231:
  6164  001F76  EFC2  F00F         	goto	l2027
  6165  001F7A                     u1230:
  6166  001F7A                     l2025:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;Lcd4Lignes.c: 176: _delay((unsigned long)((2)*(1000000/4000.0)));
  6170  001F7A  0EA6               	movlw	166
  6171  001F7C                     u2467:
  6172  001F7C  2EE8               	decfsz	wreg,f,c
  6173  001F7E  D7FE               	bra	u2467
  6174  001F80  F000 F000          	nop2	
  6175  001F84                     l2027:
  6176                           
  6177                           ;Lcd4Lignes.c: 178: TRISD = 0b00001111;
  6178  001F84  0E0F               	movlw	15
  6179  001F86  6E95               	movwf	149,c	;volatile
  6180  001F88                     
  6181                           ;Lcd4Lignes.c: 180: return(lcd_busy());
  6182  001F88  ECB5  F010         	call	_lcd_busy	;wreg free
  6183  001F8C  0012               	return		;funcret
  6184  001F8E                     __end_of_lcd_wrCom:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function _lcd_strobeEnableBit *****************
  6188 ;; Defined at:
  6189 ;;		line 432 in file "Lcd4Lignes.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		None
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6203 ;;      Params:         0       0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0
  6206 ;;      Totals:         0       0       0       0       0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_lcd_wrCom
  6213 ;;		_lcd_wrData
  6214 ;;		_lcd_resetSequence
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text34
  6219  002340                     __ptext34:
  6220                           	opt callstack 0
  6221  002340                     _lcd_strobeEnableBit:
  6222                           	opt callstack 26
  6223  002340                     
  6224                           ;Lcd4Lignes.c: 434: PORTAbits.RA2 = 1;
  6225  002340  8480               	bsf	128,2,c	;volatile
  6226                           
  6227                           ;Lcd4Lignes.c: 435: __nop();
  6228  002342  F000               	nop	
  6229                           
  6230                           ;Lcd4Lignes.c: 436: PORTAbits.RA2 = 0;
  6231  002344  9480               	bcf	128,2,c	;volatile
  6232  002346  0012               	return		;funcret
  6233  002348                     __end_of_lcd_strobeEnableBit:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function _lcd_ecrireDonnees *****************
  6237 ;; Defined at:
  6238 ;;		line 108 in file "Lcd4Lignes.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  donnee          1    wreg     unsigned char 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  donnee          1    1[BANK0 ] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6252 ;;      Params:         0       0       0       0       0       0       0
  6253 ;;      Locals:         0       1       0       0       0       0       0
  6254 ;;      Temps:          0       1       0       0       0       0       0
  6255 ;;      Totals:         0       2       0       0       0       0       0
  6256 ;;Total ram usage:        2 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_lcd_wrCom
  6262 ;;		_lcd_wrData
  6263 ;;		_lcd_resetSequence
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text35
  6268  0022EE                     __ptext35:
  6269                           	opt callstack 0
  6270  0022EE                     _lcd_ecrireDonnees:
  6271                           	opt callstack 26
  6272                           
  6273                           ;incstack = 0
  6274                           ;lcd_ecrireDonnees@donnee stored from wreg
  6275  0022EE  0100               	movlb	0	; force () banked
  6276  0022F0  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  6277  0022F2                     
  6278                           ;Lcd4Lignes.c: 111: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  6279  0022F2  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  6280  0022F6  0EF0               	movlw	240
  6281  0022F8  0100               	movlb	0	; force () banked
  6282  0022FA  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  6283  0022FC  0100               	movlb	0	; force () banked
  6284  0022FE  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  6285  002300  0B0F               	andlw	15
  6286  002302  0100               	movlb	0	; force () banked
  6287  002304  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  6288  002306  6E83               	movwf	131,c	;volatile
  6289  002308                     
  6290                           ; BSR set to: 0
  6291  002308  0012               	return		;funcret
  6292  00230A                     __end_of_lcd_ecrireDonnees:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function _lcd_busy *****************
  6296 ;; Defined at:
  6297 ;;		line 125 in file "Lcd4Lignes.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  adresse         1    1[BANK0 ] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      unsigned char 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6311 ;;      Params:         0       0       0       0       0       0       0
  6312 ;;      Locals:         0       1       0       0       0       0       0
  6313 ;;      Temps:          0       1       0       0       0       0       0
  6314 ;;      Totals:         0       2       0       0       0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    1
  6318 ;; This function calls:
  6319 ;;		_lcd_lireDonnees
  6320 ;; This function is called by:
  6321 ;;		_lcd_wrCom
  6322 ;;		_lcd_wrData
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text36
  6327  00216A                     __ptext36:
  6328                           	opt callstack 0
  6329  00216A                     _lcd_busy:
  6330                           	opt callstack 25
  6331  00216A                     
  6332                           ;Lcd4Lignes.c: 127: unsigned char adresse;;Lcd4Lignes.c: 129: PORTAbits.RA0 = 0;
  6333  00216A  9080               	bcf	128,0,c	;volatile
  6334                           
  6335                           ;Lcd4Lignes.c: 130: PORTAbits.RA1 = 1;
  6336  00216C  8280               	bsf	128,1,c	;volatile
  6337  00216E                     l308:
  6338                           
  6339                           ;Lcd4Lignes.c: 133: {;Lcd4Lignes.c: 134: PORTAbits.RA2 = 1;
  6340  00216E  8480               	bsf	128,2,c	;volatile
  6341                           
  6342                           ;Lcd4Lignes.c: 135: __nop();
  6343  002170  F000               	nop	
  6344  002172                     
  6345                           ;Lcd4Lignes.c: 136: adresse = lcd_lireDonnees() << 4;
  6346  002172  ECA4  F011         	call	_lcd_lireDonnees	;wreg free
  6347  002176  0100               	movlb	0	; force () banked
  6348  002178  6FB4               	movwf	??_lcd_busy& (0+255),b
  6349  00217A  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6350  00217C  0BF0               	andlw	240
  6351  00217E  0100               	movlb	0	; force () banked
  6352  002180  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6353  002182                     
  6354                           ; BSR set to: 0
  6355                           ;Lcd4Lignes.c: 137: PORTAbits.RA2 = 0;
  6356  002182  9480               	bcf	128,2,c	;volatile
  6357  002184                     
  6358                           ;Lcd4Lignes.c: 139: PORTAbits.RA2 = 1;
  6359  002184  8480               	bsf	128,2,c	;volatile
  6360  002186                     
  6361                           ;Lcd4Lignes.c: 140: __nop();
  6362  002186  F000               	nop	
  6363                           
  6364                           ;Lcd4Lignes.c: 141: adresse |= lcd_lireDonnees();
  6365  002188  ECA4  F011         	call	_lcd_lireDonnees	;wreg free
  6366  00218C  0100               	movlb	0	; force () banked
  6367  00218E  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6368  002190                     
  6369                           ; BSR set to: 0
  6370                           ;Lcd4Lignes.c: 142: PORTAbits.RA2 = 0;
  6371  002190  9480               	bcf	128,2,c	;volatile
  6372  002192                     
  6373                           ;Lcd4Lignes.c: 144: };Lcd4Lignes.c: 145: while(adresse&0x80);
  6374  002192  0100               	movlb	0	; force () banked
  6375  002194  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6376  002196  EFCF  F010         	goto	u1211
  6377  00219A  EFD1  F010         	goto	u1210
  6378  00219E                     u1211:
  6379  00219E  EFB7  F010         	goto	l308
  6380  0021A2                     u1210:
  6381  0021A2                     
  6382                           ; BSR set to: 0
  6383                           ;Lcd4Lignes.c: 147: PORTAbits.RA1 = 0;
  6384  0021A2  9280               	bcf	128,1,c	;volatile
  6385  0021A4                     
  6386                           ; BSR set to: 0
  6387                           ;Lcd4Lignes.c: 148: return(adresse&0x7f);
  6388  0021A4  0100               	movlb	0	; force () banked
  6389  0021A6  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6390  0021A8  0B7F               	andlw	127
  6391  0021AA                     
  6392                           ; BSR set to: 0
  6393  0021AA  0012               	return		;funcret
  6394  0021AC                     __end_of_lcd_busy:
  6395                           	opt callstack 0
  6396                           
  6397 ;; *************** function _lcd_lireDonnees *****************
  6398 ;; Defined at:
  6399 ;;		line 94 in file "Lcd4Lignes.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      unsigned char 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6413 ;;      Params:         0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_lcd_busy
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text37
  6427  002348                     __ptext37:
  6428                           	opt callstack 0
  6429  002348                     _lcd_lireDonnees:
  6430                           	opt callstack 25
  6431  002348                     
  6432                           ;Lcd4Lignes.c: 97: return (PORTD & 0x0f);
  6433  002348  5083               	movf	131,w,c	;volatile
  6434  00234A  0B0F               	andlw	15
  6435  00234C  0012               	return		;funcret
  6436  00234E                     __end_of_lcd_lireDonnees:
  6437                           	opt callstack 0
  6438                           
  6439                           	psect	param0
  6440  0000                     tosu	equ	0xFFF
  6441                           tosh	equ	0xFFE
  6442                           tosl	equ	0xFFD
  6443                           stkptr	equ	0xFFC
  6444                           pclatu	equ	0xFFB
  6445                           pclath	equ	0xFFA
  6446                           pcl	equ	0xFF9
  6447                           tblptru	equ	0xFF8
  6448                           tblptrh	equ	0xFF7
  6449                           tblptrl	equ	0xFF6
  6450                           tablat	equ	0xFF5
  6451                           prodh	equ	0xFF4
  6452                           prodl	equ	0xFF3
  6453                           indf0	equ	0xFEF
  6454                           postinc0	equ	0xFEE
  6455                           postdec0	equ	0xFED
  6456                           preinc0	equ	0xFEC
  6457                           plusw0	equ	0xFEB
  6458                           fsr0h	equ	0xFEA
  6459                           fsr0l	equ	0xFE9
  6460                           wreg	equ	0xFE8
  6461                           indf1	equ	0xFE7
  6462                           postinc1	equ	0xFE6
  6463                           postdec1	equ	0xFE5
  6464                           preinc1	equ	0xFE4
  6465                           plusw1	equ	0xFE3
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           bsr	equ	0xFE0
  6469                           indf2	equ	0xFDF
  6470                           postinc2	equ	0xFDE
  6471                           postdec2	equ	0xFDD
  6472                           preinc2	equ	0xFDC
  6473                           plusw2	equ	0xFDB
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    40
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     66     154
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> STR_2(CODE[8]), STR_1(CODE[9]), m_tabMines(BANK0[84]), menuAccueil@menuMsgs(BANK0[40]), 
		 -> m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@posY(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@posX(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_menuAccueil
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _menuAccueil->_lcd_putMessage
    _lcd_cacheCurseur->_lcd_wrCom
    _lcd_montreCurseur->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _gagne->_afficheGagne
    _afficheGagne->_lcd_putMessage
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   24527
                                             56 BANK0     10    10      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                      _lcd_ecritChar
                           _lcd_init
                  _lcd_montreCurseur
                        _menuAccueil
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          8     6      2    1242
                                             20 BANK0      8     6      2
                            ___awmod
                               _rand
                          _videMines
 ---------------------------------------------------------------------------------
 (2) _videMines                                            4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     7     7      0    4756
                                             16 BANK0      7     7      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    4330
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _menuAccueil                                         42    42      0    2324
                                             14 BANK0     42    42      0
                   _lcd_cacheCurseur
                    _lcd_curseurHome
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (2) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           5     5      0     204
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                               10     8      2    2535
                                             16 BANK0     10     8      2
                       _afficheGagne
 ---------------------------------------------------------------------------------
 (2) _afficheGagne                                         2     2      0    1965
                                             14 BANK0      2     2      0
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1520
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    6457
                                             20 BANK0     10     9      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  14    13      1    5672
                                              6 BANK0     14    13      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3487
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        3     3      0    1899
                                             14 BANK0      3     3      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      3     3      0    1899
                                             14 BANK0      3     3      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       9     6      3     859
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (4) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     950
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (4) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (5) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (6) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     _afficheGagne
       _lcd_effaceAffichage
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
   _initTabVue
   _init_serie
   _initialisation
     _srand
   _lcd_ecritChar
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrData
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_montreCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _menuAccueil
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_curseurHome
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _videMines

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      9A       5       96.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      15        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 16:26:27 2019

    __end_of_calculToucheCombien 0ACA                               l92 13D0  
                             l88 13FA             ??_enleveTuilesAutour 00BB  
            ___wmul@multiplicand 00B6                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000     __size_of_lcd_strobeEnableBit 0008  
                            l121 1E46                              l107 1D66  
                            l116 1980                              l140 1A42  
                            l205 0E42                              l133 1CE0  
                            l302 234C                              l310 21AA  
                            l126 1EB4                              l230 226E  
                            l223 10BA                              l152 171C  
                            l305 2308                              l233 227E  
                            l217 1014                              l322 1FF6  
                            l227 2060                              l331 233E  
                            l308 216E                              l316 1F8C  
                            l236 221E                              l172 0AC8  
                            l309 21A2                              l325 22A6  
                            l190 131C                              l319 2252  
                            l328 2326                              l185 18A2  
                            l346 1DD8                              l363 1AF6  
                            l259 22EC                              l357 2168  
                            l382 22CE                              l366 232E  
                            l376 1C4A                              l369 2336  
                            l393 1F10                              l626 1BA8  
                            l394 1F20                              l379 2346  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                   __CFG_BORV$18 000000                     ___awmod@sign 00C7  
                            prod 000FF3                      lcd_gotoXY@x 00B8  
                            wreg 000FE8                      lcd_gotoXY@y 00B7  
   __size_of_lcd_effaceAffichage 000E                      main@nbMines 00F2  
                   __CFG_LVP$OFF 000000                             l2001 1F2A  
                           l2011 1F3C                             l2003 1F2E  
                           l2021 1F54                             l2013 1F40  
                           l2005 1F2E                             l2101 22A8  
                           l1046 2318                             l2031 1F88  
                           l2023 1F66                             l2015 1F40  
                           l2007 1F30                             l2103 22C6  
                           l2111 1ED6                             l2025 1F7A  
                           l2017 1F48                             l2009 1F32  
                           l2041 222C                             l2201 0A42  
                           l2113 1EE6                             l1049 2114  
                           l2121 1C52                             l2027 1F84  
                           l2019 1F4C                             l2051 223E  
                           l2043 222E                             l2035 2224  
                           l2203 0A46                             l2115 1EF0  
                           l2107 1EB6                             l2131 1C84  
                           l2029 1F88                             l2053 2246  
                           l2045 2230                             l2037 2228  
                           l2213 2258                             l2301 1FBC  
                           l2117 2328                             l2205 0A5A  
                           l2109 1EC8                             l2141 20C0  
                           l2133 1CB4                             l2125 1C68  
                           l2055 224A                             l2047 223A  
                           l2039 222C                             l2063 211A  
                           l2231 0B0C                             l2223 0ACE  
                           l2215 226C                             l2311 1FD8  
                           l2303 1FC2                             l2207 0AC0  
                           l2151 0642                             l2143 20F6  
                           l2135 1CB8                             l2127 1C6E  
                           l2119 1C4C                             l2057 224A  
                           l2049 223E                             l2065 212A  
                           l2073 2148                             l2081 1A9A  
                           l2241 0B42                             l2233 0B1E  
                           l2225 0ADE                             l2217 226C  
                           l2401 221A                             l2321 1BAA  
                           l2313 1FE0                             l2305 1FC6  
                           l2161 0724                             l2153 0698  
                           l2209 0AC4                             l2145 2108  
                           l2137 1CCA                             l2091 1D90  
                           l2059 224E                             l2067 2134  
                           l2083 1A9E                             l2251 0C5E  
                           l2243 0B54                             l2235 0B24  
                           l2219 227C                             l2075 231A  
                           l2411 22E0                             l2403 22D0  
                           l2331 1BD2                             l2323 1BB0  
                           l2315 1FE6                             l2307 1FCE  
                           l2171 0816                             l2163 078A  
                           l2155 06AE                             l2139 1CCE  
                           l2093 1DA0                             l2085 1D6C  
                           l2069 213E                             l2077 1A44  
                           l2261 0DDC                             l2253 0C76  
                           l2245 0B66                             l2237 0B28  
                           l2229 0AFA                             l2413 22E2  
                           l2405 22D4                             l2341 1C30  
                           l2325 1BB6                             l2317 1FEA  
                           l2309 1FD4                             l2421 22A2  
                           l2181 08A8                             l2173 081A  
                           l2165 078E                             l2157 070C  
                           l2149 063C                             l2501 159C  
                           l2087 1D70                             l2079 1A4E  
                           l2271 0E22                             l2263 0DE2  
                           l2255 0D48                             l2247 0B6C  
                           l2415 22E4                             l2407 22DC  
                           l2343 1C34                             l2335 1BE8  
                           l2319 1FF2                             l2431 1D26  
                           l2423 1CE2                             l2191 094E  
                           l2183 08BC                             l2175 0830  
                           l2167 07A4                             l2159 0710  
                           l2511 1678                             l2503 15B4  
                           l2351 1B0C                             l2089 1D80  
                           l2097 1DB0                             l2273 0E28  
                           l2265 0DE6                             l2249 0BE6  
                           l2257 0DB6                             l2281 2020  
                           l2601 0F58                             l2441 18A4  
                           l2417 22E6                             l2409 22DE  
                           l2337 1C1A                             l2345 1C46  
                           l2329 1BCC                             l2433 1D3E  
                           l2425 1CFE                             l2193 0964  
                           l2185 08D0                             l2177 0846  
                           l2169 07B8                             l2513 16A8  
                           l2505 15C8                             l2521 16D4  
                           l2361 1B40                             l2353 1B14  
                           l2275 0E2C                             l2259 0DCA  
                           l2267 0DFC                             l2283 2044  
                           l2603 0F94                             l2611 102A  
                           l2443 18AA                             l2099 2338  
                           l2339 1C1E                             l2291 1FA6  
                           l2419 2280                             l2435 1D42  
                           l2427 1D02                             l2195 09CA  
                           l2187 0936                             l2179 08A4  
                           l2531 170A                             l2523 16DA  
                           l2515 16AC                             l2507 1606  
                           l2371 1B7C                             l2363 1B48  
                           l2355 1B18                             l2347 1AF8  
                           l2541 1E04                             l2533 1DDA  
                           l2269 0E10                             l2277 1FF8  
                           l2621 108E                             l2613 102E  
                           l2605 0FD2                             l2461 1926  
                           l2453 18DC                             l2285 230A  
                           l2293 1FA8                             l2437 1D46  
                           l2429 1D1A                             l2197 09CE  
                           l2189 093A                             l2509 163A  
                           l2517 16BE                             l2373 1B82  
                           l2365 1B50                             l2357 1B26  
                           l2349 1AFE                             l2701 135E  
                           l2543 1E30                             l2535 1DE0  
                           l2551 1738                             l2279 2008  
                           l2623 10A0                             l2607 1010  
                           l2615 1040                             l2471 196A  
                           l2455 190C                             l2463 1938  
                           l2447 18C0                             l2391 220C  
                           l2383 21EC                             l2295 1FAA  
                           l2287 1F8E                             l2439 1D62  
                           l2199 09E4                             l2527 16F0  
                           l2519 16C2                             l2367 1B5E  
                           l2375 1B88                             l2359 1B2E  
                           l2711 139E                             l2703 1362  
                           l2545 1E34                             l2641 115C  
                           l2561 17C6                             l2553 1752  
                           l2625 10A4                             l2633 10B8  
                           l2617 1052                             l2609 1018  
                           l2473 196E                             l2465 193E  
                           l2457 1910                             l2449 18C6  
                           l2393 220E                             l2385 21F4  
                           l2297 1FB0                             l2289 1F92  
                           l2529 1706                             l2377 1B98  
                           l2369 1B74                             l2481 19BE  
                           l2721 1408                             l2713 13BA  
                           l2705 1366                             l2539 1DF6  
                           l2651 11FE                             l2643 11AA  
                           l2571 182E                             l2555 176A  
                           l2563 17D2                             l2627 10B2  
                           l2619 1064                             l2459 1922  
                           l2395 2210                             l2387 21FE  
                           l2299 1FB4                             l2547 2330  
                           l2491 156A                             l2379 1BA0  
                           l2483 19FC                             l2475 1982  
                           l2731 152C                             l2723 1454  
                           l2715 13CC                             l2707 137E  
                           l2653 124C                             l2637 10C0  
                           l2573 1848                             l2565 17EC  
                           l2557 177A                             l2549 171E  
                           l2581 0E60                             l2469 1954  
                           l2397 2214                             l2389 2200  
                           l2485 1A2C                             l2477 1986  
                           l2733 1532                             l2725 1494  
                           l2717 13DE                             l2709 138C  
                           l2671 1E72                             l2663 1E48  
                           l2655 12C8                             l2639 110E  
                           l2575 187A                             l2567 1806  
                           l2559 1794                             l2583 0E66  
                           l2399 2216                             l2495 1580  
                           l2479 198E                             l2487 1A30  
                           l2727 149E                             l2719 13F2  
                           l2735 1544                             l2673 1E9E  
                           l2665 1E4E                             l2657 130E  
                           l2649 11B0                             l2569 181E  
                           l2577 1886                             l2593 0E98  
                           l2497 1586                             l2489 155E  
                           l2729 14EC                             l2675 1EA2  
                           l2659 131A                             l2595 0ED4  
                           l2587 0E7C                             l2579 0E44  
                           l2691 1342                             l1981 2184  
                           l1973 22F2                             l2669 1E64  
                           l2597 0F12                             l2589 0E82  
                           l2693 1346                             l2685 131E  
                           l1991 2192                             l1983 2184  
                           l1975 216A                             l2599 0F50  
                           l2695 134A                             l2687 133A  
                           l1969 2348                             l1993 21A4  
                           l1985 2186                             l1977 2172  
                           l2697 134E                             l2689 133E  
                           l1987 2190                             l1979 2182  
                           l2699 135A                             l1989 2192  
                           l1997 2340                             l1999 1F26  
                           STR_1 0629                             STR_2 0632  
                           u2000 176A                             u2001 1766  
                           u1210 21A2                             u2010 1794  
                           u1211 219E                             u2011 1790  
                           u1220 1F66                             u2020 17C6  
                           u2100 0F12                             u1300 1C80  
                           u1221 1F62                             u2021 17C2  
                           u2101 0F0E                             u1301 1C7C  
                           u1230 1F7A                             u2030 17EC  
                           u2110 0F50                             u1310 1CCA  
                           u1231 1F76                             u2031 17E8  
                           u2111 0F4C                             u1311 1CC6  
                           u1240 1A96                             u2040 181E  
                           u2200 10A0                             u2120 0F94  
                           u1400 0816                             u1320 1CE0  
                           u2041 181A                             u2201 109C  
                           u2121 0F90                             u1401 0812  
                           u1321 1CDC                             u1250 1AE6  
                           u2210 110E                             u2050 1848  
                           u2130 0FD2                             u1410 0830  
                           u1330 0698                             u2211 110A  
                           u2051 1844                             u2131 0FCE  
                           u1411 082C                             u1331 0694  
                           u1260 1AF6                             u2220 115C  
                           u2060 187A                             u2140 1010  
                           u1500 09E4                             u1420 0846  
                           u1340 06AE                             u2300 13BA  
                           u1261 1AF2                             u2221 1158  
                           u2061 1876                             u2141 100C  
                           u1501 09E0                             u1421 0842  
                           u1341 06AA                             u2301 13B6  
                           u2230 11AA                             u2150 102A  
                           u2070 0E78                             u1510 0A42  
                           u1430 08A4                             u1350 070C  
                           u1270 1ED6                             u2310 13CC  
                           u1247 1A8C                             u2231 11A6  
                           u2151 1026                             u2071 0E74  
                           u1511 0A3E                             u1431 08A0  
                           u1351 0708                             u1271 1ED2  
                           u2311 13C8                             u1600 0B66  
                           u2240 11FE                             u2160 1040  
                           u2080 0E94                             u1520 0A5A  
                           u1440 08BC                             u1360 0724  
                           u1280 1F10                             u2320 13DE  
                           u1257 1ADC                             u1601 0B62  
                           u2241 11FA                             u2161 103C  
                           u2081 0E90                             u1521 0A56  
                           u1441 08B8                             u1361 0720  
                           u1281 1F0C                             u2321 13DA  
                           u1610 0BE6                             u2250 124C  
                           u2170 1052                             u2090 0ED4  
                           u1530 0AC0                             u1450 08D0  
                           u1370 078A                             u1290 1C64  
                           u2330 1408                             u1611 0BE2  
                           u2251 1248                             u2171 104E  
                           u2091 0ED0                             u1531 0ABC  
                           u1451 08CC                             u1371 0786  
                           u1291 1C60                             u2331 1404  
                           u2260 1E60                             u1620 0C5E  
                           u1540 227C                             u2180 1064  
                           u1700 1BE4                             u1460 0936  
                           u1380 07A4                             u2340 1454  
                           u2261 1E5C                             u1621 0C5A  
                           u1541 2278                             u2181 1060  
                           u1701 1BE0                             u1461 0932  
                           u1381 07A0                             u2341 1450  
                           u2270 1EB4                             u1630 0DCA  
                           u1550 0AF6                             u2190 108E  
                           u1710 1C30                             u1470 094E  
                           u1390 07B8                             u2350 14EC  
                           u2271 1EB0                             u1631 0DC6  
                           u1551 0AF2                             u2191 108A  
                           u1711 1C2C                             u2407 1FB6  
                           u1471 094A                             u1391 07B4  
                           u2351 14E8                             u1640 0DDC  
                           u1560 0B0C                             u1800 18BC  
                           u1720 1C46                             u1480 0964  
                           u1641 0DD8                             u1561 0B08  
                           u1801 18B8                             u1721 1C42  
                           u2417 1FC8                             u1481 0960  
                           u1650 0DFC                             u1570 0B1E  
                           u1810 18D8                             u1490 09CA  
                           u1730 1B0C                             u2290 138C  
                           u1651 0DF8                             u1571 0B1A  
                           u1811 18D4                             u2427 1FDA  
                           u1491 09C6                             u1731 1B08  
                           u2291 1388                             u1660 0E10  
                           u1580 0B3E                             u1820 1922  
                           u1900 15C8                             u1740 1B26  
                           u1661 0E0C                             u1581 0B3A  
                           u1821 191E                             u2437 1FEC  
                           u1901 15C4                             u1741 1B22  
                           u1670 0E22                             u1590 0B54  
                           u1830 1938                             u1910 1606  
                           u1750 1B40                             u1671 0E1E  
                           u1591 0B50                             u2447 2050  
                           u1831 1934                             u1911 1602  
                           u1751 1B3C                             u2367 153A  
                           u1680 0E42                             u1840 1950  
                           u1920 1678                             u1760 1B5E  
                           u2457 1F4E                             u1681 0E3E  
                           u1841 194C                             u1921 1674  
                           u1761 1B5A                             u2377 154C  
                           u1850 1980                             u1690 1BC8  
                           u1930 16BE                             u1770 1B74  
                           u2467 1F7C                             u1851 197C  
                           u1691 1BC4                             u2387 1D52  
                           u1931 16BA                             u1771 1B70  
                           u1940 16D4                             u1780 1B98  
                           u1860 19FC                             u2397 1F9A  
                           u1941 16D0                             u1781 1B94  
                           u1861 19F8                             u1790 1CF4  
                           u1950 16EC                             u1870 1A42  
                           u1951 16E8                             u1871 1A3E  
                           u1960 171C                             u1880 157C  
                           u1961 1718                             u1881 1578  
                           u1970 1DF2                             u1890 1598  
                           u1971 1DEE                             u1891 1594  
                           u1980 1E46                             u1981 1E42  
                           u1990 1738                             u1991 1734  
                           _RCIF 007CF5                             _TMR1 000FCE  
               ??_initialisation 00B6                             _main 131E  
                           _rand 20C0                             fsr0h 000FEA  
                           indf0 000FEF                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             prodh 000FF4  
                           prodl 000FF3                             start 0000  
                ?_lcd_putMessage 00B9                    __CFG_IESO$OFF 000000  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                   ?_menuAccueil 00B4                  ??_lcd_ecritChar 00B7  
                          ?_main 00B4                            ?_rand 00C0  
                __end_of___awmod 1BAA                            _ANSEL 000F7E  
                          _RCREG 000FAE                            _SPBRG 000FAF  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                  __end_of_deplace 18A4  
            ___lmul@multiplicand 00B8                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                  ??_lcd_initCGRam 00B7  
                          _gagne 0E44                            _randx 00F6  
                          _srand 230A                            tablat 000FF5  
                          status 000FD8            __size_of_afficheGagne 006A  
       __end_of_lcd_cacheCurseur 2330                   __CFG_HFOFST$ON 000000  
              ??_afficheTabMines 00C2                   __CFG_PBADEN$ON 000000  
               _metToucheCombien 155E                  __initialization 2062  
                   __end_of_main 155E                     __end_of_rand 2116  
            enleveTuilesAutour@i 00C7              enleveTuilesAutour@j 00C6  
            enleveTuilesAutour@x 00C3              enleveTuilesAutour@y 00BA  
           lcd_putMessage@chaine 00B9       calculToucheCombien@colonne 00BC  
                         ??_main 00EC                           ??_rand 00C2  
                  main@finPartie 00F1                    __activetblptr 000003  
                   _afficheGagne 1FF8                           ?_gagne 00C4  
                         _ADCON1 000FC1                           _ADRESH 000FC4  
                         ?_srand 00B4                           _ANSELH 000F7F  
                    initTabVue@i 00B6                      initTabVue@j 00B7  
                    initTabVue@k 00B8                   __CFG_WDTEN$OFF 000000  
                   ?_rempliMines 00C8                           _SPBRGH 000FB0  
                 __CFG_XINST$OFF 000000                   lcd_initCGRam@i 00B9  
                 lcd_initCGRam@j 00BA                   getAnalog@canal 00B5  
               __end_of_lcd_busy 21AC                 __end_of_lcd_init 22A8  
                         ___lmul 1EB6                           ___wmul 22A8  
                 __CFG_STVREN$ON 000000                        ??___awmod 00C6  
                         _demine 10BC                           gagne@i 00CC  
                         gagne@j 00CD                           clear_0 20A8  
                         clear_1 20B4                  ___awmod@divisor 00C4  
                      ??_deplace 00BD                  ___awmod@counter 00C6  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         srand@x 00B4           __size_of_afficheTabVue 006E  
              _lcd_resetSequence 1F8E                       __accesstop 0060  
        __end_of__initialization 20BA              _lcd_strobeEnableBit 2340  
             ?_lcd_resetSequence 00B4                    ___rparam_used 000000  
            _lcd_effaceAffichage 231A                     __pidataBANK0 234E  
                   __pidataBANK1 21AC              ??_lcd_resetSequence 00B6  
                  __end_of_gagne 10BC                    __end_of_srand 231A  
           __size_of_menuAccueil 0086             ?_lcd_strobeEnableBit 00B4  
             __size_of_getAnalog 002C                _lcd_montreCurseur 2330  
             ?_lcd_montreCurseur 00B4             ?_lcd_effaceAffichage 00B4  
             __size_of_lcd_wrCom 006C                          ??_gagne 00C6  
      __end_of_lcd_resetSequence 1FF8                          ??_srand 00B6  
       __size_of_lcd_lireDonnees 0006                _lcd_ecrireDonnees 22EE  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
               ??_lcd_putMessage 00BC              ??_lcd_montreCurseur 00B7  
             ?_lcd_ecrireDonnees 00B4         __size_of_lcd_curseurHome 0008  
            ??_lcd_ecrireDonnees 00B4                          ?___lmul 00B4  
                        ?___wmul 00B4                          ?_demine 00C8  
                  _afficheTabVue 1DDA        __end_of_lcd_montreCurseur 2338  
                 ___lmul@product 00BC      __size_of_enleveTuilesAutour 037A  
          ??_lcd_strobeEnableBit 00B4               __size_of_videMines 0096  
   __size_of_calculToucheCombien 048E         __end_of_metToucheCombien 171E  
                     _lcd_gotoXY 1D68            ??_lcd_effaceAffichage 00B7  
                     _lcd_wrData 2220                  _afficheTabMines 1E48  
      __end_of_lcd_ecrireDonnees 230A                        ?_lcd_busy 00B4  
                      ?_lcd_init 00B4          lcd_ecrireDonnees@donnee 00B5  
    metToucheCombien@minesTouche 00C7                       _m_tabMines 0060  
              __end_of_getAnalog 2280                ?_lcd_cacheCurseur 00B4  
           __size_of_rempliMines 00C2                          __Hparam 0000  
                        __Lparam 0000               ??_lcd_cacheCurseur 00B7  
                     _initTabVue 18A4                __end_of_lcd_wrCom 1F8E  
                 ?_afficheTabVue 00B4                  __size_of___lmul 006C  
                        ___awmod 1AF8                  __size_of___wmul 0028  
                __size_of_demine 0262                     __psmallconst 0600  
                        __pcinit 2062                       _init_serie 22D0  
                      _ANSELbits 000F7E                          __ramtop 0600  
                        _deplace 171E                          __ptext0 131E  
                        __ptext1 1982                          __ptext2 1C4C  
                        __ptext3 20C0                          __ptext4 1EB6  
                        __ptext5 1AF8                          __ptext6 155E  
                        __ptext7 063C                          __ptext8 1CE2  
                        __ptext9 2328            __end_of_lcd_ecritChar 216A  
                lcd_busy@adresse 00B5                        _T1CONbits 000FCD  
               ___awmod@dividend 00C2                          demine@x 00D1  
                        demine@y 00C8                 lcd_ecritChar@car 00B7  
                     ??_lcd_busy 00B4                       ??_lcd_init 00BB  
     __size_of_lcd_resetSequence 006A             end_of_initialization 20BA  
          __end_of_lcd_initCGRam 1C4C                __end_of_videMines 1CE2  
calculToucheCombien@nombreTouche 00C3                ??_lcd_lireDonnees 00B4  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE          __size_of_initialisation 0034  
              ??_lcd_curseurHome 00B7              lcd_ecritChar@posRam 00B8  
     __size_of_lcd_montreCurseur 0008                        _PORTAbits 000F80  
                      _PORTBbits 000F81          __end_of_afficheTabMines 1EB6  
                    ?_lcd_gotoXY 00B7                        _TRISCbits 000F94  
                    ?_lcd_wrData 00B4       __size_of_lcd_ecrireDonnees 001C  
                      _TXSTAbits 000FAC                  ??_afficheTabVue 00C2  
                    ?_initTabVue 00B4                   __end_of___lmul 1F22  
                 __end_of___wmul 22D0                      _BAUDCONbits 000FB8  
                    ?_init_serie 00B4                   __end_of_demine 131E  
            start_initialization 2062              _calculToucheCombien 063C  
                  ??_menuAccueil 00C2              __size_of_lcd_gotoXY 0072  
                       ??___lmul 00BC                         ??___wmul 00B8  
                  rempliMines@nb 00C8              __size_of_lcd_wrData 0034  
                       ??_demine 00C9                      __pdataBANK0 00F6  
                    __pdataBANK1 0154                 __CFG_LPT1OSC$OFF 000000  
           ?_calculToucheCombien 00BA                 ?_afficheTabMines 00B4  
                  __pcstackBANK0 00B4                ?_metToucheCombien 00B4  
               afficheTabMines@i 00C4              __size_of_initTabVue 00DE  
             ??_metToucheCombien 00C4             rempliMines@mineReste 00CD  
              __size_of_lcd_busy 0042                __size_of_lcd_init 0028  
            menuAccueil@menuMsgs 00C4              __size_of_init_serie 001E  
               gagne@resteTuiles 00CB                __CFG_CCP2MX$PORTC 000000  
                      _getAnalog 2254      __end_of_lcd_strobeEnableBit 2348  
                 _initialisation 21EC       __end_of_enleveTuilesAutour 0E44  
                       ?___awmod 00C2                 menuAccueil@F2903 0601  
                       ?_deplace 00B9      __end_of_lcd_effaceAffichage 2328  
                      _lcd_wrCom 1F22            ??_calculToucheCombien 00BE  
      __size_of_lcd_cacheCurseur 0008              __end_of_menuAccueil 1D68  
                    __smallconst 0600        enleveTuilesAutour@xTabCol 00C4  
                  ?_afficheGagne 00B4                   __size_of_gagne 0278  
                _lcd_lireDonnees 2348              lcd_wrData@caractere 00B6  
                 __size_of_srand 0010                    ??_rempliMines 00CA  
                     videMines@i 00B6                       videMines@j 00B7  
                _lcd_curseurHome 2338                   ___wmul@product 00B8  
         __end_of_initialisation 2220                        _videMines 1C4C  
                     ?_getAnalog 00B4                 __CFG_WDTPS$32768 000000  
        __size_of_lcd_putMessage 00B4                       ?_lcd_wrCom 00B4  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
              ___wmul@multiplier 00B4                   ??_afficheGagne 00C2  
                   ??_lcd_gotoXY 00B8                     ??_lcd_wrData 00B6  
              lcd_wrCom@commande 00B6                ___lmul@multiplier 00B4  
                      copy_data0 2076                        copy_data1 2096  
                       __Hparam0 0000           __size_of_lcd_ecritChar 0054  
                       __Lparam0 0000                  ?_initialisation 00B4  
            __end_of_rempliMines 1A44                       ?_videMines 00B4  
                   ??_initTabVue 00B4               __CFG_BOREN$SBORDIS 000000  
                   rempliMines@x 00CE                     rempliMines@y 00CF  
                    _menuAccueil 1CE2               __end_of_lcd_gotoXY 1DDA  
             __end_of_lcd_wrData 2254                 __size_of___awmod 00B2  
                   ??_init_serie 00B4           __size_of_lcd_initCGRam 00A2  
                lcd_putMessage@j 00C1                 __size_of_deplace 0186  
        __end_of_lcd_lireDonnees 234E                         _matCGRAM 0154  
        __end_of_lcd_curseurHome 2340                         __ptext10 2330  
                       __ptext11 2280                         __ptext20 1FF8  
                       __ptext12 1F8E                         __ptext21 231A  
                       __ptext13 1BAA                         __ptext30 2116  
                       __ptext22 171E                         __ptext14 2338  
                       __ptext31 2220                         __ptext23 2254  
                       __ptext15 21EC                         __ptext32 1D68  
                       __ptext24 10BC                         __ptext16 230A  
                       __ptext33 1F22                         __ptext25 0ACA  
                       __ptext17 22D0                         __ptext34 2340  
                       __ptext26 22A8                         __ptext18 18A4  
                       __ptext35 22EE                         __ptext27 1DDA  
                       __ptext19 0E44                         __ptext36 216A  
                       __ptext28 1E48                         __ptext37 2348  
                       __ptext29 1A44                metToucheCombien@i 00C9  
              metToucheCombien@j 00CA                metToucheCombien@k 00C8  
                       _lcd_busy 216A                         _lcd_init 2280  
             __end_of_initTabVue 1982         calculToucheCombien@ligne 00BA  
                       _m_tabVue 0100                    __size_of_main 0240  
                  __size_of_rand 0056                      gagne@pMines 00C4  
             __end_of_init_serie 22EE                         deplace@x 00B9  
                       deplace@y 00BB                      ??_getAnalog 00B4  
          __end_of_afficheTabVue 1E48                         main@posX 00F5  
                       main@posY 00F4                      ??_lcd_wrCom 00B6  
               _lcd_cacheCurseur 2328                    _lcd_ecritChar 2116  
             gagne@compteurBombe 00CA                   afficheTabVue@i 00C4  
                  _lcd_initCGRam 1BAA         __end_ofmenuAccueil@F2903 0629  
                    _rempliMines 1982        __size_of_metToucheCombien 01C0  
                    ??_videMines 00B4             __end_of_afficheGagne 2062  
                 _lcd_putMessage 1A44                   ?_lcd_ecritChar 00B4  
               ?_lcd_lireDonnees 00B4               _enleveTuilesAutour 0ACA  
               ?_lcd_curseurHome 00B4         __size_of_afficheTabMines 006E  
    enleveTuilesAutour@yTabLigne 00C5                   ?_lcd_initCGRam 00B4  
            ?_enleveTuilesAutour 00BA                __CFG_FOSC$INTIO67 000000  
         __end_of_lcd_putMessage 1AF8  
